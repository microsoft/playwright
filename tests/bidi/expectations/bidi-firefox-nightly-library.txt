library/beforeunload.spec.ts › should access page after beforeunload [fail]
library/beforeunload.spec.ts › should be able to navigate away from page with beforeunload [fail]
library/beforeunload.spec.ts › should close browser with beforeunload page [pass]
library/beforeunload.spec.ts › should close browsercontext with beforeunload page [pass]
library/beforeunload.spec.ts › should close page with beforeunload listener [pass]
library/beforeunload.spec.ts › should not stall on evaluate when dismissing beforeunload [fail]
library/beforeunload.spec.ts › should run beforeunload if asked for @smoke [fail]
library/browser.spec.ts › should create new page @smoke [pass]
library/browser.spec.ts › should dispatch page.on(close) upon browser.close and reject evaluate [pass]
library/browser.spec.ts › should return browserType [pass]
library/browser.spec.ts › should throw upon second create new page [pass]
library/browser.spec.ts › version should work [pass]
library/browsercontext-add-cookies.spec.ts › should add cookies with empty value [pass]
library/browsercontext-add-cookies.spec.ts › should allow unnamed cookies [fail]
library/browsercontext-add-cookies.spec.ts › should be able to set unsecure cookie for HTTP website [pass]
library/browsercontext-add-cookies.spec.ts › should default to setting secure cookie for HTTPS websites [pass]
library/browsercontext-add-cookies.spec.ts › should have |expires| set to |-1| for session cookies [pass]
library/browsercontext-add-cookies.spec.ts › should isolate cookies between launches [pass]
library/browsercontext-add-cookies.spec.ts › should isolate cookies in browser contexts [pass]
library/browsercontext-add-cookies.spec.ts › should isolate persistent cookies [pass]
library/browsercontext-add-cookies.spec.ts › should isolate send cookie header [pass]
library/browsercontext-add-cookies.spec.ts › should isolate session cookies [pass]
library/browsercontext-add-cookies.spec.ts › should not block third party SameSite=None cookies [fail]
library/browsercontext-add-cookies.spec.ts › should not set a cookie on a data URL page [pass]
library/browsercontext-add-cookies.spec.ts › should not set a cookie with blank page URL [pass]
library/browsercontext-add-cookies.spec.ts › should roundtrip cookie [pass]
library/browsercontext-add-cookies.spec.ts › should send cookie header [pass]
library/browsercontext-add-cookies.spec.ts › should set a cookie on a different domain [pass]
library/browsercontext-add-cookies.spec.ts › should set a cookie with a path [pass]
library/browsercontext-add-cookies.spec.ts › should set cookie with reasonable defaults [pass]
library/browsercontext-add-cookies.spec.ts › should set cookies for a frame [fail]
library/browsercontext-add-cookies.spec.ts › should set multiple cookies [pass]
library/browsercontext-add-cookies.spec.ts › should set secure cookies on secure WebSocket [fail]
library/browsercontext-add-cookies.spec.ts › should work @smoke [pass]
library/browsercontext-add-cookies.spec.ts › should work with expires=-1 [pass]
library/browsercontext-add-cookies.spec.ts › should(not) block third party cookies [pass]
library/browsercontext-add-init-script.spec.ts › should work with browser context scripts @smoke [pass]
library/browsercontext-add-init-script.spec.ts › should work with browser context scripts for already created pages [pass]
library/browsercontext-add-init-script.spec.ts › should work with browser context scripts with a path [pass]
library/browsercontext-add-init-script.spec.ts › should work without navigation in popup [fail]
library/browsercontext-add-init-script.spec.ts › should work without navigation, after all bindings [pass]
library/browsercontext-base-url.spec.ts › should be able to match a URL relative to its given URL with urlMatcher [fail]
library/browsercontext-base-url.spec.ts › should construct a new URL when a baseURL in browser.newContext is passed to page.goto @smoke [pass]
library/browsercontext-base-url.spec.ts › should construct a new URL when a baseURL in browser.newPage is passed to page.goto [pass]
library/browsercontext-base-url.spec.ts › should construct a new URL when a baseURL in browserType.launchPersistentContext is passed to page.goto [pass]
library/browsercontext-base-url.spec.ts › should construct the URLs correctly when a baseURL with a trailing slash in browser.newPage is passed to page.goto [pass]
library/browsercontext-base-url.spec.ts › should construct the URLs correctly when a baseURL without a trailing slash in browser.newPage is passed to page.goto [pass]
library/browsercontext-base-url.spec.ts › should not construct a new URL when valid URLs are passed [pass]
library/browsercontext-base-url.spec.ts › should not construct a new URL with baseURL when a glob was used [pass]
library/browsercontext-basic.spec.ts › close() should abort waitForEvent [pass]
library/browsercontext-basic.spec.ts › close() should be callable twice [pass]
library/browsercontext-basic.spec.ts › close() should work for empty context [pass]
library/browsercontext-basic.spec.ts › default user agent [pass]
library/browsercontext-basic.spec.ts › setContent should work after disabling javascript [fail]
library/browsercontext-basic.spec.ts › should be able to click across browser contexts [fail]
library/browsercontext-basic.spec.ts › should be able to navigate after disabling javascript [pass]
library/browsercontext-basic.spec.ts › should close all belonging pages once closing context [fail]
library/browsercontext-basic.spec.ts › should create new context @smoke [pass]
library/browsercontext-basic.spec.ts › should disable javascript [fail]
library/browsercontext-basic.spec.ts › should emulate media in cross-process iframe [fail]
library/browsercontext-basic.spec.ts › should emulate media in popup [fail]
library/browsercontext-basic.spec.ts › should emulate navigator.onLine [fail]
library/browsercontext-basic.spec.ts › should isolate localStorage and cookies @smoke [pass]
library/browsercontext-basic.spec.ts › should make a copy of default viewport [pass]
library/browsercontext-basic.spec.ts › should not allow deviceScaleFactor with null viewport [pass]
library/browsercontext-basic.spec.ts › should not allow isMobile with null viewport [pass]
library/browsercontext-basic.spec.ts › should not hang on promises after disabling javascript [pass]
library/browsercontext-basic.spec.ts › should not report frameless pages on error [pass]
library/browsercontext-basic.spec.ts › should pass self to close event [pass]
library/browsercontext-basic.spec.ts › should propagate default viewport to the page [pass]
library/browsercontext-basic.spec.ts › should respect deviceScaleFactor [pass]
library/browsercontext-basic.spec.ts › should return all of the pages [pass]
library/browsercontext-basic.spec.ts › should work with offline option [fail]
library/browsercontext-basic.spec.ts › window.open should use parent tab context [pass]
library/browsercontext-clearcookies.spec.ts › should clear cookies [pass]
library/browsercontext-clearcookies.spec.ts › should isolate cookies when clearing [pass]
library/browsercontext-clearcookies.spec.ts › should remove cookies by domain [pass]
library/browsercontext-clearcookies.spec.ts › should remove cookies by name [pass]
library/browsercontext-clearcookies.spec.ts › should remove cookies by name and domain [pass]
library/browsercontext-clearcookies.spec.ts › should remove cookies by name regex [pass]
library/browsercontext-clearcookies.spec.ts › should remove cookies by path [pass]
library/browsercontext-cookies.spec.ts › should add cookies with an expiration [pass]
library/browsercontext-cookies.spec.ts › should be able to send third party cookies via an iframe [fail]
library/browsercontext-cookies.spec.ts › should get a cookie @smoke [pass]
library/browsercontext-cookies.spec.ts › should get a non-session cookie [pass]
library/browsercontext-cookies.spec.ts › should get cookies from multiple urls [pass]
library/browsercontext-cookies.spec.ts › should get multiple cookies [pass]
library/browsercontext-cookies.spec.ts › should parse cookie with large Max-Age correctly [pass]
library/browsercontext-cookies.spec.ts › should properly report "Lax" sameSite cookie [pass]
library/browsercontext-cookies.spec.ts › should properly report "Strict" sameSite cookie [pass]
library/browsercontext-cookies.spec.ts › should properly report httpOnly cookie [pass]
library/browsercontext-cookies.spec.ts › should return cookies with empty value [pass]
library/browsercontext-cookies.spec.ts › should return no cookies in pristine browser context [pass]
library/browsercontext-cookies.spec.ts › should return secure cookies based on HTTP(S) protocol [pass]
library/browsercontext-cookies.spec.ts › should support requestStorageAccess [fail]
library/browsercontext-cookies.spec.ts › should work with subdomain cookie [pass]
library/browsercontext-credentials.spec.ts › should fail with correct credentials and mismatching hostname [pass]
library/browsercontext-credentials.spec.ts › should fail with correct credentials and mismatching port [pass]
library/browsercontext-credentials.spec.ts › should fail with correct credentials and mismatching scheme [pass]
library/browsercontext-credentials.spec.ts › should fail with wrong credentials [timeout]
library/browsercontext-credentials.spec.ts › should fail without credentials [timeout]
library/browsercontext-credentials.spec.ts › should return resource body [fail]
library/browsercontext-credentials.spec.ts › should work with correct credentials @smoke [fail]
library/browsercontext-credentials.spec.ts › should work with correct credentials and matching origin [fail]
library/browsercontext-credentials.spec.ts › should work with correct credentials and matching origin case insensitive [fail]
library/browsercontext-credentials.spec.ts › should work with setHTTPCredentials [timeout]
library/browsercontext-csp.spec.ts › should bypass CSP header [fail]
library/browsercontext-csp.spec.ts › should bypass CSP in iframes as well [fail]
library/browsercontext-csp.spec.ts › should bypass CSP meta tag @smoke [fail]
library/browsercontext-csp.spec.ts › should bypass after cross-process navigation [fail]
library/browsercontext-device.spec.ts › device › should emulate viewport and screen size [fail]
library/browsercontext-device.spec.ts › device › should emulate viewport without screen size [fail]
library/browsercontext-device.spec.ts › device › should reset scroll top after a navigation [pass]
library/browsercontext-device.spec.ts › device › should scroll to a precise position with mobile scale [pass]
library/browsercontext-device.spec.ts › device › should scroll to click [pass]
library/browsercontext-device.spec.ts › device › should scroll twice when emulated [fail]
library/browsercontext-device.spec.ts › device › should support clicking [pass]
library/browsercontext-device.spec.ts › device › should work @smoke [fail]
library/browsercontext-dsf.spec.ts › should fetch hidpi assets [fail]
library/browsercontext-dsf.spec.ts › should fetch lodpi assets @smoke [pass]
library/browsercontext-events.spec.ts › console event should work @smoke [pass]
library/browsercontext-events.spec.ts › console event should work in immediately closed popup [fail]
library/browsercontext-events.spec.ts › console event should work in popup [pass]
library/browsercontext-events.spec.ts › console event should work in popup 2 [fail]
library/browsercontext-events.spec.ts › dialog event should work @smoke [pass]
library/browsercontext-events.spec.ts › dialog event should work in immediately closed popup [timeout]
library/browsercontext-events.spec.ts › dialog event should work in popup [timeout]
library/browsercontext-events.spec.ts › dialog event should work in popup 2 [pass]
library/browsercontext-events.spec.ts › dialog event should work with inline script tag [fail]
library/browsercontext-events.spec.ts › weberror event should work [fail]
library/browsercontext-expose-function.spec.ts › expose binding should work [pass]
library/browsercontext-expose-function.spec.ts › exposeBindingHandle should work [pass]
library/browsercontext-expose-function.spec.ts › should be callable from-inside addInitScript [pass]
library/browsercontext-expose-function.spec.ts › should throw for duplicate registrations [pass]
library/browsercontext-expose-function.spec.ts › should work [fail]
library/browsercontext-expose-function.spec.ts › should work with CSP [fail]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › br decompression › should not fail if response content-length header is missing (br) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › br decompression › should not fail with an empty response with content-length header (Z_BUF_ERROR) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › br decompression › should not fail with an empty response without content-length header (Z_BUF_ERROR) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › br decompression › should not fail with chunked responses (without Content-Length header) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › br decompression › should support decompression [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › deflate decompression › should not fail if response content-length header is missing (deflate) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › deflate decompression › should not fail with an empty response with content-length header (Z_BUF_ERROR) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › deflate decompression › should not fail with an empty response without content-length header (Z_BUF_ERROR) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › deflate decompression › should not fail with chunked responses (without Content-Length header) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › deflate decompression › should support decompression [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › gzip decompression › should not fail if response content-length header is missing (gzip) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › gzip decompression › should not fail with an empty response with content-length header (Z_BUF_ERROR) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › gzip decompression › should not fail with an empty response without content-length header (Z_BUF_ERROR) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › gzip decompression › should not fail with chunked responses (without Content-Length header) [pass]
library/browsercontext-fetch-algorithms.spec.ts › algorithms › gzip decompression › should support decompression [pass]
library/browsercontext-fetch-happy-eyeballs.spec.ts › get should work [pass]
library/browsercontext-fetch-happy-eyeballs.spec.ts › get should work on request fixture [pass]
library/browsercontext-fetch-happy-eyeballs.spec.ts › https post should work with ignoreHTTPSErrors option [pass]
library/browsercontext-fetch-happy-eyeballs.spec.ts › should work with ip6 and port as the host [pass]
library/browsercontext-fetch.spec.ts › context request should export same storage state as context [pass]
library/browsercontext-fetch.spec.ts › delete should support failOnStatusCode [pass]
library/browsercontext-fetch.spec.ts › delete should support params passed as URLSearchParams [pass]
library/browsercontext-fetch.spec.ts › delete should support params passed as object [pass]
library/browsercontext-fetch.spec.ts › delete should support params passed as string [pass]
library/browsercontext-fetch.spec.ts › delete should support post data [pass]
library/browsercontext-fetch.spec.ts › deleteshould support ignoreHTTPSErrors option [pass]
library/browsercontext-fetch.spec.ts › fetch should not throw on long set-cookie value [pass]
library/browsercontext-fetch.spec.ts › fetch should support failOnStatusCode [pass]
library/browsercontext-fetch.spec.ts › fetch should support params passed as URLSearchParams [pass]
library/browsercontext-fetch.spec.ts › fetch should support params passed as object [pass]
library/browsercontext-fetch.spec.ts › fetch should support params passed as string [pass]
library/browsercontext-fetch.spec.ts › fetch should work [pass]
library/browsercontext-fetch.spec.ts › fetchshould support ignoreHTTPSErrors option [pass]
library/browsercontext-fetch.spec.ts › get should support failOnStatusCode [pass]
library/browsercontext-fetch.spec.ts › get should support params passed as URLSearchParams [pass]
library/browsercontext-fetch.spec.ts › get should support params passed as object [pass]
library/browsercontext-fetch.spec.ts › get should support params passed as string [pass]
library/browsercontext-fetch.spec.ts › get should support post data [pass]
library/browsercontext-fetch.spec.ts › get should work @smoke [pass]
library/browsercontext-fetch.spec.ts › getshould support ignoreHTTPSErrors option [pass]
library/browsercontext-fetch.spec.ts › head should support failOnStatusCode [pass]
library/browsercontext-fetch.spec.ts › head should support params passed as URLSearchParams [pass]
library/browsercontext-fetch.spec.ts › head should support params passed as object [pass]
library/browsercontext-fetch.spec.ts › head should support params passed as string [pass]
library/browsercontext-fetch.spec.ts › head should support post data [pass]
library/browsercontext-fetch.spec.ts › headshould support ignoreHTTPSErrors option [pass]
library/browsercontext-fetch.spec.ts › patch should support failOnStatusCode [pass]
library/browsercontext-fetch.spec.ts › patch should support params passed as URLSearchParams [pass]
library/browsercontext-fetch.spec.ts › patch should support params passed as object [pass]
library/browsercontext-fetch.spec.ts › patch should support params passed as string [pass]
library/browsercontext-fetch.spec.ts › patch should support post data [pass]
library/browsercontext-fetch.spec.ts › patchshould support ignoreHTTPSErrors option [pass]
library/browsercontext-fetch.spec.ts › post should support failOnStatusCode [pass]
library/browsercontext-fetch.spec.ts › post should support params passed as URLSearchParams [pass]
library/browsercontext-fetch.spec.ts › post should support params passed as object [pass]
library/browsercontext-fetch.spec.ts › post should support params passed as string [pass]
library/browsercontext-fetch.spec.ts › post should support post data [pass]
library/browsercontext-fetch.spec.ts › postshould support ignoreHTTPSErrors option [pass]
library/browsercontext-fetch.spec.ts › put should support failOnStatusCode [pass]
library/browsercontext-fetch.spec.ts › put should support params passed as URLSearchParams [pass]
library/browsercontext-fetch.spec.ts › put should support params passed as object [pass]
library/browsercontext-fetch.spec.ts › put should support params passed as string [pass]
library/browsercontext-fetch.spec.ts › put should support post data [pass]
library/browsercontext-fetch.spec.ts › putshould support ignoreHTTPSErrors option [pass]
library/browsercontext-fetch.spec.ts › should abort requests when browser context closes [pass]
library/browsercontext-fetch.spec.ts › should accept bool and numeric params [pass]
library/browsercontext-fetch.spec.ts › should add cookies from Set-Cookie header [pass]
library/browsercontext-fetch.spec.ts › should add default headers [pass]
library/browsercontext-fetch.spec.ts › should add default headers to redirects [pass]
library/browsercontext-fetch.spec.ts › should add session cookies to request [pass]
library/browsercontext-fetch.spec.ts › should allow to override default headers [pass]
library/browsercontext-fetch.spec.ts › should dispose [pass]
library/browsercontext-fetch.spec.ts › should dispose when context closes [pass]
library/browsercontext-fetch.spec.ts › should encode to application/json by default [pass]
library/browsercontext-fetch.spec.ts › should follow redirects [pass]
library/browsercontext-fetch.spec.ts › should follow redirects correctly when Location header contains UTF-8 characters [pass]
library/browsercontext-fetch.spec.ts › should handle cookies on redirects [pass]
library/browsercontext-fetch.spec.ts › should inherit ignoreHTTPSErrors from context [pass]
library/browsercontext-fetch.spec.ts › should not add context cookie if cookie header passed as a parameter [pass]
library/browsercontext-fetch.spec.ts › should not hang on a brotli encoded Range request [pass]
library/browsercontext-fetch.spec.ts › should not lose body while handling Set-Cookie header [pass]
library/browsercontext-fetch.spec.ts › should not work after context dispose [pass]
library/browsercontext-fetch.spec.ts › should not work after dispose [pass]
library/browsercontext-fetch.spec.ts › should override request parameters [pass]
library/browsercontext-fetch.spec.ts › should preserve cookie order from Set-Cookie header [pass]
library/browsercontext-fetch.spec.ts › should propagate custom headers with redirects [pass]
library/browsercontext-fetch.spec.ts › should propagate extra http headers with redirects [fail]
library/browsercontext-fetch.spec.ts › should remove cookie with expires far in the past [pass]
library/browsercontext-fetch.spec.ts › should remove cookie with negative max-age [pass]
library/browsercontext-fetch.spec.ts › should resolve url relative to baseURL [pass]
library/browsercontext-fetch.spec.ts › should respect timeout after redirects [pass]
library/browsercontext-fetch.spec.ts › should retry on ECONNRESET [pass]
library/browsercontext-fetch.spec.ts › should return error with wrong credentials [pass]
library/browsercontext-fetch.spec.ts › should return raw headers [pass]
library/browsercontext-fetch.spec.ts › should send content-length [pass]
library/browsercontext-fetch.spec.ts › should send secure cookie over http for localhost [pass]
library/browsercontext-fetch.spec.ts › should serialize data to json regardless of content-type [pass]
library/browsercontext-fetch.spec.ts › should set domain=localhost cookie [pass]
library/browsercontext-fetch.spec.ts › should support HTTPCredentials.send for browser.newPage [pass]
library/browsercontext-fetch.spec.ts › should support HTTPCredentials.send for newContext [pass]
library/browsercontext-fetch.spec.ts › should support SameSite cookie attribute over https [pass]
library/browsercontext-fetch.spec.ts › should support a timeout of 0 [pass]
library/browsercontext-fetch.spec.ts › should support application/x-www-form-urlencoded [pass]
library/browsercontext-fetch.spec.ts › should support application/x-www-form-urlencoded with param lists [pass]
library/browsercontext-fetch.spec.ts › should support brotli compression [pass]
library/browsercontext-fetch.spec.ts › should support cookie with empty value [pass]
library/browsercontext-fetch.spec.ts › should support deflate compression [pass]
library/browsercontext-fetch.spec.ts › should support gzip compression [pass]
library/browsercontext-fetch.spec.ts › should support https [pass]
library/browsercontext-fetch.spec.ts › should support multipart/form-data [pass]
library/browsercontext-fetch.spec.ts › should support multipart/form-data and keep the order [pass]
library/browsercontext-fetch.spec.ts › should support multipart/form-data with ReadStream values [pass]
library/browsercontext-fetch.spec.ts › should support repeating names in multipart/form-data [unknown]
library/browsercontext-fetch.spec.ts › should support set-cookie with SameSite and without Secure attribute over HTTP [pass]
library/browsercontext-fetch.spec.ts › should support timeout option [pass]
library/browsercontext-fetch.spec.ts › should throw informative error on corrupted brotli body [pass]
library/browsercontext-fetch.spec.ts › should throw informative error on corrupted deflate body [pass]
library/browsercontext-fetch.spec.ts › should throw informative error on corrupted gzip body [pass]
library/browsercontext-fetch.spec.ts › should throw nice error on unsupported data type [pass]
library/browsercontext-fetch.spec.ts › should throw on invalid header value [pass]
library/browsercontext-fetch.spec.ts › should throw on network error [pass]
library/browsercontext-fetch.spec.ts › should throw on network error after redirect [pass]
library/browsercontext-fetch.spec.ts › should throw on network error when sending body [pass]
library/browsercontext-fetch.spec.ts › should throw on network error when sending body after redirect [pass]
library/browsercontext-fetch.spec.ts › should throw on non-http(s) protocol [pass]
library/browsercontext-fetch.spec.ts › should update host header on redirect [pass]
library/browsercontext-fetch.spec.ts › should work with connectOverCDP [unknown]
library/browsercontext-fetch.spec.ts › should work with http credentials [pass]
library/browsercontext-fetch.spec.ts › should work with setHTTPCredentials [pass]
library/browsercontext-har.spec.ts › by default should abort requests not found in har [pass]
library/browsercontext-har.spec.ts › context.unrouteAll should stop context.routeFromHAR [fail]
library/browsercontext-har.spec.ts › fallback:continue should continue requests on bad har [pass]
library/browsercontext-har.spec.ts › fallback:continue should continue when not found in har [pass]
library/browsercontext-har.spec.ts › newPage should fulfill from har, matching the method and following redirects [pass]
library/browsercontext-har.spec.ts › page.unrouteAll should stop page.routeFromHAR [pass]
library/browsercontext-har.spec.ts › should apply overrides before routing from har [pass]
library/browsercontext-har.spec.ts › should change document URL after redirected navigation [timeout]
library/browsercontext-har.spec.ts › should change document URL after redirected navigation on click [fail]
library/browsercontext-har.spec.ts › should context.routeFromHAR, matching the method and following redirects [pass]
library/browsercontext-har.spec.ts › should disambiguate by header [fail]
library/browsercontext-har.spec.ts › should fulfill from har with content in a file [pass]
library/browsercontext-har.spec.ts › should goBack to redirected navigation [timeout]
library/browsercontext-har.spec.ts › should goForward to redirected navigation [timeout]
library/browsercontext-har.spec.ts › should ignore aborted requests [pass]
library/browsercontext-har.spec.ts › should ignore boundary when matching multipart/form-data body [timeout]
library/browsercontext-har.spec.ts › should only context.routeFromHAR requests matching url filter [pass]
library/browsercontext-har.spec.ts › should only handle requests matching url filter [pass]
library/browsercontext-har.spec.ts › should only page.routeFromHAR requests matching url filter [pass]
library/browsercontext-har.spec.ts › should page.routeFromHAR, matching the method and following redirects [pass]
library/browsercontext-har.spec.ts › should produce extracted zip [fail]
library/browsercontext-har.spec.ts › should record overridden requests to har [timeout]
library/browsercontext-har.spec.ts › should reload redirected navigation [timeout]
library/browsercontext-har.spec.ts › should round-trip extracted har.zip [fail]
library/browsercontext-har.spec.ts › should round-trip har with postData [fail]
library/browsercontext-har.spec.ts › should round-trip har.zip [fail]
library/browsercontext-har.spec.ts › should support regex filter [fail]
library/browsercontext-har.spec.ts › should update extracted har.zip for page [fail]
library/browsercontext-har.spec.ts › should update har.zip for context [fail]
library/browsercontext-har.spec.ts › should update har.zip for page [fail]
library/browsercontext-har.spec.ts › should update har.zip for page with different options [fail]
library/browsercontext-locale.spec.ts › should affect Intl.DateTimeFormat().resolvedOptions().locale [fail]
library/browsercontext-locale.spec.ts › should affect accept-language header @smoke [fail]
library/browsercontext-locale.spec.ts › should affect navigator.language [fail]
library/browsercontext-locale.spec.ts › should affect navigator.language in popups [fail]
library/browsercontext-locale.spec.ts › should be isolated between contexts [fail]
library/browsercontext-locale.spec.ts › should format date [fail]
library/browsercontext-locale.spec.ts › should format number [fail]
library/browsercontext-locale.spec.ts › should format number in popups [timeout]
library/browsercontext-locale.spec.ts › should format number in workers [fail]
library/browsercontext-locale.spec.ts › should not change default locale in another context [fail]
library/browsercontext-locale.spec.ts › should work for multiple pages sharing same process [pass]
library/browsercontext-network-event.spec.ts › BrowserContext.Events.Request [fail]
library/browsercontext-network-event.spec.ts › BrowserContext.Events.RequestFailed [fail]
library/browsercontext-network-event.spec.ts › BrowserContext.Events.RequestFinished [pass]
library/browsercontext-network-event.spec.ts › BrowserContext.Events.Response [fail]
library/browsercontext-network-event.spec.ts › should fire events in proper order [pass]
library/browsercontext-network-event.spec.ts › should not fire events for favicon or favicon redirects [unknown]
library/browsercontext-page-event.spec.ts › should fire page lifecycle events [fail]
library/browsercontext-page-event.spec.ts › should have about:blank for empty url with domcontentloaded [timeout]
library/browsercontext-page-event.spec.ts › should have about:blank url with domcontentloaded [pass]
library/browsercontext-page-event.spec.ts › should have an opener [pass]
library/browsercontext-page-event.spec.ts › should have url [pass]
library/browsercontext-page-event.spec.ts › should have url after domcontentloaded [pass]
library/browsercontext-page-event.spec.ts › should not crash while redirecting of original request was missed [pass]
library/browsercontext-page-event.spec.ts › should not hang on ctrl-click during provisional load [fail]
library/browsercontext-page-event.spec.ts › should report initialized pages [pass]
library/browsercontext-page-event.spec.ts › should report when a new page is created and closed [pass]
library/browsercontext-page-event.spec.ts › should work with Ctrl-clicking [fail]
library/browsercontext-page-event.spec.ts › should work with Shift-clicking [fail]
library/browsercontext-pages.spec.ts › frame.focus should work multiple times [fail]
library/browsercontext-pages.spec.ts › page.context should return the correct instance [pass]
library/browsercontext-pages.spec.ts › should click the button with deviceScaleFactor set [fail]
library/browsercontext-pages.spec.ts › should click the button with offset with page scale [pass]
library/browsercontext-pages.spec.ts › should click with disabled javascript [pass]
library/browsercontext-pages.spec.ts › should keep selection in multiple pages [fail]
library/browsercontext-pages.spec.ts › should not be visible in context.pages [pass]
library/browsercontext-pages.spec.ts › should not hang with touch-enabled viewports [pass]
library/browsercontext-pages.spec.ts › should not leak listeners during navigation of 20 pages [pass]
library/browsercontext-pages.spec.ts › should return bounding box with page scale [pass]
library/browsercontext-proxy.spec.ts › does launch without a port [pass]
library/browsercontext-proxy.spec.ts › should authenticate [fail]
library/browsercontext-proxy.spec.ts › should authenticate with empty password [fail]
library/browsercontext-proxy.spec.ts › should exclude patterns [fail]
library/browsercontext-proxy.spec.ts › should isolate proxy credentials between contexts [fail]
library/browsercontext-proxy.spec.ts › should isolate proxy credentials between contexts on navigation [fail]
library/browsercontext-proxy.spec.ts › should proxy local network requests › by default › link-local [fail]
library/browsercontext-proxy.spec.ts › should proxy local network requests › by default › localhost [fail]
library/browsercontext-proxy.spec.ts › should proxy local network requests › by default › loopback address [fail]
library/browsercontext-proxy.spec.ts › should proxy local network requests › with other bypasses › link-local [fail]
library/browsercontext-proxy.spec.ts › should proxy local network requests › with other bypasses › localhost [fail]
library/browsercontext-proxy.spec.ts › should proxy local network requests › with other bypasses › loopback address [fail]
library/browsercontext-proxy.spec.ts › should set cookie for top-level domain [fail]
library/browsercontext-proxy.spec.ts › should throw for bad server value [pass]
library/browsercontext-proxy.spec.ts › should throw for socks4 authentication [pass]
library/browsercontext-proxy.spec.ts › should throw for socks5 authentication [pass]
library/browsercontext-proxy.spec.ts › should use ipv6 proxy [fail]
library/browsercontext-proxy.spec.ts › should use proxy [fail]
library/browsercontext-proxy.spec.ts › should use proxy for https urls [timeout]
library/browsercontext-proxy.spec.ts › should use proxy for second page [fail]
library/browsercontext-proxy.spec.ts › should use proxy twice [fail]
library/browsercontext-proxy.spec.ts › should use socks proxy [fail]
library/browsercontext-proxy.spec.ts › should use socks proxy in second page [fail]
library/browsercontext-proxy.spec.ts › should work when passing the proxy only on the context level [fail]
library/browsercontext-proxy.spec.ts › should work with IP:PORT notion [fail]
library/browsercontext-reuse.spec.ts › should continue issuing events after closing the reused page [pass]
library/browsercontext-reuse.spec.ts › should ignore binding from beforeunload [fail]
library/browsercontext-reuse.spec.ts › should not cache resources [fail]
library/browsercontext-reuse.spec.ts › should re-add binding after reset [pass]
library/browsercontext-reuse.spec.ts › should reset mouse position [fail]
library/browsercontext-reuse.spec.ts › should reset serviceworker [pass]
library/browsercontext-reuse.spec.ts › should reset serviceworker that hangs in importScripts [pass]
library/browsercontext-reuse.spec.ts › should reset tracing [pass]
library/browsercontext-reuse.spec.ts › should work with clock emulation [pass]
library/browsercontext-route.spec.ts › should chain fallback [fail]
library/browsercontext-route.spec.ts › should chain fallback into page [pass]
library/browsercontext-route.spec.ts › should chain fallback w/ dynamic URL [fail]
library/browsercontext-route.spec.ts › should fall back async [fail]
library/browsercontext-route.spec.ts › should fall back to context.route [fail]
library/browsercontext-route.spec.ts › should ignore secure Set-Cookie header for insecure requests [pass]
library/browsercontext-route.spec.ts › should intercept [fail]
library/browsercontext-route.spec.ts › should not chain abort [pass]
library/browsercontext-route.spec.ts › should not chain fulfill [fail]
library/browsercontext-route.spec.ts › should overwrite post body with empty string [fail]
library/browsercontext-route.spec.ts › should support Set-Cookie header [pass]
library/browsercontext-route.spec.ts › should support async handler w/ times [fail]
library/browsercontext-route.spec.ts › should support the times parameter with route matching [fail]
library/browsercontext-route.spec.ts › should unroute [fail]
library/browsercontext-route.spec.ts › should use Set-Cookie header in future requests [fail]
library/browsercontext-route.spec.ts › should work if handler with times parameter was removed from another handler [fail]
library/browsercontext-route.spec.ts › should work with ignoreHTTPSErrors [fail]
library/browsercontext-route.spec.ts › should yield to page.route [fail]
library/browsercontext-service-worker-policy.spec.ts › block › blocks service worker registration [timeout]
library/browsercontext-service-worker-policy.spec.ts › block › should not throw error on about:blank [pass]
library/browsercontext-service-worker-policy.spec.ts › should allow service workers by default [pass]
library/browsercontext-set-extra-http-headers.spec.ts › should override extra headers from browser context [fail]
library/browsercontext-set-extra-http-headers.spec.ts › should throw for non-string header values [pass]
library/browsercontext-storage-state.spec.ts › should capture cookies [pass]
library/browsercontext-storage-state.spec.ts › should capture local storage [pass]
library/browsercontext-storage-state.spec.ts › should handle malformed file [pass]
library/browsercontext-storage-state.spec.ts › should handle missing file [pass]
library/browsercontext-storage-state.spec.ts › should not emit events about internal page [fail]
library/browsercontext-storage-state.spec.ts › should not restore localStorage twice [pass]
library/browsercontext-storage-state.spec.ts › should round-trip through the file [pass]
library/browsercontext-storage-state.spec.ts › should roundtrip local storage in third-party context [fail]
library/browsercontext-storage-state.spec.ts › should serialize storageState with lone surrogates [fail]
library/browsercontext-storage-state.spec.ts › should set local storage [pass]
library/browsercontext-storage-state.spec.ts › should set local storage in third-party context [fail]
library/browsercontext-storage-state.spec.ts › should work when service worker is intefering [pass]
library/browsercontext-strict.spec.ts › should not fail page.textContent in non-strict mode [fail]
library/browsercontext-strict.spec.ts › strict context mode › should fail page.click in strict mode [fail]
library/browsercontext-strict.spec.ts › strict context mode › should fail page.textContent in strict mode [fail]
library/browsercontext-strict.spec.ts › strict context mode › should opt out of strict mode [fail]
library/browsercontext-timezone-id.spec.ts › should affect Intl.DateTimeFormat().resolvedOptions().timeZone [fail]
library/browsercontext-timezone-id.spec.ts › should not change default timezone in another context [fail]
library/browsercontext-timezone-id.spec.ts › should throw for invalid timezone IDs when creating pages [fail]
library/browsercontext-timezone-id.spec.ts › should work @smoke [fail]
library/browsercontext-timezone-id.spec.ts › should work for multiple pages sharing same process [timeout]
library/browsercontext-user-agent.spec.ts › custom user agent for download [fail]
library/browsercontext-user-agent.spec.ts › should emulate device user-agent [fail]
library/browsercontext-user-agent.spec.ts › should make a copy of default options [fail]
library/browsercontext-user-agent.spec.ts › should work [fail]
library/browsercontext-user-agent.spec.ts › should work for navigator.userAgentData and sec-ch-ua headers [unknown]
library/browsercontext-user-agent.spec.ts › should work for subframes [fail]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › default mobile viewports to 980 width [fail]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › mouse should work with mobile viewports and cross process navigations [pass]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › respect meta viewport tag [fail]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › should be detectable [fail]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › should detect touch when applying viewport with touches [fail]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › should emulate the hover media feature [fail]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › should fire orientationchange event [fail]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › should scroll when emulating a mobile viewport [pass]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › should support landscape emulation [pass]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › should support mobile emulation [pass]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › should support touch emulation [fail]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › should support window.orientation emulation [fail]
library/browsercontext-viewport-mobile.spec.ts › mobile viewport › view scale should reset after navigation [pass]
library/browsercontext-viewport.spec.ts › WebKit Windows headed should have a minimal viewport [unknown]
library/browsercontext-viewport.spec.ts › should be able to get correct orientation angle on non-mobile devices [pass]
library/browsercontext-viewport.spec.ts › should drag with high dpi [fail]
library/browsercontext-viewport.spec.ts › should emulate availWidth and availHeight [fail]
library/browsercontext-viewport.spec.ts › should emulate device height [fail]
library/browsercontext-viewport.spec.ts › should emulate device width [fail]
library/browsercontext-viewport.spec.ts › should get the proper default viewport size [pass]
library/browsercontext-viewport.spec.ts › should not have touch by default [pass]
library/browsercontext-viewport.spec.ts › should report null viewportSize when given null viewport [pass]
library/browsercontext-viewport.spec.ts › should return correct outerWidth and outerHeight [pass]
library/browsercontext-viewport.spec.ts › should set both screen and viewport options [fail]
library/browsercontext-viewport.spec.ts › should set the proper viewport size [pass]
library/browsercontext-viewport.spec.ts › should set window.screen.orientation.type for mobile devices [fail]
library/browsercontext-viewport.spec.ts › should support touch with null viewport [fail]
library/browsercontext-viewport.spec.ts › should throw on tap if hasTouch is not enabled [fail]
library/browsertype-basic.spec.ts › browserType.executablePath should work [unknown]
library/browsertype-basic.spec.ts › browserType.name should work [fail]
library/browsertype-basic.spec.ts › should throw when trying to connect with not-chromium [pass]
library/browsertype-connect.spec.ts › launchServer only › should be able to reconnect to a browser 12 times without warnings [timeout]
library/browsertype-connect.spec.ts › launchServer only › should properly disconnect when connection closes from the server side [timeout]
library/browsertype-connect.spec.ts › launchServer only › should work with cluster [timeout]
library/browsertype-connect.spec.ts › launchServer › disconnected event should be emitted when browser is closed or server is closed [timeout]
library/browsertype-connect.spec.ts › launchServer › disconnected event should have browser as argument [timeout]
library/browsertype-connect.spec.ts › launchServer › setInputFiles should preserve lastModified timestamp [timeout]
library/browsertype-connect.spec.ts › launchServer › should be able to connect 20 times to a single server without warnings [timeout]
library/browsertype-connect.spec.ts › launchServer › should be able to connect two browsers at the same time [timeout]
library/browsertype-connect.spec.ts › launchServer › should be able to connect when the wsEndpoint is passed as an option [timeout]
library/browsertype-connect.spec.ts › launchServer › should be able to reconnect to a browser [timeout]
library/browsertype-connect.spec.ts › launchServer › should be able to visit ipv6 [timeout]
library/browsertype-connect.spec.ts › launchServer › should be able to visit ipv6 through localhost [timeout]
library/browsertype-connect.spec.ts › launchServer › should connect over http [timeout]
library/browsertype-connect.spec.ts › launchServer › should connect over wss [timeout]
library/browsertype-connect.spec.ts › launchServer › should emit close events on pages and contexts [timeout]
library/browsertype-connect.spec.ts › launchServer › should error when saving download after deletion [timeout]
library/browsertype-connect.spec.ts › launchServer › should filter launch options [timeout]
library/browsertype-connect.spec.ts › launchServer › should fulfill with global fetch result [timeout]
library/browsertype-connect.spec.ts › launchServer › should handle exceptions during connect [timeout]
library/browsertype-connect.spec.ts › launchServer › should ignore page.pause when headed [timeout]
library/browsertype-connect.spec.ts › launchServer › should not throw on close after disconnect [timeout]
library/browsertype-connect.spec.ts › launchServer › should print HTTP error [pass]
library/browsertype-connect.spec.ts › launchServer › should print custom ws close error [pass]
library/browsertype-connect.spec.ts › launchServer › should print ws error [pass]
library/browsertype-connect.spec.ts › launchServer › should properly disconnect when connection closes from the client side [timeout]
library/browsertype-connect.spec.ts › launchServer › should record trace with sources [timeout]
library/browsertype-connect.spec.ts › launchServer › should reject navigation when browser closes [timeout]
library/browsertype-connect.spec.ts › launchServer › should reject waitForEvent before browser.close finishes [timeout]
library/browsertype-connect.spec.ts › launchServer › should reject waitForEvent before browser.onDisconnect fires [timeout]
library/browsertype-connect.spec.ts › launchServer › should reject waitForSelector when browser closes [timeout]
library/browsertype-connect.spec.ts › launchServer › should respect selectors [timeout]
library/browsertype-connect.spec.ts › launchServer › should save download [timeout]
library/browsertype-connect.spec.ts › launchServer › should save har [timeout]
library/browsertype-connect.spec.ts › launchServer › should saveAs videos from remote browser [timeout]
library/browsertype-connect.spec.ts › launchServer › should send default User-Agent and X-Playwright-Browser headers with connect request [fail]
library/browsertype-connect.spec.ts › launchServer › should send extra headers with connect request [pass]
library/browsertype-connect.spec.ts › launchServer › should set the browser connected state [timeout]
library/browsertype-connect.spec.ts › launchServer › should support slowmo option [timeout]
library/browsertype-connect.spec.ts › launchServer › should terminate network waiters [timeout]
library/browsertype-connect.spec.ts › launchServer › should throw when calling waitForNavigation after disconnect [timeout]
library/browsertype-connect.spec.ts › launchServer › should throw when used after isConnected returns false [timeout]
library/browsertype-connect.spec.ts › launchServer › should timeout in connect while connecting [pass]
library/browsertype-connect.spec.ts › launchServer › should timeout in socket while connecting [pass]
library/browsertype-connect.spec.ts › launchServer › should upload large file [timeout]
library/browsertype-connect.spec.ts › launchServer › socks proxy › should check proxy pattern on the client [unknown]
library/browsertype-connect.spec.ts › launchServer › socks proxy › should forward non-forwarded requests [unknown]
library/browsertype-connect.spec.ts › launchServer › socks proxy › should lead to the error page for forwarded requests when the connection is refused [unknown]
library/browsertype-connect.spec.ts › launchServer › socks proxy › should proxy based on the pattern [unknown]
library/browsertype-connect.spec.ts › launchServer › socks proxy › should proxy ipv6 localhost requests @smoke [unknown]
library/browsertype-connect.spec.ts › launchServer › socks proxy › should proxy local.playwright requests [unknown]
library/browsertype-connect.spec.ts › launchServer › socks proxy › should proxy localhost requests @smoke [unknown]
library/browsertype-connect.spec.ts › launchServer › socks proxy › should proxy localhost requests from fetch api [unknown]
library/browsertype-connect.spec.ts › run-server › disconnected event should be emitted when browser is closed or server is closed [fail]
library/browsertype-connect.spec.ts › run-server › disconnected event should have browser as argument [fail]
library/browsertype-connect.spec.ts › run-server › setInputFiles should preserve lastModified timestamp [fail]
library/browsertype-connect.spec.ts › run-server › should be able to connect 20 times to a single server without warnings [fail]
library/browsertype-connect.spec.ts › run-server › should be able to connect two browsers at the same time [fail]
library/browsertype-connect.spec.ts › run-server › should be able to connect when the wsEndpoint is passed as an option [fail]
library/browsertype-connect.spec.ts › run-server › should be able to reconnect to a browser [fail]
library/browsertype-connect.spec.ts › run-server › should be able to visit ipv6 [fail]
library/browsertype-connect.spec.ts › run-server › should be able to visit ipv6 through localhost [fail]
library/browsertype-connect.spec.ts › run-server › should connect over http [fail]
library/browsertype-connect.spec.ts › run-server › should connect over wss [fail]
library/browsertype-connect.spec.ts › run-server › should emit close events on pages and contexts [fail]
library/browsertype-connect.spec.ts › run-server › should error when saving download after deletion [fail]
library/browsertype-connect.spec.ts › run-server › should filter launch options [fail]
library/browsertype-connect.spec.ts › run-server › should fulfill with global fetch result [fail]
library/browsertype-connect.spec.ts › run-server › should handle exceptions during connect [pass]
library/browsertype-connect.spec.ts › run-server › should ignore page.pause when headed [fail]
library/browsertype-connect.spec.ts › run-server › should not throw on close after disconnect [fail]
library/browsertype-connect.spec.ts › run-server › should print HTTP error [pass]
library/browsertype-connect.spec.ts › run-server › should print custom ws close error [pass]
library/browsertype-connect.spec.ts › run-server › should print ws error [pass]
library/browsertype-connect.spec.ts › run-server › should properly disconnect when connection closes from the client side [fail]
library/browsertype-connect.spec.ts › run-server › should record trace with sources [fail]
library/browsertype-connect.spec.ts › run-server › should reject navigation when browser closes [fail]
library/browsertype-connect.spec.ts › run-server › should reject waitForEvent before browser.close finishes [fail]
library/browsertype-connect.spec.ts › run-server › should reject waitForEvent before browser.onDisconnect fires [fail]
library/browsertype-connect.spec.ts › run-server › should reject waitForSelector when browser closes [fail]
library/browsertype-connect.spec.ts › run-server › should respect selectors [fail]
library/browsertype-connect.spec.ts › run-server › should save download [fail]
library/browsertype-connect.spec.ts › run-server › should save har [fail]
library/browsertype-connect.spec.ts › run-server › should saveAs videos from remote browser [fail]
library/browsertype-connect.spec.ts › run-server › should send default User-Agent and X-Playwright-Browser headers with connect request [fail]
library/browsertype-connect.spec.ts › run-server › should send extra headers with connect request [pass]
library/browsertype-connect.spec.ts › run-server › should set the browser connected state [fail]
library/browsertype-connect.spec.ts › run-server › should support slowmo option [fail]
library/browsertype-connect.spec.ts › run-server › should terminate network waiters [fail]
library/browsertype-connect.spec.ts › run-server › should throw when calling waitForNavigation after disconnect [fail]
library/browsertype-connect.spec.ts › run-server › should throw when used after isConnected returns false [fail]
library/browsertype-connect.spec.ts › run-server › should timeout in connect while connecting [pass]
library/browsertype-connect.spec.ts › run-server › should timeout in socket while connecting [pass]
library/browsertype-connect.spec.ts › run-server › should upload large file [fail]
library/browsertype-connect.spec.ts › run-server › socks proxy › should check proxy pattern on the client [fail]
library/browsertype-connect.spec.ts › run-server › socks proxy › should forward non-forwarded requests [fail]
library/browsertype-connect.spec.ts › run-server › socks proxy › should lead to the error page for forwarded requests when the connection is refused [fail]
library/browsertype-connect.spec.ts › run-server › socks proxy › should proxy based on the pattern [fail]
library/browsertype-connect.spec.ts › run-server › socks proxy › should proxy ipv6 localhost requests @smoke [fail]
library/browsertype-connect.spec.ts › run-server › socks proxy › should proxy local.playwright requests [fail]
library/browsertype-connect.spec.ts › run-server › socks proxy › should proxy localhost requests @smoke [fail]
library/browsertype-connect.spec.ts › run-server › socks proxy › should proxy localhost requests from fetch api [fail]
library/browsertype-connect.spec.ts › should refuse connecting when versions do not match [pass]
library/browsertype-launch-selenium.spec.ts › selenium grid 3.141.59 hub + node chromium [unknown]
library/browsertype-launch-selenium.spec.ts › selenium grid 3.141.59 standalone chromium [unknown]
library/browsertype-launch-selenium.spec.ts › selenium grid 3.141.59 standalone chromium through run-driver [unknown]
library/browsertype-launch-selenium.spec.ts › selenium grid 3.141.59 standalone non-chromium [unknown]
library/browsertype-launch-selenium.spec.ts › selenium grid 4.8.3 hub + node chromium [unknown]
library/browsertype-launch-selenium.spec.ts › selenium grid 4.8.3 standalone chromium [unknown]
library/browsertype-launch-selenium.spec.ts › selenium grid 4.8.3 standalone chromium broken driver [unknown]
library/browsertype-launch-server.spec.ts › launch server › should default to random wsPath [fail]
library/browsertype-launch-server.spec.ts › launch server › should fire "close" event during kill [fail]
library/browsertype-launch-server.spec.ts › launch server › should fire close event [fail]
library/browsertype-launch-server.spec.ts › launch server › should log protocol [fail]
library/browsertype-launch-server.spec.ts › launch server › should provide an error when ws endpoint is incorrect [fail]
library/browsertype-launch-server.spec.ts › launch server › should return child_process instance [fail]
library/browsertype-launch-server.spec.ts › launch server › should work [fail]
library/browsertype-launch-server.spec.ts › launch server › should work when wsPath is missing leading slash [fail]
library/browsertype-launch-server.spec.ts › launch server › should work with host [fail]
library/browsertype-launch-server.spec.ts › launch server › should work with port [fail]
library/browsertype-launch-server.spec.ts › launch server › should work with wsPath [fail]
library/browsertype-launch.spec.ts › should accept objects as options [pass]
library/browsertype-launch.spec.ts › should allow await using [pass]
library/browsertype-launch.spec.ts › should be callable twice [pass]
library/browsertype-launch.spec.ts › should fire close event for all contexts [pass]
library/browsertype-launch.spec.ts › should handle exception [pass]
library/browsertype-launch.spec.ts › should handle timeout [pass]
library/browsertype-launch.spec.ts › should reject all promises when browser is closed [pass]
library/browsertype-launch.spec.ts › should reject if executable path is invalid [pass]
library/browsertype-launch.spec.ts › should reject if launched browser fails immediately [fail]
library/browsertype-launch.spec.ts › should report launch log [pass]
library/browsertype-launch.spec.ts › should throw if page argument is passed [fail]
library/browsertype-launch.spec.ts › should throw if port option is passed [pass]
library/browsertype-launch.spec.ts › should throw if port option is passed for persistent context [pass]
library/browsertype-launch.spec.ts › should throw if userDataDir is passed as an argument [pass]
library/browsertype-launch.spec.ts › should throw if userDataDir option is passed [pass]
library/capabilities.spec.ts › Intl.ListFormat should work [pass]
library/capabilities.spec.ts › SharedArrayBuffer should work @smoke [fail]
library/capabilities.spec.ts › Web Assembly should work @smoke [pass]
library/capabilities.spec.ts › WebSocket should work @smoke [pass]
library/capabilities.spec.ts › loading in HTMLImageElement.prototype [pass]
library/capabilities.spec.ts › make sure that XMLHttpRequest upload events are emitted correctly [pass]
library/capabilities.spec.ts › navigator.clipboard should be present [pass]
library/capabilities.spec.ts › requestFullscreen [pass]
library/capabilities.spec.ts › service worker should cover the iframe [pass]
library/capabilities.spec.ts › service worker should register in an iframe [pass]
library/capabilities.spec.ts › serviceWorker should intercept document request [pass]
library/capabilities.spec.ts › should not crash on page with mp4 @smoke [fail]
library/capabilities.spec.ts › should not crash on showDirectoryPicker [unknown]
library/capabilities.spec.ts › should not crash on storage.getDirectory() [pass]
library/capabilities.spec.ts › should play audio @smoke [fail]
library/capabilities.spec.ts › should play video @smoke [pass]
library/capabilities.spec.ts › should play webm video @smoke [pass]
library/capabilities.spec.ts › should respect CSP @smoke [fail]
library/capabilities.spec.ts › should send no Content-Length header for GET requests with a Content-Type [pass]
library/capabilities.spec.ts › should set CloseEvent.wasClean to false when the server terminates a WebSocket connection [pass]
library/capabilities.spec.ts › should support webgl 2 @smoke [pass]
library/capabilities.spec.ts › should support webgl @smoke [pass]
library/capabilities.spec.ts › webkit should define window.safari [unknown]
library/capabilities.spec.ts › window.GestureEvent in WebKit [pass]
library/channels.spec.ts › exposeFunction should not leak [pass]
library/channels.spec.ts › should not generate dispatchers for subresources w/o listeners [pass]
library/channels.spec.ts › should scope CDPSession handles [unknown]
library/channels.spec.ts › should scope browser handles [pass]
library/channels.spec.ts › should scope context handles [pass]
library/channels.spec.ts › should work with the domain module [timeout]
library/chromium/bfcache.spec.ts › bindings should work after restoring from bfcache [fail]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › serviceWorker(), and fromServiceWorker() work [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › setExtraHTTPHeaders [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › setOffline [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › should intercept only serviceworker request, not page [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › should intercept service worker importScripts [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › should intercept service worker requests (main and within) [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › should intercept service worker update requests [unknown]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › should produce network events, routing, and annotations for Service Worker [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › should produce network events, routing, and annotations for Service Worker (advanced) [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › should report failure (due to content-type) of main service worker request [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › should report failure (due to redirect) of main service worker request [timeout]
library/chromium/chromium.spec.ts › PW_EXPERIMENTAL_SERVICE_WORKER_NETWORK_EVENTS=1 › should report intercepted service worker requests in HAR [timeout]
library/chromium/chromium.spec.ts › Page.route should work with intervention headers [fail]
library/chromium/chromium.spec.ts › http credentials › httpCredentials [timeout]
library/chromium/chromium.spec.ts › serviceWorkers() should return current workers [timeout]
library/chromium/chromium.spec.ts › should close service worker together with the context [timeout]
library/chromium/chromium.spec.ts › should create a worker from a service worker [timeout]
library/chromium/chromium.spec.ts › should create a worker from service worker with noop routing [timeout]
library/chromium/chromium.spec.ts › should emit new service worker on update [timeout]
library/chromium/chromium.spec.ts › should not create a worker from a shared worker [pass]
library/chromium/chromium.spec.ts › should pass args with spaces [fail]
library/chromium/connect-over-cdp.spec.ts › emulate media should not be affected by second connectOverCDP [unknown]
library/chromium/connect-over-cdp.spec.ts › setInputFiles should preserve lastModified timestamp [fail]
library/chromium/connect-over-cdp.spec.ts › should allow tracing over cdp session [fail]
library/chromium/connect-over-cdp.spec.ts › should be able to connect via localhost [fail]
library/chromium/connect-over-cdp.spec.ts › should cleanup artifacts dir after connectOverCDP disconnects due to ws close [fail]
library/chromium/connect-over-cdp.spec.ts › should connect over a ws endpoint [fail]
library/chromium/connect-over-cdp.spec.ts › should connect to an existing cdp session [fail]
library/chromium/connect-over-cdp.spec.ts › should connect to an existing cdp session twice [fail]
library/chromium/connect-over-cdp.spec.ts › should connect to an existing cdp session when passed as a first argument [fail]
library/chromium/connect-over-cdp.spec.ts › should connect to existing page with iframe and navigate [fail]
library/chromium/connect-over-cdp.spec.ts › should connect to existing service workers [fail]
library/chromium/connect-over-cdp.spec.ts › should connect via https [fail]
library/chromium/connect-over-cdp.spec.ts › should connectOverCDP and manage downloads in default context [fail]
library/chromium/connect-over-cdp.spec.ts › should print custom ws close error [fail]
library/chromium/connect-over-cdp.spec.ts › should report all pages in an existing browser [fail]
library/chromium/connect-over-cdp.spec.ts › should report an expected error when the endpoint URL JSON webSocketDebuggerUrl is undefined [fail]
library/chromium/connect-over-cdp.spec.ts › should report an expected error when the endpointURL returns a non-expected status code [fail]
library/chromium/connect-over-cdp.spec.ts › should return valid browser from context.browser() [fail]
library/chromium/connect-over-cdp.spec.ts › should send default User-Agent header with connect request [timeout]
library/chromium/connect-over-cdp.spec.ts › should send extra headers with connect request [timeout]
library/chromium/connect-over-cdp.spec.ts › should use logger in default context [fail]
library/chromium/connect-over-cdp.spec.ts › should use proxy with connectOverCDP [fail]
library/chromium/css-coverage.spec.ts › should NOT report scripts across navigations [fail]
library/chromium/css-coverage.spec.ts › should ignore injected stylesheets [fail]
library/chromium/css-coverage.spec.ts › should report multiple stylesheets [fail]
library/chromium/css-coverage.spec.ts › should report sourceURLs [fail]
library/chromium/css-coverage.spec.ts › should report stylesheets across navigations [fail]
library/chromium/css-coverage.spec.ts › should report stylesheets that have no coverage [fail]
library/chromium/css-coverage.spec.ts › should work [fail]
library/chromium/css-coverage.spec.ts › should work with a recently loaded stylesheet [fail]
library/chromium/css-coverage.spec.ts › should work with complicated usecases [fail]
library/chromium/css-coverage.spec.ts › should work with media queries [fail]
library/chromium/disable-web-security.spec.ts › test init script w/ --disable-web-security [pass]
library/chromium/disable-web-security.spec.ts › test utility world in popup w/ --disable-web-security [pass]
library/chromium/js-coverage.spec.ts › should NOT report scripts across navigations when enabled [fail]
library/chromium/js-coverage.spec.ts › should ignore eval() scripts by default [fail]
library/chromium/js-coverage.spec.ts › should not hang when there is a debugger statement [fail]
library/chromium/js-coverage.spec.ts › should report multiple scripts [fail]
library/chromium/js-coverage.spec.ts › should report scripts across navigations when disabled [fail]
library/chromium/js-coverage.spec.ts › should report sourceURLs [fail]
library/chromium/js-coverage.spec.ts › should work [fail]
library/chromium/js-coverage.spec.ts › shouldn't ignore eval() scripts if reportAnonymousScripts is true [fail]
library/chromium/launcher.spec.ts › should not create pages automatically [fail]
library/chromium/launcher.spec.ts › should not throw with remote-debugging-port argument [fail]
library/chromium/launcher.spec.ts › should open devtools when "devtools: true" option is given [unknown]
library/chromium/launcher.spec.ts › should return background pages [timeout]
library/chromium/launcher.spec.ts › should return background pages when recording video [timeout]
library/chromium/launcher.spec.ts › should support request/response events when using backgroundPage() [timeout]
library/chromium/launcher.spec.ts › should throw with remote-debugging-pipe argument [fail]
library/chromium/oopif.spec.ts › ElementHandle.boundingBox() should work [pass]
library/chromium/oopif.spec.ts › contentFrame should work [pass]
library/chromium/oopif.spec.ts › should allow cdp sessions on oopifs [fail]
library/chromium/oopif.spec.ts › should be able to click in iframe [fail]
library/chromium/oopif.spec.ts › should click [fail]
library/chromium/oopif.spec.ts › should click a button when it overlays oopif [pass]
library/chromium/oopif.spec.ts › should emit filechooser event for iframe [fail]
library/chromium/oopif.spec.ts › should emulate media [fail]
library/chromium/oopif.spec.ts › should emulate offline [fail]
library/chromium/oopif.spec.ts › should expose function [pass]
library/chromium/oopif.spec.ts › should get the proper viewport [unknown]
library/chromium/oopif.spec.ts › should handle oopif detach [pass]
library/chromium/oopif.spec.ts › should handle remote -> local -> remote transitions [pass]
library/chromium/oopif.spec.ts › should intercept response body from oopif [fail]
library/chromium/oopif.spec.ts › should load oopif iframes with subresources and route [pass]
library/chromium/oopif.spec.ts › should not throw on exposeFunction when oopif detaches [pass]
library/chromium/oopif.spec.ts › should report google.com frame with headed [pass]
library/chromium/oopif.spec.ts › should report main requests [pass]
library/chromium/oopif.spec.ts › should report oopif frames [pass]
library/chromium/oopif.spec.ts › should respect route [pass]
library/chromium/oopif.spec.ts › should support addInitScript [pass]
library/chromium/oopif.spec.ts › should support context options [fail]
library/chromium/oopif.spec.ts › should support exposeFunction [fail]
library/chromium/oopif.spec.ts › should take screenshot [fail]
library/chromium/session.spec.ts › should be able to detach session [fail]
library/chromium/session.spec.ts › should detach when page closes [fail]
library/chromium/session.spec.ts › should enable and disable domains independently [fail]
library/chromium/session.spec.ts › should not break page.close() [fail]
library/chromium/session.spec.ts › should only accept a page or frame [pass]
library/chromium/session.spec.ts › should reject protocol calls when page closes [fail]
library/chromium/session.spec.ts › should send events [fail]
library/chromium/session.spec.ts › should throw if target is part of main [fail]
library/chromium/session.spec.ts › should throw nice errors [fail]
library/chromium/session.spec.ts › should work [fail]
library/chromium/session.spec.ts › should work with main frame [fail]
library/chromium/session.spec.ts › should work with newBrowserCDPSession [fail]
library/chromium/tracing.spec.ts › should create directories as needed [fail]
library/chromium/tracing.spec.ts › should output a trace [fail]
library/chromium/tracing.spec.ts › should return a buffer [fail]
library/chromium/tracing.spec.ts › should run with custom categories if provided [fail]
library/chromium/tracing.spec.ts › should support a buffer without a path [fail]
library/chromium/tracing.spec.ts › should throw if tracing on two pages [fail]
library/chromium/tracing.spec.ts › should work without options [fail]
library/client-certificates.spec.ts › browser › persistentContext › should pass with matching certificates [fail]
library/client-certificates.spec.ts › browser › persistentContext › validate input [pass]
library/client-certificates.spec.ts › browser › should fail with matching certificates in legacy pfx format [pass]
library/client-certificates.spec.ts › browser › should fail with no client certificates [fail]
library/client-certificates.spec.ts › browser › should fail with self-signed client certificates [fail]
library/client-certificates.spec.ts › browser › should handle TLS renegotiation with client certificates [fail]
library/client-certificates.spec.ts › browser › should handle rejected certificate in handshake with HTTP/2 [pass]
library/client-certificates.spec.ts › browser › should have ignoreHTTPSErrors=false by default [fail]
library/client-certificates.spec.ts › browser › should keep supporting http [pass]
library/client-certificates.spec.ts › browser › should not hang on tls errors during TLS 1.2 handshake [fail]
library/client-certificates.spec.ts › browser › should pass with matching certificates [fail]
library/client-certificates.spec.ts › browser › should pass with matching certificates and trailing slash [fail]
library/client-certificates.spec.ts › browser › should pass with matching certificates and when a http proxy is used [fail]
library/client-certificates.spec.ts › browser › should pass with matching certificates and when a socks proxy is used [fail]
library/client-certificates.spec.ts › browser › should pass with matching certificates in pfx format [fail]
library/client-certificates.spec.ts › browser › should pass with matching certificates in pfx format when passing as content [fail]
library/client-certificates.spec.ts › browser › should pass with matching certificates on context APIRequestContext instance [pass]
library/client-certificates.spec.ts › browser › should pass with matching certificates when passing as content [fail]
library/client-certificates.spec.ts › browser › should return target connection errors when using http2 [unknown]
library/client-certificates.spec.ts › browser › should throw a http error if the pfx passphrase is incorect [pass]
library/client-certificates.spec.ts › browser › support http2 [fail]
library/client-certificates.spec.ts › browser › support http2 if the browser only supports http1.1 [unknown]
library/client-certificates.spec.ts › browser › validate input [pass]
library/client-certificates.spec.ts › fetch › pass with trusted client certificates [pass]
library/client-certificates.spec.ts › fetch › pass with trusted client certificates and when a http proxy is used [pass]
library/client-certificates.spec.ts › fetch › pass with trusted client certificates and when a socks proxy is used [pass]
library/client-certificates.spec.ts › fetch › pass with trusted client certificates in pfx format [pass]
library/client-certificates.spec.ts › fetch › should fail with matching certificates in legacy pfx format [pass]
library/client-certificates.spec.ts › fetch › should fail with no client certificates provided [pass]
library/client-certificates.spec.ts › fetch › should keep supporting http [pass]
library/client-certificates.spec.ts › fetch › should throw a http error if the pfx passphrase is incorect [pass]
library/client-certificates.spec.ts › fetch › should throw with untrusted client certs [pass]
library/client-certificates.spec.ts › fetch › should work in the browser with request interception [pass]
library/client-certificates.spec.ts › fetch › validate input [pass]
library/clock.spec.ts › Intl API › Creates a RelativeTimeFormat like normal [pass]
library/clock.spec.ts › Intl API › Executes formatRange like normal [pass]
library/clock.spec.ts › Intl API › Executes formatRangeToParts like normal [pass]
library/clock.spec.ts › Intl API › Executes resolvedOptions like normal [pass]
library/clock.spec.ts › Intl API › Executes supportedLocalesOf like normal [pass]
library/clock.spec.ts › Intl API › formatToParts via isFirstOfMonth -> Returns false when passed a timestamp argument that is not first of the month [pass]
library/clock.spec.ts › Intl API › formatToParts via isFirstOfMonth -> Returns false when passed no timestamp and system time is not first of the month [pass]
library/clock.spec.ts › Intl API › formatToParts via isFirstOfMonth -> Returns true when passed a timestamp argument that is first of the month [pass]
library/clock.spec.ts › Intl API › formatToParts via isFirstOfMonth -> Returns true when passed no timestamp and system time is first of the month [pass]
library/clock.spec.ts › cancelAnimationFrame › does not remove interval [pass]
library/clock.spec.ts › cancelAnimationFrame › does not remove timeout [pass]
library/clock.spec.ts › cancelAnimationFrame › ignores null argument [pass]
library/clock.spec.ts › cancelAnimationFrame › removes animation frame [pass]
library/clock.spec.ts › cancelIdleCallback › removes idle callback [pass]
library/clock.spec.ts › clearInterval › ignores null argument [pass]
library/clock.spec.ts › clearInterval › removes interval [pass]
library/clock.spec.ts › clearInterval › removes interval with undefined interval [pass]
library/clock.spec.ts › clearInterval › removes timeout [pass]
library/clock.spec.ts › clearTimeout › ignores null argument [pass]
library/clock.spec.ts › clearTimeout › removes interval [pass]
library/clock.spec.ts › clearTimeout › removes interval with undefined interval [pass]
library/clock.spec.ts › clearTimeout › removes timeout [pass]
library/clock.spec.ts › date › creates Date objects representing clock time [pass]
library/clock.spec.ts › date › creates real Date objects [pass]
library/clock.spec.ts › date › creates regular date when passing a date as RFC 2822 string [pass]
library/clock.spec.ts › date › creates regular date when passing a date as string [pass]
library/clock.spec.ts › date › creates regular date when passing timestamp [pass]
library/clock.spec.ts › date › creates regular date when passing y, m, d [pass]
library/clock.spec.ts › date › creates regular date when passing y, m, d, h [pass]
library/clock.spec.ts › date › creates regular date when passing y, m, d, h, m [pass]
library/clock.spec.ts › date › creates regular date when passing y, m, d, h, m, s [pass]
library/clock.spec.ts › date › creates regular date when passing y, m, d, h, m, s, ms [pass]
library/clock.spec.ts › date › creates regular date when passing year, month [pass]
library/clock.spec.ts › date › listens to system clock changes [pass]
library/clock.spec.ts › date › listens to ticking clock [pass]
library/clock.spec.ts › date › mirrors UTC method [pass]
library/clock.spec.ts › date › mirrors native Date.prototype [pass]
library/clock.spec.ts › date › mirrors parse method [pass]
library/clock.spec.ts › date › mirrors toUTCString method [pass]
library/clock.spec.ts › date › provides date constructor [pass]
library/clock.spec.ts › date › returns clock.now() [pass]
library/clock.spec.ts › date › returns date as string representing clock time [pass]
library/clock.spec.ts › date › returns date as string when called as function [pass]
library/clock.spec.ts › date › returns date as string when calling with arguments [pass]
library/clock.spec.ts › date › returns date as string when calling with timestamp [pass]
library/clock.spec.ts › date › supports now method if present [pass]
library/clock.spec.ts › fastForward › handles multiple pending timers and types [pass]
library/clock.spec.ts › fastForward › ignores timers which wouldn't be run [pass]
library/clock.spec.ts › fastForward › pushes back execution time for skipped timers [pass]
library/clock.spec.ts › pauseAt › fire target timers [pass]
library/clock.spec.ts › pauseAt › pause at target time [pass]
library/clock.spec.ts › pauseAt › returns consumed clicks [pass]
library/clock.spec.ts › performance.now() › should listen to multiple ticks in performance.now [pass]
library/clock.spec.ts › performance.now() › should run along with clock.tick [pass]
library/clock.spec.ts › performance.now() › should run with ticks with timers set [pass]
library/clock.spec.ts › performance.now() › should start at 0 [pass]
library/clock.spec.ts › requestAnimationFrame › returns numeric id or object with numeric id [pass]
library/clock.spec.ts › requestAnimationFrame › returns unique id [pass]
library/clock.spec.ts › requestAnimationFrame › should be called with performance.now() even when performance unavailable [pass]
library/clock.spec.ts › requestAnimationFrame › should be called with performance.now() when available [pass]
library/clock.spec.ts › requestAnimationFrame › should call callback once [pass]
library/clock.spec.ts › requestAnimationFrame › should properly schedule callback for 3rd frame [pass]
library/clock.spec.ts › requestAnimationFrame › should run every 16ms [pass]
library/clock.spec.ts › requestAnimationFrame › should schedule for next frame if on current frame [pass]
library/clock.spec.ts › requestAnimationFrame › should schedule two callbacks before the next frame at the same time [pass]
library/clock.spec.ts › requestAnimationFrame › throws if no arguments [pass]
library/clock.spec.ts › requestIdleCallback › doesn't runs if there are any timers and no timeout option [pass]
library/clock.spec.ts › requestIdleCallback › returns numeric id [pass]
library/clock.spec.ts › requestIdleCallback › returns unique id [pass]
library/clock.spec.ts › requestIdleCallback › runs after all timers [pass]
library/clock.spec.ts › requestIdleCallback › runs no later than timeout option even if there are any timers [pass]
library/clock.spec.ts › requestIdleCallback › throws if no arguments [pass]
library/clock.spec.ts › runFor › calls function with global object or null (strict mode) as this [pass]
library/clock.spec.ts › runFor › creates updated Date while ticking [pass]
library/clock.spec.ts › runFor › creates updated Date while ticking promises [pass]
library/clock.spec.ts › runFor › does not fire canceled intervals [pass]
library/clock.spec.ts › runFor › does not fire intervals canceled in a promise [pass]
library/clock.spec.ts › runFor › does not silently catch errors [pass]
library/clock.spec.ts › runFor › does not trigger without sufficient delay [pass]
library/clock.spec.ts › runFor › fires nested setTimeout calls in user-created promises properly [pass]
library/clock.spec.ts › runFor › fires nested setTimeout calls properly [pass]
library/clock.spec.ts › runFor › fires promise timers in correct order [pass]
library/clock.spec.ts › runFor › fires timer in intervals of "13" [pass]
library/clock.spec.ts › runFor › fires timer in intervals of 13 [pass]
library/clock.spec.ts › runFor › fires timers in correct order [pass]
library/clock.spec.ts › runFor › is not influenced by forward system clock changes [pass]
library/clock.spec.ts › runFor › is not influenced by forward system clock changes 2 [pass]
library/clock.spec.ts › runFor › is not influenced by forward system clock changes in promises [pass]
library/clock.spec.ts › runFor › is not influenced by forward system clock changes when an error is thrown [pass]
library/clock.spec.ts › runFor › is not influenced by forward system clock changes when an error is thrown 2 [pass]
library/clock.spec.ts › runFor › mini integration test [pass]
library/clock.spec.ts › runFor › should settle chained user-created promises [pass]
library/clock.spec.ts › runFor › should settle local nested promises before calling timeouts [pass]
library/clock.spec.ts › runFor › should settle local promises before calling timeouts [pass]
library/clock.spec.ts › runFor › should settle multiple user-created promises [pass]
library/clock.spec.ts › runFor › should settle nested user-created promises [pass]
library/clock.spec.ts › runFor › should settle user-created promises [pass]
library/clock.spec.ts › runFor › should settle user-created promises before calling more timeouts [pass]
library/clock.spec.ts › runFor › should settle user-created promises even if some throw [pass]
library/clock.spec.ts › runFor › throws for negative minutes [pass]
library/clock.spec.ts › runFor › throws on negative ticks [pass]
library/clock.spec.ts › runFor › triggers after sufficient delay [pass]
library/clock.spec.ts › runFor › triggers even when some throw [pass]
library/clock.spec.ts › runFor › triggers immediately without specified delay [pass]
library/clock.spec.ts › runFor › triggers in the order scheduled [pass]
library/clock.spec.ts › runFor › triggers multiple simultaneous timers [pass]
library/clock.spec.ts › runFor › triggers multiple simultaneous timers with zero callAt [pass]
library/clock.spec.ts › runFor › triggers simultaneous timers [pass]
library/clock.spec.ts › runFor › triggers timeouts and intervals in the order scheduled [pass]
library/clock.spec.ts › runFor › waits after setTimeout was called [pass]
library/clock.spec.ts › setInterval › does not schedule recurring timeout when cleared [pass]
library/clock.spec.ts › setInterval › does not throw if |undefined| or |null| is passed as a callback [pass]
library/clock.spec.ts › setInterval › is not influenced by backward system clock changes [pass]
library/clock.spec.ts › setInterval › is not influenced by forward system clock changes [pass]
library/clock.spec.ts › setInterval › passes setTimeout parameters [pass]
library/clock.spec.ts › setInterval › returns numeric id or object with numeric id [pass]
library/clock.spec.ts › setInterval › returns unique id [pass]
library/clock.spec.ts › setInterval › schedules recurring timeout [pass]
library/clock.spec.ts › setInterval › throws if no arguments [pass]
library/clock.spec.ts › setTimeout › calls correct timeout on recursive tick [pass]
library/clock.spec.ts › setTimeout › does not depend on this [pass]
library/clock.spec.ts › setTimeout › does not throw if |undefined| or |null| is passed as a callback [pass]
library/clock.spec.ts › setTimeout › is not influenced by backward system clock changes [pass]
library/clock.spec.ts › setTimeout › is not influenced by forward system clock changes [pass]
library/clock.spec.ts › setTimeout › parses no-numeric string times [pass]
library/clock.spec.ts › setTimeout › parses numeric string times [pass]
library/clock.spec.ts › setTimeout › passes setTimeout parameters [pass]
library/clock.spec.ts › setTimeout › returns numeric id or object with numeric id [pass]
library/clock.spec.ts › setTimeout › returns unique id [pass]
library/clock.spec.ts › setTimeout › sets timers on instance [pass]
library/clock.spec.ts › setTimeout › starts id from a large number [pass]
library/clock.spec.ts › setTimeout › throws if no arguments [pass]
library/clock.spec.ts › setTimeout › use of eval when not in node › evals non-function callbacks [pass]
library/clock.spec.ts › setTimeout › use of eval when not in node › only evals on global scope [pass]
library/clock.spec.ts › stubTimers › deletes global property on uninstall if it was inherited onto the global object [unknown]
library/clock.spec.ts › stubTimers › does not fake methods not provided [pass]
library/clock.spec.ts › stubTimers › fake Date constructor should mirror Date's properties [pass]
library/clock.spec.ts › stubTimers › fakes Date constructor [pass]
library/clock.spec.ts › stubTimers › fakes provided methods [pass]
library/clock.spec.ts › stubTimers › global fake setTimeout should return id [pass]
library/clock.spec.ts › stubTimers › mirrors custom Date properties [pass]
library/clock.spec.ts › stubTimers › replace Event.prototype.timeStamp [pass]
library/clock.spec.ts › stubTimers › replaces global clearInterval [pass]
library/clock.spec.ts › stubTimers › replaces global clearTimeout [pass]
library/clock.spec.ts › stubTimers › replaces global performance.now [pass]
library/clock.spec.ts › stubTimers › replaces global setInterval [pass]
library/clock.spec.ts › stubTimers › replaces global setTimeout [pass]
library/clock.spec.ts › stubTimers › resets faked methods [pass]
library/clock.spec.ts › stubTimers › returns clock object [pass]
library/clock.spec.ts › stubTimers › sets initial timestamp [pass]
library/clock.spec.ts › stubTimers › should let performance.mark still be callable after install() (#136) [unknown]
library/clock.spec.ts › stubTimers › should not alter the global performance properties and methods [unknown]
library/clock.spec.ts › stubTimers › should replace the getEntries, getEntriesByX methods with noops that return [] [unknown]
library/clock.spec.ts › stubTimers › takes an object parameter [pass]
library/clock.spec.ts › stubTimers › uninstalls Date constructor [pass]
library/clock.spec.ts › stubTimers › uninstalls global performance.now [pass]
library/clock.spec.ts › works with concurrent runFor calls [pass]
library/clock.spec.ts › works with slow setTimeout in busy embedder [pass]
library/clock.spec.ts › works with slow setTimeout in busy embedder when not paused [pass]
library/component-parser.spec.ts › should escape [pass]
library/component-parser.spec.ts › should parse [pass]
library/component-parser.spec.ts › should parse all operators [pass]
library/component-parser.spec.ts › should parse bool [pass]
library/component-parser.spec.ts › should parse float values [pass]
library/component-parser.spec.ts › should parse identifiers [pass]
library/component-parser.spec.ts › should parse int values [pass]
library/component-parser.spec.ts › should parse regex [pass]
library/component-parser.spec.ts › should parse short attributes [pass]
library/component-parser.spec.ts › should parse unquoted string [pass]
library/component-parser.spec.ts › should throw on malformed selector [pass]
library/component-parser.spec.ts › should tolerate spacing [pass]
library/css-parser.spec.ts › should parse css [pass]
library/css-parser.spec.ts › should throw on malformed css [pass]
library/debug-controller.spec.ts › should highlight all [fail]
library/debug-controller.spec.ts › should navigate all [fail]
library/debug-controller.spec.ts › should pick element [fail]
library/debug-controller.spec.ts › should record [fail]
library/debug-controller.spec.ts › should record custom data-testid [fail]
library/debug-controller.spec.ts › should report pages [fail]
library/debug-controller.spec.ts › should reset for reuse [fail]
library/debug-controller.spec.ts › should reset routes before reuse [fail]
library/defaultbrowsercontext-1.spec.ts › context.addCookies() should work [pass]
library/defaultbrowsercontext-1.spec.ts › context.clearCookies() should work [pass]
library/defaultbrowsercontext-1.spec.ts › context.cookies() should work @smoke [pass]
library/defaultbrowsercontext-1.spec.ts › should support acceptDownloads option [fail]
library/defaultbrowsercontext-1.spec.ts › should support bypassCSP option [fail]
library/defaultbrowsercontext-1.spec.ts › should support deviceScaleFactor option [pass]
library/defaultbrowsercontext-1.spec.ts › should support httpCredentials option [fail]
library/defaultbrowsercontext-1.spec.ts › should support javascriptEnabled option [fail]
library/defaultbrowsercontext-1.spec.ts › should support offline option [pass]
library/defaultbrowsercontext-1.spec.ts › should support userAgent option [fail]
library/defaultbrowsercontext-1.spec.ts › should support viewport option [pass]
library/defaultbrowsercontext-1.spec.ts › should(not) block third party cookies [pass]
library/defaultbrowsercontext-2.spec.ts › coverage should work [unknown]
library/defaultbrowsercontext-2.spec.ts › should accept userDataDir [pass]
library/defaultbrowsercontext-2.spec.ts › should connect to a browser with the default page [pass]
library/defaultbrowsercontext-2.spec.ts › should create userDataDir if it does not exist [pass]
library/defaultbrowsercontext-2.spec.ts › should fire close event for a persistent context [pass]
library/defaultbrowsercontext-2.spec.ts › should handle exception [timeout]
library/defaultbrowsercontext-2.spec.ts › should handle timeout [pass]
library/defaultbrowsercontext-2.spec.ts › should have default URL when launching browser [pass]
library/defaultbrowsercontext-2.spec.ts › should have passed URL when launching with ignoreDefaultArgs: true [fail]
library/defaultbrowsercontext-2.spec.ts › should respect selectors [fail]
library/defaultbrowsercontext-2.spec.ts › should restore state from userDataDir [pass]
library/defaultbrowsercontext-2.spec.ts › should support colorScheme option [fail]
library/defaultbrowsercontext-2.spec.ts › should support extraHTTPHeaders option [fail]
library/defaultbrowsercontext-2.spec.ts › should support forcedColors option [fail]
library/defaultbrowsercontext-2.spec.ts › should support geolocation and permissions options [timeout]
library/defaultbrowsercontext-2.spec.ts › should support har option [pass]
library/defaultbrowsercontext-2.spec.ts › should support hasTouch option [fail]
library/defaultbrowsercontext-2.spec.ts › should support ignoreHTTPSErrors option [fail]
library/defaultbrowsercontext-2.spec.ts › should support locale option [fail]
library/defaultbrowsercontext-2.spec.ts › should support reducedMotion option [fail]
library/defaultbrowsercontext-2.spec.ts › should support timezoneId option [fail]
library/defaultbrowsercontext-2.spec.ts › should throw if page argument is passed [fail]
library/defaultbrowsercontext-2.spec.ts › should work in persistent context [fail]
library/defaultbrowsercontext-2.spec.ts › user agent is up to date [pass]
library/download.spec.ts › download event › should be able to cancel pending downloads [fail]
library/download.spec.ts › download event › should close the context without awaiting the download [fail]
library/download.spec.ts › download event › should close the context without awaiting the failed download [unknown]
library/download.spec.ts › download event › should create subdirectories when saving to non-existent user-specified path [fail]
library/download.spec.ts › download event › should delete downloads on browser gone [fail]
library/download.spec.ts › download event › should delete downloads on context destruction [fail]
library/download.spec.ts › download event › should delete file [fail]
library/download.spec.ts › download event › should download large binary.zip [fail]
library/download.spec.ts › download event › should emit download event from nested iframes [timeout]
library/download.spec.ts › download event › should error when saving after deletion [fail]
library/download.spec.ts › download event › should error when saving with downloads disabled [fail]
library/download.spec.ts › download event › should expose stream [fail]
library/download.spec.ts › download event › should not fail explicitly to cancel a download even if that is already finished [fail]
library/download.spec.ts › download event › should report alt-click downloads [fail]
library/download.spec.ts › download event › should report download path within page.on('download', …) handler for Blobs [timeout]
library/download.spec.ts › download event › should report download path within page.on('download', …) handler for Files [fail]
library/download.spec.ts › download event › should report download when navigation turns into download @smoke [timeout]
library/download.spec.ts › download event › should report downloads for download attribute [fail]
library/download.spec.ts › download event › should report downloads with acceptDownloads: false [fail]
library/download.spec.ts › download event › should report downloads with acceptDownloads: true [fail]
library/download.spec.ts › download event › should report downloads with interception [fail]
library/download.spec.ts › download event › should report new window downloads [fail]
library/download.spec.ts › download event › should report non-navigation downloads [fail]
library/download.spec.ts › download event › should report proper download url when download is from download attribute [fail]
library/download.spec.ts › download event › should save to overwritten filepath [fail]
library/download.spec.ts › download event › should save to two different paths with multiple saveAs calls [fail]
library/download.spec.ts › download event › should save to user-specified path without updating original path [fail]
library/download.spec.ts › download event › should throw if browser dies [fail]
library/download.spec.ts › download event › should work with Cross-Origin-Opener-Policy [timeout]
library/download.spec.ts › should be able to download a PDF file [fail]
library/download.spec.ts › should be able to download a inline PDF file via navigation [fail]
library/download.spec.ts › should be able to download a inline PDF file via response interception [fail]
library/download.spec.ts › should convert navigation to a resource with unsupported mime type into download [timeout]
library/download.spec.ts › should download even if there is no "attachment" value [fail]
library/download.spec.ts › should download links with data url [fail]
library/download.spec.ts › should download successfully when routing [fail]
library/download.spec.ts › should save to user-specified path [fail]
library/downloads-path.spec.ts › downloads path › should accept downloads in persistent context [fail]
library/downloads-path.spec.ts › downloads path › should delete downloads when context closes [fail]
library/downloads-path.spec.ts › downloads path › should delete downloads when persistent context closes [fail]
library/downloads-path.spec.ts › downloads path › should keep downloadsPath folder [fail]
library/downloads-path.spec.ts › downloads path › should report downloads in downloadsPath folder [fail]
library/downloads-path.spec.ts › downloads path › should report downloads in downloadsPath folder with a relative path [fail]
library/emulation-focus.spec.ts › should change document.activeElement [pass]
library/emulation-focus.spec.ts › should change focused iframe [pass]
library/emulation-focus.spec.ts › should focus popups by default [fail]
library/emulation-focus.spec.ts › should focus with more than one page/context [fail]
library/emulation-focus.spec.ts › should not affect mouse event target page [pass]
library/emulation-focus.spec.ts › should not affect screenshots [fail]
library/emulation-focus.spec.ts › should not fire blur events when interacting with more than one page/context [fail]
library/emulation-focus.spec.ts › should provide target for keyboard events [pass]
library/emulation-focus.spec.ts › should think that all pages are focused @smoke [fail]
library/emulation-focus.spec.ts › should think that it is focused by default [pass]
library/emulation-focus.spec.ts › should trigger hover state concurrently [fail]
library/events/add-listeners.spec.ts › EventEmitter tests › Listener order [pass]
library/events/add-listeners.spec.ts › EventEmitter tests › listener type check [pass]
library/events/add-listeners.spec.ts › EventEmitter tests › set max listeners test [pass]
library/events/add-listeners.spec.ts › EventEmitter tests › should work [pass]
library/events/check-listener-leaks.spec.ts › _maxListeners still has precedence over defaultMaxListeners [pass]
library/events/check-listener-leaks.spec.ts › defaultMaxListeners [pass]
library/events/check-listener-leaks.spec.ts › process-wide [pass]
library/events/events-list.spec.ts › EventEmitter › should maintain event names correctly [pass]
library/events/listener-count.spec.ts › Listener count test [pass]
library/events/listeners-side-effects.spec.ts › listeners empty check [pass]
library/events/listeners.spec.ts › Array copy modification does not modify orig [pass]
library/events/listeners.spec.ts › EventEmitter listeners with one listener [pass]
library/events/listeners.spec.ts › EventEmitter with no members [pass]
library/events/listeners.spec.ts › Modify array copy after multiple adds [pass]
library/events/listeners.spec.ts › listeners and once [pass]
library/events/listeners.spec.ts › listeners on prototype [pass]
library/events/listeners.spec.ts › listeners with conflicting types [pass]
library/events/listeners.spec.ts › raw listeners [pass]
library/events/listeners.spec.ts › raw listeners order [pass]
library/events/max-listeners.spec.ts › emit maxListeners on e [pass]
library/events/method-names.spec.ts › EventEmitter prototype test [pass]
library/events/modify-in-emit.spec.ts › add and remove listeners [pass]
library/events/modify-in-emit.spec.ts › removing callbacks in emit [pass]
library/events/num-args.spec.ts › should work [pass]
library/events/once.spec.ts › once() has different code paths based on the number of arguments being emitted [pass]
library/events/once.spec.ts › should work [pass]
library/events/prepend.spec.ts › EventEmitter functionality [pass]
library/events/prepend.spec.ts › Verify that the listener must be a function [pass]
library/events/remove-all-listeners-wait.spec.ts › should not throw with ignoreErrors [pass]
library/events/remove-all-listeners-wait.spec.ts › should wait [pass]
library/events/remove-all-listeners-wait.spec.ts › should wait all [pass]
library/events/remove-all-listeners-wait.spec.ts › wait should throw [pass]
library/events/remove-all-listeners.spec.ts › listener count after removeAllListeners [pass]
library/events/remove-all-listeners.spec.ts › listeners [pass]
library/events/remove-all-listeners.spec.ts › removeAllListeners on undefined _events [pass]
library/events/remove-all-listeners.spec.ts › removeAllListeners removes all listeners [pass]
library/events/remove-all-listeners.spec.ts › removeAllListeners returns EventEmitter [pass]
library/events/remove-all-listeners.spec.ts › removeAllListeners with no event type [pass]
library/events/remove-listeners.spec.ts › Eighth test [pass]
library/events/remove-listeners.spec.ts › Fifth test [pass]
library/events/remove-listeners.spec.ts › First test [pass]
library/events/remove-listeners.spec.ts › Fourth test [pass]
library/events/remove-listeners.spec.ts › Ninth test [pass]
library/events/remove-listeners.spec.ts › Second test [pass]
library/events/remove-listeners.spec.ts › Seventh test [pass]
library/events/remove-listeners.spec.ts › Sixth test [pass]
library/events/remove-listeners.spec.ts › Tenth test [pass]
library/events/remove-listeners.spec.ts › Third test [pass]
library/events/set-max-listeners-side-effects.spec.ts › set max listeners test [pass]
library/events/special-event-names.spec.ts › should support special event names [pass]
library/events/subclass.spec.ts › MyEE2 instance [pass]
library/events/subclass.spec.ts › myee instance [pass]
library/events/symbols.spec.ts › should support symbols [pass]
library/favicon.spec.ts › should load svg favicon with prefer-color-scheme [unknown]
library/fetch-proxy.spec.ts › context request should pick up proxy credentials [timeout]
library/fetch-proxy.spec.ts › global request should pick up proxy credentials [pass]
library/fetch-proxy.spec.ts › should support proxy.bypass [pass]
library/fetch-proxy.spec.ts › should use socks proxy [pass]
library/fetch-proxy.spec.ts › should work with context level proxy [pass]
library/firefox/launcher.spec.ts › should pass firefox user preferences [fail]
library/firefox/launcher.spec.ts › should pass firefox user preferences in persistent [fail]
library/geolocation.spec.ts › should isolate contexts [timeout]
library/geolocation.spec.ts › should not modify passed default options object [pass]
library/geolocation.spec.ts › should throw when invalid longitude [fail]
library/geolocation.spec.ts › should throw with missing latitude [pass]
library/geolocation.spec.ts › should throw with missing longitude in default options [pass]
library/geolocation.spec.ts › should use context options [timeout]
library/geolocation.spec.ts › should use context options for popup [timeout]
library/geolocation.spec.ts › should work @smoke [timeout]
library/geolocation.spec.ts › watchPosition should be notified [timeout]
library/global-fetch-cookie.spec.ts › should do case-insensitive match of cookie domain [pass]
library/global-fetch-cookie.spec.ts › should do case-insensitive match of request domain [pass]
library/global-fetch-cookie.spec.ts › should export cookies to storage state [pass]
library/global-fetch-cookie.spec.ts › should filter outgoing cookies by domain [pass]
library/global-fetch-cookie.spec.ts › should filter outgoing cookies by path [pass]
library/global-fetch-cookie.spec.ts › should override cookie from Set-Cookie header [pass]
library/global-fetch-cookie.spec.ts › should override cookie from Set-Cookie header even if it expired [pass]
library/global-fetch-cookie.spec.ts › should preserve local storage on import/export of storage state [pass]
library/global-fetch-cookie.spec.ts › should remove cookie with expires far in the past [pass]
library/global-fetch-cookie.spec.ts › should remove cookie with negative max-age [pass]
library/global-fetch-cookie.spec.ts › should remove expired cookies [pass]
library/global-fetch-cookie.spec.ts › should send cookies from storage state [pass]
library/global-fetch-cookie.spec.ts › should send not expired cookies [pass]
library/global-fetch-cookie.spec.ts › should send secure cookie over http for localhost [pass]
library/global-fetch-cookie.spec.ts › should send secure cookie over https [pass]
library/global-fetch-cookie.spec.ts › should store cookie from Set-Cookie header [pass]
library/global-fetch-cookie.spec.ts › should store cookie from Set-Cookie header even if it contains equal signs [pass]
library/global-fetch-cookie.spec.ts › should work with empty storage state [pass]
library/global-fetch-cookie.spec.ts › storage state should round-trip through file [pass]
library/global-fetch.spec.ts › delete should work @smoke [pass]
library/global-fetch.spec.ts › fetch should work @smoke [pass]
library/global-fetch.spec.ts › get should work @smoke [pass]
library/global-fetch.spec.ts › head should work @smoke [pass]
library/global-fetch.spec.ts › patch should work @smoke [pass]
library/global-fetch.spec.ts › post should work @smoke [pass]
library/global-fetch.spec.ts › put should work @smoke [pass]
library/global-fetch.spec.ts › should abort redirected requests when context is disposed [pass]
library/global-fetch.spec.ts › should abort requests when context is disposed [pass]
library/global-fetch.spec.ts › should accept already serialized data as Buffer when content-type is application/json [pass]
library/global-fetch.spec.ts › should be able to construct with context options [pass]
library/global-fetch.spec.ts › should dispose global request [pass]
library/global-fetch.spec.ts › should have nice toString [pass]
library/global-fetch.spec.ts › should json stringify array body when content-type is application/json [pass]
library/global-fetch.spec.ts › should json stringify bool (false) body when content-type is application/json [pass]
library/global-fetch.spec.ts › should json stringify bool body when content-type is application/json [pass]
library/global-fetch.spec.ts › should json stringify literal string undefined body when content-type is application/json [pass]
library/global-fetch.spec.ts › should json stringify null body when content-type is application/json [pass]
library/global-fetch.spec.ts › should json stringify number (falsey) body when content-type is application/json [pass]
library/global-fetch.spec.ts › should json stringify number body when content-type is application/json [pass]
library/global-fetch.spec.ts › should json stringify object body when content-type is application/json [pass]
library/global-fetch.spec.ts › should json stringify string (falsey) body when content-type is application/json [pass]
library/global-fetch.spec.ts › should json stringify string body when content-type is application/json [pass]
library/global-fetch.spec.ts › should keep headers capitalization [pass]
library/global-fetch.spec.ts › should not double stringify array body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not double stringify bool (false) body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not double stringify bool body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not double stringify literal string undefined body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not double stringify null body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not double stringify number (falsey) body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not double stringify number body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not double stringify object body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not double stringify string (falsey) body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not double stringify string body when content-type is application/json [pass]
library/global-fetch.spec.ts › should not fail on empty body with encoding [pass]
library/global-fetch.spec.ts › should not follow redirects when maxRedirects is set to 0 [pass]
library/global-fetch.spec.ts › should propagate extra http headers with redirects [pass]
library/global-fetch.spec.ts › should propagate ignoreHTTPSErrors on redirects [pass]
library/global-fetch.spec.ts › should remove content-length from redirected post requests [pass]
library/global-fetch.spec.ts › should resolve url relative to global baseURL option [pass]
library/global-fetch.spec.ts › should retry ECONNRESET [pass]
library/global-fetch.spec.ts › should return body for failing requests [pass]
library/global-fetch.spec.ts › should return empty body [pass]
library/global-fetch.spec.ts › should return error with correct credentials and mismatching hostname [pass]
library/global-fetch.spec.ts › should return error with correct credentials and mismatching port [pass]
library/global-fetch.spec.ts › should return error with correct credentials and mismatching scheme [pass]
library/global-fetch.spec.ts › should return error with wrong credentials [pass]
library/global-fetch.spec.ts › should serialize post data on the client [pass]
library/global-fetch.spec.ts › should set playwright as user-agent [pass]
library/global-fetch.spec.ts › should support HTTPCredentials.send [pass]
library/global-fetch.spec.ts › should support WWW-Authenticate: Basic [pass]
library/global-fetch.spec.ts › should support global httpCredentials option [pass]
library/global-fetch.spec.ts › should support global ignoreHTTPSErrors option [pass]
library/global-fetch.spec.ts › should support global timeout option [pass]
library/global-fetch.spec.ts › should support global userAgent option [pass]
library/global-fetch.spec.ts › should throw after dispose [pass]
library/global-fetch.spec.ts › should throw an error when maxRedirects is exceeded [pass]
library/global-fetch.spec.ts › should throw an error when maxRedirects is less than 0 [pass]
library/global-fetch.spec.ts › should work with correct credentials and matching origin [pass]
library/global-fetch.spec.ts › should work with correct credentials and matching origin case insensitive [pass]
library/har.spec.ts › should attach content [fail]
library/har.spec.ts › should calculate time [pass]
library/har.spec.ts › should contain http2 for http2 requests [fail]
library/har.spec.ts › should filter by glob [pass]
library/har.spec.ts › should filter by regexp [pass]
library/har.spec.ts › should filter favicon and favicon redirects [unknown]
library/har.spec.ts › should have -1 _transferSize when its a failed request [pass]
library/har.spec.ts › should have browser [fail]
library/har.spec.ts › should have connection details [fail]
library/har.spec.ts › should have connection details for failed requests [fail]
library/har.spec.ts › should have connection details for redirects [fail]
library/har.spec.ts › should have different hars for concurrent contexts [pass]
library/har.spec.ts › should have pages [pass]
library/har.spec.ts › should have pages in persistent context [pass]
library/har.spec.ts › should have popup requests [fail]
library/har.spec.ts › should have security details [fail]
library/har.spec.ts › should have version and creator [pass]
library/har.spec.ts › should include API request [pass]
library/har.spec.ts › should include binary postData [fail]
library/har.spec.ts › should include content @smoke [fail]
library/har.spec.ts › should include cookies [pass]
library/har.spec.ts › should include form params [fail]
library/har.spec.ts › should include postData [fail]
library/har.spec.ts › should include query params [pass]
library/har.spec.ts › should include redirectURL [pass]
library/har.spec.ts › should include redirects from API request [pass]
library/har.spec.ts › should include request [pass]
library/har.spec.ts › should include response [pass]
library/har.spec.ts › should include secure set-cookies [fail]
library/har.spec.ts › should include set-cookies [fail]
library/har.spec.ts › should include set-cookies with comma [fail]
library/har.spec.ts › should include sizes [fail]
library/har.spec.ts › should not contain internal pages [pass]
library/har.spec.ts › should not hang on resources served from cache [pass]
library/har.spec.ts › should not hang on slow chunked response [fail]
library/har.spec.ts › should omit content [pass]
library/har.spec.ts › should omit content legacy [pass]
library/har.spec.ts › should record failed request headers [pass]
library/har.spec.ts › should record failed request overrides [timeout]
library/har.spec.ts › should record request overrides [timeout]
library/har.spec.ts › should report the correct _transferSize with PNG files [fail]
library/har.spec.ts › should report the correct request body size [pass]
library/har.spec.ts › should report the correct request body size when the bodySize is 0 [pass]
library/har.spec.ts › should report the correct response body size when the bodySize is 0 [pass]
library/har.spec.ts › should respect minimal mode for API Requests [pass]
library/har.spec.ts › should return receive time [fail]
library/har.spec.ts › should return security details directly from response [fail]
library/har.spec.ts › should return server address directly from response [fail]
library/har.spec.ts › should skip invalid Expires [pass]
library/har.spec.ts › should throw without path [pass]
library/har.spec.ts › should use attach mode for zip extension [fail]
library/har.spec.ts › should work with gzip compression [fail]
library/headful.spec.ts › Page.bringToFront should work [fail]
library/headful.spec.ts › headless and headful should use same default fonts [fail]
library/headful.spec.ts › should click background tab [fail]
library/headful.spec.ts › should click bottom row w/ infobar in OOPIF [timeout]
library/headful.spec.ts › should click in OOPIF [fail]
library/headful.spec.ts › should click when viewport size is larger than screen [fail]
library/headful.spec.ts › should close browser after context menu was triggered [pass]
library/headful.spec.ts › should close browser with beforeunload page [pass]
library/headful.spec.ts › should close browsercontext with pending beforeunload dialog [fail]
library/headful.spec.ts › should dispatch click events to oversized viewports [pass]
library/headful.spec.ts › should have default url when launching browser @smoke [pass]
library/headful.spec.ts › should not block third party SameSite=None cookies [fail]
library/headful.spec.ts › should not crash when creating second context [pass]
library/headful.spec.ts › should not override viewport size when passed null [pass]
library/headful.spec.ts › should(not) block third party cookies [pass]
library/hit-target.spec.ts › should block all events when hit target is wrong [pass]
library/hit-target.spec.ts › should block all events when hit target is wrong and element detaches [pass]
library/hit-target.spec.ts › should block click when mousedown fails [pass]
library/hit-target.spec.ts › should click an element inside closed shadow root [fail]
library/hit-target.spec.ts › should click in custom element [fail]
library/hit-target.spec.ts › should click in iframe with padding [fail]
library/hit-target.spec.ts › should click in iframe with padding 2 [fail]
library/hit-target.spec.ts › should click into frame inside closed shadow root [fail]
library/hit-target.spec.ts › should click the button again after document.write [pass]
library/hit-target.spec.ts › should click when element detaches in mousedown [pass]
library/hit-target.spec.ts › should detect overlaid element in a transformed iframe [fail]
library/hit-target.spec.ts › should detect overlay from another shadow root [fail]
library/hit-target.spec.ts › should not block programmatic events [pass]
library/hit-target.spec.ts › should not click an element overlaying iframe with the target [fail]
library/hit-target.spec.ts › should not click iframe overlaying the target [fail]
library/hit-target.spec.ts › should work with block inside inline [fail]
library/hit-target.spec.ts › should work with block inside inline in shadow dom [fail]
library/hit-target.spec.ts › should work with block-block-block inside inline-inline [fail]
library/hit-target.spec.ts › should work with drag and drop that moves the element under cursor [pass]
library/hit-target.spec.ts › should work with mui select [pass]
library/ignorehttpserrors.spec.ts › serviceWorker should intercept document request [fail]
library/ignorehttpserrors.spec.ts › should fail with WebSocket if not ignored [pass]
library/ignorehttpserrors.spec.ts › should isolate contexts [fail]
library/ignorehttpserrors.spec.ts › should work @smoke [fail]
library/ignorehttpserrors.spec.ts › should work with WebSocket [fail]
library/ignorehttpserrors.spec.ts › should work with mixed content [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should attribute navigation to click [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should await popup [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should check [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should check a radio button [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should check with keyboard [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should click [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should click after same-document navigation [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should click button with nested div [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should double click [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should emit single keyup on ArrowDown [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should fill [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should fill [contentEditable] [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should fill japanese text [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should fill textarea [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should fill textarea with new lines at the end [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should ignore AltGraph [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should ignore programmatic events [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should make a positioned click on a canvas [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should middle click [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should not target selector preview by text regexp [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should not throw csp directive violation errors [pass]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should press [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should record ArrowDown [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should record omnibox navigations after performAction [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should record omnibox navigations after recordAction [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should record slider [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should select [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should select with size attribute [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should uncheck [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should update selected element after pressing Tab [fail]
library/inspector/cli-codegen-1.spec.ts › cli codegen › should work with TrustedTypes [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › click should emit events in order [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should --save-trace [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should check input with chaining id [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should clear files [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should contain close page [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should contain open page [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should contain second page [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should download files [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should fill tricky characters [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should handle dialogs [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should handle history.postData [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should not clash pages [timeout]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should not lead to an error if html gets clicked [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should record navigations after identical pushState [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should record open in a new tab with url [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should reset hover model on action when element detaches [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should save assets via SIGINT [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should update active model on action [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should update hover model on action [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should upload a single file [fail]
library/inspector/cli-codegen-2.spec.ts › cli codegen › should upload multiple files [fail]
library/inspector/cli-codegen-2.spec.ts › should --test-id-attribute [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should assert value [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should assert value on disabled input [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should assert value on disabled select [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should assert visibility [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should click locator.first [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should click locator.nth [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should consume contextmenu events, despite a custom context menu [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should consume pointer events [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate frame locators [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate frame locators with id attribute [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate frame locators with name attribute [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate frame locators with special characters in name attribute [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate frame locators with testId [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate frame locators with title attribute [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate getByAltText [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate getByLabel [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate getByLabel without regex [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate getByPlaceholder [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate getByTestId [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should generate role locators undef frame locators [fail]
library/inspector/cli-codegen-3.spec.ts › cli codegen › should keep toolbar visible even if webpage erases content in hydration [fail]
library/inspector/cli-codegen-csharp.spec.ts › should not print context options method override in mstest if no options were passed [fail]
library/inspector/cli-codegen-csharp.spec.ts › should not print context options method override in nunit if no options were passed [fail]
library/inspector/cli-codegen-csharp.spec.ts › should print a valid basic program in mstest [fail]
library/inspector/cli-codegen-csharp.spec.ts › should print a valid basic program in nunit [fail]
library/inspector/cli-codegen-csharp.spec.ts › should print context options method override in mstest if options were passed [fail]
library/inspector/cli-codegen-csharp.spec.ts › should print context options method override in nunit if options were passed [fail]
library/inspector/cli-codegen-csharp.spec.ts › should print load/save storageState [fail]
library/inspector/cli-codegen-csharp.spec.ts › should print the correct context options for custom settings [fail]
library/inspector/cli-codegen-csharp.spec.ts › should print the correct context options when using a device [unknown]
library/inspector/cli-codegen-csharp.spec.ts › should print the correct context options when using a device and additional options [unknown]
library/inspector/cli-codegen-csharp.spec.ts › should print the correct imports and context options [fail]
library/inspector/cli-codegen-csharp.spec.ts › should work with --save-har [fail]
library/inspector/cli-codegen-java.spec.ts › should print a valid basic program in junit [fail]
library/inspector/cli-codegen-java.spec.ts › should print load/save storage_state [fail]
library/inspector/cli-codegen-java.spec.ts › should print the correct context options for custom settings [fail]
library/inspector/cli-codegen-java.spec.ts › should print the correct context options when using a device [unknown]
library/inspector/cli-codegen-java.spec.ts › should print the correct context options when using a device and additional options [unknown]
library/inspector/cli-codegen-java.spec.ts › should print the correct imports and context options [fail]
library/inspector/cli-codegen-java.spec.ts › should print the correct imports in junit [fail]
library/inspector/cli-codegen-java.spec.ts › should work with --save-har [fail]
library/inspector/cli-codegen-javascript.spec.ts › should print load/save storageState [fail]
library/inspector/cli-codegen-javascript.spec.ts › should print the correct context options for custom settings [fail]
library/inspector/cli-codegen-javascript.spec.ts › should print the correct context options when using a device [unknown]
library/inspector/cli-codegen-javascript.spec.ts › should print the correct context options when using a device and additional options [unknown]
library/inspector/cli-codegen-javascript.spec.ts › should print the correct imports and context options [fail]
library/inspector/cli-codegen-javascript.spec.ts › should save the codegen output to a file if specified [fail]
library/inspector/cli-codegen-pytest.spec.ts › should print the correct context options when using a device and lang [unknown]
library/inspector/cli-codegen-pytest.spec.ts › should print the correct imports and context options [fail]
library/inspector/cli-codegen-pytest.spec.ts › should save the codegen output to a file if specified [fail]
library/inspector/cli-codegen-python-async.spec.ts › should print load/save storage_state [fail]
library/inspector/cli-codegen-python-async.spec.ts › should print the correct context options for custom settings [fail]
library/inspector/cli-codegen-python-async.spec.ts › should print the correct context options when using a device [unknown]
library/inspector/cli-codegen-python-async.spec.ts › should print the correct context options when using a device and additional options [unknown]
library/inspector/cli-codegen-python-async.spec.ts › should print the correct imports and context options [fail]
library/inspector/cli-codegen-python-async.spec.ts › should save the codegen output to a file if specified [fail]
library/inspector/cli-codegen-python-async.spec.ts › should work with --save-har [fail]
library/inspector/cli-codegen-python.spec.ts › should print load/save storage_state [fail]
library/inspector/cli-codegen-python.spec.ts › should print the correct context options for custom settings [fail]
library/inspector/cli-codegen-python.spec.ts › should print the correct context options when using a device [unknown]
library/inspector/cli-codegen-python.spec.ts › should print the correct context options when using a device and additional options [unknown]
library/inspector/cli-codegen-python.spec.ts › should print the correct imports and context options [fail]
library/inspector/cli-codegen-python.spec.ts › should save the codegen output to a file if specified [fail]
library/inspector/cli-codegen-test.spec.ts › should print load storageState [fail]
library/inspector/cli-codegen-test.spec.ts › should print the correct context options for custom settings [fail]
library/inspector/cli-codegen-test.spec.ts › should print the correct context options when using a device [unknown]
library/inspector/cli-codegen-test.spec.ts › should print the correct context options when using a device and additional options [unknown]
library/inspector/cli-codegen-test.spec.ts › should print the correct imports and context options [fail]
library/inspector/cli-codegen-test.spec.ts › should work with --save-har [fail]
library/inspector/console-api.spec.ts › expected properties on playwright object [pass]
library/inspector/console-api.spec.ts › should support locator.and() [fail]
library/inspector/console-api.spec.ts › should support locator.or() [fail]
library/inspector/console-api.spec.ts › should support playwright.$, playwright.$$ [pass]
library/inspector/console-api.spec.ts › should support playwright.getBy* [fail]
library/inspector/console-api.spec.ts › should support playwright.locator({ has }) [fail]
library/inspector/console-api.spec.ts › should support playwright.locator({ hasNot }) [fail]
library/inspector/console-api.spec.ts › should support playwright.locator.value [fail]
library/inspector/console-api.spec.ts › should support playwright.locator.values [fail]
library/inspector/console-api.spec.ts › should support playwright.selector [pass]
library/inspector/pause.spec.ts › pause › should hide internal calls [pass]
library/inspector/pause.spec.ts › pause › should highlight locators with custom testId [fail]
library/inspector/pause.spec.ts › pause › should highlight on explore [fail]
library/inspector/pause.spec.ts › pause › should highlight on explore (csharp) [fail]
library/inspector/pause.spec.ts › pause › should highlight pointer, only in main frame [fail]
library/inspector/pause.spec.ts › pause › should highlight waitForEvent [fail]
library/inspector/pause.spec.ts › pause › should not prevent key events [fail]
library/inspector/pause.spec.ts › pause › should pause after a navigation [pass]
library/inspector/pause.spec.ts › pause › should pause and resume the script [pass]
library/inspector/pause.spec.ts › pause › should pause and resume the script with keyboard shortcut [pass]
library/inspector/pause.spec.ts › pause › should pause on context close [pass]
library/inspector/pause.spec.ts › pause › should pause on next pause [pass]
library/inspector/pause.spec.ts › pause › should pause on page close [pass]
library/inspector/pause.spec.ts › pause › should populate log [fail]
library/inspector/pause.spec.ts › pause › should populate log with error [fail]
library/inspector/pause.spec.ts › pause › should populate log with error in waitForEvent [fail]
library/inspector/pause.spec.ts › pause › should populate log with waitForEvent [fail]
library/inspector/pause.spec.ts › pause › should resume from console [pass]
library/inspector/pause.spec.ts › pause › should show expect.toHaveText [fail]
library/inspector/pause.spec.ts › pause › should show source [pass]
library/inspector/pause.spec.ts › pause › should skip input when resuming [fail]
library/inspector/pause.spec.ts › pause › should step [fail]
library/inspector/pause.spec.ts › pause › should step with keyboard shortcut [fail]
library/inspector/pause.spec.ts › should not reset timeouts [pass]
library/inspector/pause.spec.ts › should resume when closing inspector [pass]
library/launcher.spec.ts › should have a devices object [pass]
library/launcher.spec.ts › should have an errors object [pass]
library/launcher.spec.ts › should kill browser process on timeout after close [pass]
library/launcher.spec.ts › should throw a friendly error if its headed and there is no xserver on linux running [fail]
library/locator-generator.spec.ts › asLocator internal:and [pass]
library/locator-generator.spec.ts › asLocator internal:chain [pass]
library/locator-generator.spec.ts › asLocator internal:or [pass]
library/locator-generator.spec.ts › asLocator xpath [pass]
library/locator-generator.spec.ts › generate multiple locators [pass]
library/locator-generator.spec.ts › parse locators strictly [pass]
library/locator-generator.spec.ts › parseLocator css [pass]
library/locator-generator.spec.ts › parseLocator quotes [pass]
library/locator-generator.spec.ts › reverse engineer frameLocator [pass]
library/locator-generator.spec.ts › reverse engineer getByRole [pass]
library/locator-generator.spec.ts › reverse engineer has [pass]
library/locator-generator.spec.ts › reverse engineer has + hasText [pass]
library/locator-generator.spec.ts › reverse engineer hasNot [pass]
library/locator-generator.spec.ts › reverse engineer hasNotText [pass]
library/locator-generator.spec.ts › reverse engineer hasText [pass]
library/locator-generator.spec.ts › reverse engineer ignore-case locators [pass]
library/locator-generator.spec.ts › reverse engineer internal:has-text locators [fail]
library/locator-generator.spec.ts › reverse engineer locators [pass]
library/locator-generator.spec.ts › reverse engineer locators with regex [pass]
library/locator-generator.spec.ts › reverse engineer ordered locators [pass]
library/logger.spec.ts › should log @smoke [pass]
library/logger.spec.ts › should log context-level [fail]
library/modernizr.spec.ts › Mobile Safari [unknown]
library/modernizr.spec.ts › Safari Desktop [unknown]
library/page-clock.frozen.spec.ts › clock should be frozen [unknown]
library/page-clock.frozen.spec.ts › clock should be realtime [unknown]
library/page-clock.spec.ts › Date.now › check Date.now is an integer [pass]
library/page-clock.spec.ts › Date.now › check Date.now is an integer (2) [pass]
library/page-clock.spec.ts › fastForward › ignores timers which wouldn't be run [pass]
library/page-clock.spec.ts › fastForward › pushes back execution time for skipped timers [pass]
library/page-clock.spec.ts › fastForward › supports string time arguments [pass]
library/page-clock.spec.ts › popup › should not run time before popup on pause [pass]
library/page-clock.spec.ts › popup › should run time before popup [timeout]
library/page-clock.spec.ts › popup › should tick after popup [timeout]
library/page-clock.spec.ts › popup › should tick before popup [timeout]
library/page-clock.spec.ts › runFor › creates updated Date while ticking [pass]
library/page-clock.spec.ts › runFor › does not trigger without sufficient delay [pass]
library/page-clock.spec.ts › runFor › passes 1 minute [pass]
library/page-clock.spec.ts › runFor › passes 2 hours, 34 minutes and 10 seconds [pass]
library/page-clock.spec.ts › runFor › passes 8 seconds [pass]
library/page-clock.spec.ts › runFor › returns the current now value [pass]
library/page-clock.spec.ts › runFor › throws for invalid format [pass]
library/page-clock.spec.ts › runFor › triggers after sufficient delay [pass]
library/page-clock.spec.ts › runFor › triggers event when some throw [fail]
library/page-clock.spec.ts › runFor › triggers immediately without specified delay [pass]
library/page-clock.spec.ts › runFor › triggers multiple simultaneous timers [pass]
library/page-clock.spec.ts › runFor › triggers simultaneous timers [pass]
library/page-clock.spec.ts › runFor › waits after setTimeout was called [pass]
library/page-clock.spec.ts › setFixedTime › allows installing fake timers after settings time [pass]
library/page-clock.spec.ts › setFixedTime › allows setting time multiple times [pass]
library/page-clock.spec.ts › setFixedTime › does not fake methods [pass]
library/page-clock.spec.ts › setFixedTime › fixed time is not affected by clock manipulation [pass]
library/page-clock.spec.ts › stubTimers › fakes Date constructor [pass]
library/page-clock.spec.ts › stubTimers › global fake setTimeout should return id [pass]
library/page-clock.spec.ts › stubTimers › replaces global clearInterval [pass]
library/page-clock.spec.ts › stubTimers › replaces global clearTimeout [pass]
library/page-clock.spec.ts › stubTimers › replaces global performance.now [pass]
library/page-clock.spec.ts › stubTimers › replaces global performance.timeOrigin [pass]
library/page-clock.spec.ts › stubTimers › replaces global setInterval [pass]
library/page-clock.spec.ts › stubTimers › replaces global setTimeout [pass]
library/page-clock.spec.ts › stubTimers › sets initial timestamp [pass]
library/page-clock.spec.ts › stubTimers › should throw for invalid date [pass]
library/page-clock.spec.ts › while on pause › fastForward should not run nested immediate [pass]
library/page-clock.spec.ts › while on pause › runFor should not run nested immediate [pass]
library/page-clock.spec.ts › while on pause › runFor should not run nested immediate from microtask [pass]
library/page-clock.spec.ts › while running › should fastForward [pass]
library/page-clock.spec.ts › while running › should fastForwardTo [pass]
library/page-clock.spec.ts › while running › should pause [pass]
library/page-clock.spec.ts › while running › should pause and fastForward [pass]
library/page-clock.spec.ts › while running › should progress time [pass]
library/page-clock.spec.ts › while running › should runFor [pass]
library/page-clock.spec.ts › while running › should set system time on pause [pass]
library/page-event-crash.spec.ts › should be able to close context when page crashes [fail]
library/page-event-crash.spec.ts › should cancel navigation when page crashes [fail]
library/page-event-crash.spec.ts › should cancel waitForEvent when page crashes [fail]
library/page-event-crash.spec.ts › should emit crash event when page crashes [fail]
library/page-event-crash.spec.ts › should throw on any action after page crashes [fail]
library/pdf.spec.ts › should be able to generate outline [unknown]
library/pdf.spec.ts › should be able to save file [unknown]
library/permissions.spec.ts › permissions › should accumulate when adding [fail]
library/permissions.spec.ts › permissions › should be prompt by default [pass]
library/permissions.spec.ts › permissions › should clear permissions [fail]
library/permissions.spec.ts › permissions › should deny permission when not listed [fail]
library/permissions.spec.ts › permissions › should fail when bad permission is given [fail]
library/permissions.spec.ts › permissions › should grant geolocation permission when origin is listed [fail]
library/permissions.spec.ts › permissions › should grant notifications permission when listed [fail]
library/permissions.spec.ts › permissions › should grant permission when creating context [fail]
library/permissions.spec.ts › permissions › should grant permission when listed for all domains [fail]
library/permissions.spec.ts › permissions › should isolate permissions between browser contexts [fail]
library/permissions.spec.ts › permissions › should prompt for geolocation permission when origin is not listed [pass]
library/permissions.spec.ts › permissions › should reset permissions [fail]
library/permissions.spec.ts › permissions › should trigger permission onchange [fail]
library/permissions.spec.ts › should support clipboard read [fail]
library/permissions.spec.ts › storage access [unknown]
library/popup.spec.ts › BrowserContext.addInitScript should apply to a cross-process popup [pass]
library/popup.spec.ts › BrowserContext.addInitScript should apply to an in-process popup [fail]
library/popup.spec.ts › should expose function from browser context [fail]
library/popup.spec.ts › should inherit extra headers from browser context [fail]
library/popup.spec.ts › should inherit http credentials from browser context [pass]
library/popup.spec.ts › should inherit offline from browser context [fail]
library/popup.spec.ts › should inherit touch support from browser context [fail]
library/popup.spec.ts › should inherit user agent from browser context @smoke [fail]
library/popup.spec.ts › should inherit viewport size from browser context [fail]
library/popup.spec.ts › should not dispatch binding on a closed page [fail]
library/popup.spec.ts › should not throttle rAF in the opener page [timeout]
library/popup.spec.ts › should not throw when click closes popup [timeout]
library/popup.spec.ts › should respect routes from browser context [fail]
library/popup.spec.ts › should respect routes from browser context when using window.open [pass]
library/popup.spec.ts › should use viewport size from window features [timeout]
library/proxy-pattern.spec.ts › socks proxy patter matcher [pass]
library/proxy.spec.ts › does launch without a port [pass]
library/proxy.spec.ts › should authenticate [fail]
library/proxy.spec.ts › should exclude patterns [pass]
library/proxy.spec.ts › should proxy local network requests › by default › link-local [pass]
library/proxy.spec.ts › should proxy local network requests › by default › localhost [fail]
library/proxy.spec.ts › should proxy local network requests › by default › loopback address [fail]
library/proxy.spec.ts › should proxy local network requests › with other bypasses › link-local [pass]
library/proxy.spec.ts › should proxy local network requests › with other bypasses › localhost [fail]
library/proxy.spec.ts › should proxy local network requests › with other bypasses › loopback address [fail]
library/proxy.spec.ts › should throw for bad server value [pass]
library/proxy.spec.ts › should use SOCKS proxy for websocket requests [pass]
library/proxy.spec.ts › should use proxy @smoke [fail]
library/proxy.spec.ts › should use proxy for second page [fail]
library/proxy.spec.ts › should use proxy with emulated user agent [unknown]
library/proxy.spec.ts › should use socks proxy [fail]
library/proxy.spec.ts › should use socks proxy in second page [fail]
library/proxy.spec.ts › should work with IP:PORT notion [fail]
library/proxy.spec.ts › should work with authenticate followed by redirect [fail]
library/resource-timing.spec.ts › should work @smoke [pass]
library/resource-timing.spec.ts › should work for SSL [fail]
library/resource-timing.spec.ts › should work for redirect [pass]
library/resource-timing.spec.ts › should work for subresource [pass]
library/resource-timing.spec.ts › should work when serving from memory cache [pass]
library/role-utils.spec.ts › accessible name nested treeitem [fail]
library/role-utils.spec.ts › accessible name with slots [fail]
library/role-utils.spec.ts › axe-core accessible-text [fail]
library/role-utils.spec.ts › axe-core implicit-role [fail]
library/role-utils.spec.ts › control embedded in a label [fail]
library/role-utils.spec.ts › control embedded in a target element [fail]
library/role-utils.spec.ts › display:contents should be visible when contents are visible [fail]
library/role-utils.spec.ts › label/labelled-by aria-hidden with descendants [fail]
library/role-utils.spec.ts › native controls [fail]
library/role-utils.spec.ts › native controls labelled-by [fail]
library/role-utils.spec.ts › own aria-label concatenated with aria-labelledby [fail]
library/role-utils.spec.ts › should ignore stylesheet from hidden aria-labelledby subtree [fail]
library/role-utils.spec.ts › should not include hidden pseudo into accessible name [fail]
library/role-utils.spec.ts › should work with form and tricky input names [fail]
library/role-utils.spec.ts › svg role=presentation [fail]
library/role-utils.spec.ts › svg title [fail]
library/role-utils.spec.ts › wpt accname #0 [pass]
library/role-utils.spec.ts › wpt accname #1 [pass]
library/role-utils.spec.ts › wpt accname #2 [fail]
library/role-utils.spec.ts › wpt accname #3 [pass]
library/role-utils.spec.ts › wpt accname non-manual [pass]
library/route-web-socket.spec.ts › no-match › should work when connection errors out [pass]
library/route-web-socket.spec.ts › no-match › should work with binaryType=arraybuffer [pass]
library/route-web-socket.spec.ts › no-match › should work with binaryType=blob [pass]
library/route-web-socket.spec.ts › no-match › should work with client-side close [pass]
library/route-web-socket.spec.ts › no-match › should work with error after successful open [fail]
library/route-web-socket.spec.ts › no-match › should work with text message [pass]
library/route-web-socket.spec.ts › no-mock › should work when connection errors out [pass]
library/route-web-socket.spec.ts › no-mock › should work with binaryType=arraybuffer [pass]
library/route-web-socket.spec.ts › no-mock › should work with binaryType=blob [pass]
library/route-web-socket.spec.ts › no-mock › should work with client-side close [pass]
library/route-web-socket.spec.ts › no-mock › should work with error after successful open [fail]
library/route-web-socket.spec.ts › no-mock › should work with text message [pass]
library/route-web-socket.spec.ts › pass-through › should work when connection errors out [pass]
library/route-web-socket.spec.ts › pass-through › should work with binaryType=arraybuffer [pass]
library/route-web-socket.spec.ts › pass-through › should work with binaryType=blob [pass]
library/route-web-socket.spec.ts › pass-through › should work with client-side close [pass]
library/route-web-socket.spec.ts › pass-through › should work with error after successful open [fail]
library/route-web-socket.spec.ts › pass-through › should work with text message [pass]
library/route-web-socket.spec.ts › should emit close upon frame detach [pass]
library/route-web-socket.spec.ts › should emit close upon frame navigation [pass]
library/route-web-socket.spec.ts › should not throw after page closure [pass]
library/route-web-socket.spec.ts › should pattern match [pass]
library/route-web-socket.spec.ts › should route on context [pass]
library/route-web-socket.spec.ts › should work with server [pass]
library/route-web-socket.spec.ts › should work with ws.close [pass]
library/route-web-socket.spec.ts › should work without server [pass]
library/screenshot.spec.ts › element screenshot › element screenshot should work with a mobile viewport [fail]
library/screenshot.spec.ts › element screenshot › element screenshot should work with device scale factor [fail]
library/screenshot.spec.ts › element screenshot › element screenshots should handle vh units  [pass]
library/screenshot.spec.ts › element screenshot › page screenshot should capture css transform with device pixels [fail]
library/screenshot.spec.ts › element screenshot › should capture full element when larger than viewport with device scale factor [fail]
library/screenshot.spec.ts › element screenshot › should capture full element when larger than viewport with device scale factor and scale:css [fail]
library/screenshot.spec.ts › element screenshot › should restore default viewport after fullPage screenshot [pass]
library/screenshot.spec.ts › element screenshot › should restore viewport after element screenshot and exception [fail]
library/screenshot.spec.ts › element screenshot › should restore viewport after page screenshot and exception [pass]
library/screenshot.spec.ts › element screenshot › should restore viewport after page screenshot and timeout [pass]
library/screenshot.spec.ts › element screenshot › should take element screenshot when default viewport is null and restore back [fail]
library/screenshot.spec.ts › element screenshot › should take fullPage screenshots when default viewport is null [pass]
library/screenshot.spec.ts › element screenshot › should take screenshots when default viewport is null [fail]
library/screenshot.spec.ts › element screenshot › should work if the main resource hangs [fail]
library/screenshot.spec.ts › page screenshot › should handle vh units  [pass]
library/screenshot.spec.ts › page screenshot › should run in parallel in multiple pages [fail]
library/screenshot.spec.ts › page screenshot › should throw if screenshot size is too large with device scale factor [fail]
library/screenshot.spec.ts › page screenshot › should work with a mobile viewport [fail]
library/screenshot.spec.ts › page screenshot › should work with a mobile viewport and clip [fail]
library/screenshot.spec.ts › page screenshot › should work with a mobile viewport and fullPage [fail]
library/screenshot.spec.ts › page screenshot › should work with device scale factor [fail]
library/screenshot.spec.ts › page screenshot › should work with device scale factor and clip [fail]
library/screenshot.spec.ts › page screenshot › should work with device scale factor and scale:css [fail]
library/screenshot.spec.ts › page screenshot › should work with device scale factor, clip and scale:css [fail]
library/screenshot.spec.ts › page screenshot › should work with large size [pass]
library/selector-generator.spec.ts › selector generator › should accept valid aria-label for candidate consideration [fail]
library/selector-generator.spec.ts › selector generator › should accept valid data-test-id for candidate consideration [fail]
library/selector-generator.spec.ts › selector generator › should chain text after parent [fail]
library/selector-generator.spec.ts › selector generator › should escape text with quote [fail]
library/selector-generator.spec.ts › selector generator › should escape text with slash [fail]
library/selector-generator.spec.ts › selector generator › should find text in shadow dom [fail]
library/selector-generator.spec.ts › selector generator › should generate exact label when necessary [fail]
library/selector-generator.spec.ts › selector generator › should generate exact placeholder when necessary [fail]
library/selector-generator.spec.ts › selector generator › should generate exact role when necessary [fail]
library/selector-generator.spec.ts › selector generator › should generate exact text when necessary [fail]
library/selector-generator.spec.ts › selector generator › should generate exact title when necessary [fail]
library/selector-generator.spec.ts › selector generator › should generate label selector [fail]
library/selector-generator.spec.ts › selector generator › should generate multiple: noId [fail]
library/selector-generator.spec.ts › selector generator › should generate multiple: noId noText [fail]
library/selector-generator.spec.ts › selector generator › should generate multiple: noText in role [fail]
library/selector-generator.spec.ts › selector generator › should generate multiple: noText in text [fail]
library/selector-generator.spec.ts › selector generator › should generate relative selector [fail]
library/selector-generator.spec.ts › selector generator › should generate text and normalize whitespace [fail]
library/selector-generator.spec.ts › selector generator › should generate text for <input type=button> [fail]
library/selector-generator.spec.ts › selector generator › should generate title selector [fail]
library/selector-generator.spec.ts › selector generator › should handle first non-unique data-testid [fail]
library/selector-generator.spec.ts › selector generator › should handle second non-unique data-testid [fail]
library/selector-generator.spec.ts › selector generator › should ignore empty aria-label for candidate consideration [fail]
library/selector-generator.spec.ts › selector generator › should ignore empty data-test-id for candidate consideration [fail]
library/selector-generator.spec.ts › selector generator › should ignore empty role for candidate consideration [fail]
library/selector-generator.spec.ts › selector generator › should match in deep shadow dom [fail]
library/selector-generator.spec.ts › selector generator › should match in shadow dom [fail]
library/selector-generator.spec.ts › selector generator › should not accept invalid role for candidate consideration [fail]
library/selector-generator.spec.ts › selector generator › should not escape spaces inside named attr selectors [fail]
library/selector-generator.spec.ts › selector generator › should not escape text with >> [fail]
library/selector-generator.spec.ts › selector generator › should not improve guid text [fail]
library/selector-generator.spec.ts › selector generator › should not prefer zero-sized button over inner span [fail]
library/selector-generator.spec.ts › selector generator › should not use generated id [fail]
library/selector-generator.spec.ts › selector generator › should not use input[value] [fail]
library/selector-generator.spec.ts › selector generator › should not use text for select [fail]
library/selector-generator.spec.ts › selector generator › should prefer button over inner span [fail]
library/selector-generator.spec.ts › selector generator › should prefer data-testid [fail]
library/selector-generator.spec.ts › selector generator › should prefer role other input[type] [fail]
library/selector-generator.spec.ts › selector generator › should prefer role=button over inner span [fail]
library/selector-generator.spec.ts › selector generator › should prioritise attributes correctly › name [fail]
library/selector-generator.spec.ts › selector generator › should prioritise attributes correctly › placeholder [fail]
library/selector-generator.spec.ts › selector generator › should prioritise attributes correctly › role [fail]
library/selector-generator.spec.ts › selector generator › should prioritise attributes correctly › type [fail]
library/selector-generator.spec.ts › selector generator › should properly join child selectors under nested ordinals [fail]
library/selector-generator.spec.ts › selector generator › should separate selectors by >> [fail]
library/selector-generator.spec.ts › selector generator › should trim long text [fail]
library/selector-generator.spec.ts › selector generator › should trim text [fail]
library/selector-generator.spec.ts › selector generator › should try to improve label text by shortening [fail]
library/selector-generator.spec.ts › selector generator › should try to improve role name [fail]
library/selector-generator.spec.ts › selector generator › should try to improve text [fail]
library/selector-generator.spec.ts › selector generator › should try to improve text by shortening [fail]
library/selector-generator.spec.ts › selector generator › should use data-testid in strict errors [fail]
library/selector-generator.spec.ts › selector generator › should use internal:has-text [fail]
library/selector-generator.spec.ts › selector generator › should use internal:has-text with regexp [fail]
library/selector-generator.spec.ts › selector generator › should use internal:has-text with regexp with a quote [fail]
library/selector-generator.spec.ts › selector generator › should use nested ordinals [fail]
library/selector-generator.spec.ts › selector generator › should use ordinal for identical nodes [fail]
library/selector-generator.spec.ts › selector generator › should use parent text [fail]
library/selector-generator.spec.ts › selector generator › should use readable id [fail]
library/selector-generator.spec.ts › selector generator › should use the name attributes for elements that can have it [fail]
library/selector-generator.spec.ts › selector generator › should work in dynamic iframes without navigation [fail]
library/selector-generator.spec.ts › selector generator › should work with tricky attributes [fail]
library/selector-generator.spec.ts › selector generator › should work without CSS.escape [fail]
library/selectors-register.spec.ts › should handle errors [pass]
library/selectors-register.spec.ts › should not rely on engines working from the root [fail]
library/selectors-register.spec.ts › should throw a nice error if the selector returns a bad value [pass]
library/selectors-register.spec.ts › should work [fail]
library/selectors-register.spec.ts › should work in main and isolated world [fail]
library/selectors-register.spec.ts › should work when registered on global [fail]
library/selectors-register.spec.ts › should work with path [fail]
library/shared-worker.spec.ts › should survive shared worker restart [pass]
library/signals.spec.ts › should close the browser when the node process closes [timeout]
library/signals.spec.ts › should remove temp dir on process.exit [timeout]
library/signals.spec.ts › signals › should close the browser on SIGHUP [timeout]
library/signals.spec.ts › signals › should close the browser on SIGINT [timeout]
library/signals.spec.ts › signals › should close the browser on SIGTERM [timeout]
library/signals.spec.ts › signals › should kill the browser on SIGINT + SIGTERM [timeout]
library/signals.spec.ts › signals › should kill the browser on SIGTERM + SIGINT [timeout]
library/signals.spec.ts › signals › should kill the browser on double SIGINT and remove temp dir [timeout]
library/signals.spec.ts › signals › should not prevent default SIGTERM handling after browser close [timeout]
library/signals.spec.ts › signals › should report browser close signal 2 [timeout]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo check [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo click [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo dblclick [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo dispatchEvent [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo fill [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo focus [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo hover [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo press [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo selectOption [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo setInputFiles [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo type [fail]
library/slowmo.spec.ts › slowMo › ElementHandle SlowMo uncheck [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo check [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo click [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo dblclick [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo dispatchEvent [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo fill [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo focus [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo goto [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo hover [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo press [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo selectOption [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo setInputFiles [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo type [fail]
library/slowmo.spec.ts › slowMo › Frame SlowMo uncheck [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo check [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo click [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo dblclick [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo dispatchEvent [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo fill [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo focus [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo goto [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo hover [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo press [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo reload [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo selectOption [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo setInputFiles [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo type [fail]
library/slowmo.spec.ts › slowMo › Page SlowMo uncheck [fail]
library/snapshotter.spec.ts › snapshots › empty adopted style sheets should not prevent node refs [fail]
library/snapshotter.spec.ts › snapshots › should capture frame [pass]
library/snapshotter.spec.ts › snapshots › should capture iframe [pass]
library/snapshotter.spec.ts › snapshots › should capture iframe with srcdoc [pass]
library/snapshotter.spec.ts › snapshots › should capture resources [fail]
library/snapshotter.spec.ts › snapshots › should capture snapshot target [fail]
library/snapshotter.spec.ts › snapshots › should collect multiple [fail]
library/snapshotter.spec.ts › snapshots › should collect on attribute change [fail]
library/snapshotter.spec.ts › snapshots › should collect snapshot [fail]
library/snapshotter.spec.ts › snapshots › should have a custom doctype [fail]
library/snapshotter.spec.ts › snapshots › should not navigate on anchor clicks [fail]
library/snapshotter.spec.ts › snapshots › should preserve BASE and other content on reset [pass]
library/snapshotter.spec.ts › snapshots › should replace meta charset attr that specifies charset [fail]
library/snapshotter.spec.ts › snapshots › should replace meta content attr that specifies charset [fail]
library/snapshotter.spec.ts › snapshots › should respect CSSOM change through CSSGroupingRule [fail]
library/snapshotter.spec.ts › snapshots › should respect attr removal [fail]
library/snapshotter.spec.ts › snapshots › should respect inline CSSOM change [fail]
library/snapshotter.spec.ts › snapshots › should respect node removal [fail]
library/snapshotter.spec.ts › snapshots › should respect subresource CSSOM change [fail]
library/tap.spec.ts › locators › should send all of the correct events [fail]
library/tap.spec.ts › should not send mouse events touchstart is canceled [fail]
library/tap.spec.ts › should not send mouse events when touchend is canceled [fail]
library/tap.spec.ts › should not wait for a navigation caused by a tap [fail]
library/tap.spec.ts › should send all of the correct events @smoke [fail]
library/tap.spec.ts › should send well formed touch points [fail]
library/tap.spec.ts › should wait until an element is visible to tap it [fail]
library/tap.spec.ts › should work with modifiers [fail]
library/tap.spec.ts › trial run should not tap [fail]
library/trace-viewer.spec.ts › should allow hiding route actions [unknown]
library/trace-viewer.spec.ts › should allow showing screenshots instead of snapshots [unknown]
library/trace-viewer.spec.ts › should capture data-url svg iframe [unknown]
library/trace-viewer.spec.ts › should capture iframe with sandbox attribute [unknown]
library/trace-viewer.spec.ts › should complain about newer version of trace in old viewer [unknown]
library/trace-viewer.spec.ts › should contain action info [fail]
library/trace-viewer.spec.ts › should contain adopted style sheets [fail]
library/trace-viewer.spec.ts › should display language-specific locators [unknown]
library/trace-viewer.spec.ts › should display waitForLoadState even if did not wait for it [unknown]
library/trace-viewer.spec.ts › should filter network requests by resource type [fail]
library/trace-viewer.spec.ts › should filter network requests by url [unknown]
library/trace-viewer.spec.ts › should follow redirects [unknown]
library/trace-viewer.spec.ts › should handle case where neither snapshots nor screenshots exist [fail]
library/trace-viewer.spec.ts › should handle file URIs [fail]
library/trace-viewer.spec.ts › should handle multiple headers [unknown]
library/trace-viewer.spec.ts › should handle src=blob [unknown]
library/trace-viewer.spec.ts › should have correct snapshot size [fail]
library/trace-viewer.spec.ts › should have correct stack trace [unknown]
library/trace-viewer.spec.ts › should have network request overrides [fail]
library/trace-viewer.spec.ts › should have network request overrides 2 [unknown]
library/trace-viewer.spec.ts › should have network requests [unknown]
library/trace-viewer.spec.ts › should highlight expect failure [unknown]
library/trace-viewer.spec.ts › should highlight locator in iframe while typing [unknown]
library/trace-viewer.spec.ts › should highlight target element in shadow dom [unknown]
library/trace-viewer.spec.ts › should highlight target elements [fail]
library/trace-viewer.spec.ts › should ignore 304 responses [unknown]
library/trace-viewer.spec.ts › should include metainfo [unknown]
library/trace-viewer.spec.ts › should include requestUrl in route.abort [unknown]
library/trace-viewer.spec.ts › should include requestUrl in route.continue [unknown]
library/trace-viewer.spec.ts › should include requestUrl in route.fulfill [unknown]
library/trace-viewer.spec.ts › should not crash with broken locator [fail]
library/trace-viewer.spec.ts › should open console errors on click [fail]
library/trace-viewer.spec.ts › should open simple trace viewer [fail]
library/trace-viewer.spec.ts › should open snapshot in new browser context [unknown]
library/trace-viewer.spec.ts › should open trace viewer on specific host [unknown]
library/trace-viewer.spec.ts › should open trace-1.31 [unknown]
library/trace-viewer.spec.ts › should open trace-1.37 [fail]
library/trace-viewer.spec.ts › should open two trace files [fail]
library/trace-viewer.spec.ts › should open two trace files of the same test [unknown]
library/trace-viewer.spec.ts › should open two trace viewers [unknown]
library/trace-viewer.spec.ts › should pick locator [fail]
library/trace-viewer.spec.ts › should pick locator in iframe [fail]
library/trace-viewer.spec.ts › should popup snapshot [fail]
library/trace-viewer.spec.ts › should prefer later resource request with the same method [unknown]
library/trace-viewer.spec.ts › should preserve currentSrc [unknown]
library/trace-viewer.spec.ts › should preserve noscript when javascript is disabled [unknown]
library/trace-viewer.spec.ts › should properly synchronize local and remote time [unknown]
library/trace-viewer.spec.ts › should register custom elements [unknown]
library/trace-viewer.spec.ts › should remove noscript by default [fail]
library/trace-viewer.spec.ts › should remove noscript when javaScriptEnabled is set to true [unknown]
library/trace-viewer.spec.ts › should render console [unknown]
library/trace-viewer.spec.ts › should render network bars [unknown]
library/trace-viewer.spec.ts › should restore control values [unknown]
library/trace-viewer.spec.ts › should restore scroll positions [unknown]
library/trace-viewer.spec.ts › should serve css without content-type [unknown]
library/trace-viewer.spec.ts › should serve overridden request [fail]
library/trace-viewer.spec.ts › should show action source [fail]
library/trace-viewer.spec.ts › should show baseURL in metadata pane [fail]
library/trace-viewer.spec.ts › should show correct request start time [unknown]
library/trace-viewer.spec.ts › should show empty trace viewer [fail]
library/trace-viewer.spec.ts › should show font preview [unknown]
library/trace-viewer.spec.ts › should show null as a param [unknown]
library/trace-viewer.spec.ts › should show only one pointer with multilevel iframes [unknown]
library/trace-viewer.spec.ts › should show params and return value [unknown]
library/trace-viewer.spec.ts › should show similar actions from library-only trace [fail]
library/trace-viewer.spec.ts › should show snapshot URL [unknown]
library/trace-viewer.spec.ts › should update highlight when typing [unknown]
library/trace-viewer.spec.ts › should work with adopted style sheets and all: unset [unknown]
library/trace-viewer.spec.ts › should work with adopted style sheets and replace/replaceSync [unknown]
library/trace-viewer.spec.ts › should work with meta CSP [fail]
library/trace-viewer.spec.ts › should work with nesting CSS selectors [fail]
library/tracing.spec.ts › should collect sources [fail]
library/tracing.spec.ts › should collect trace with resources, but no js [fail]
library/tracing.spec.ts › should collect two traces [fail]
library/tracing.spec.ts › should exclude internal pages [pass]
library/tracing.spec.ts › should export trace concurrently to second navigation [pass]
library/tracing.spec.ts › should flush console events on tracing stop [pass]
library/tracing.spec.ts › should hide internal stack frames [fail]
library/tracing.spec.ts › should hide internal stack frames in expect [fail]
library/tracing.spec.ts › should ignore iframes in head [pass]
library/tracing.spec.ts › should include context API requests [pass]
library/tracing.spec.ts › should include interrupted actions [fail]
library/tracing.spec.ts › should not collect snapshots by default [fail]
library/tracing.spec.ts › should not crash when browser closes mid-trace [pass]
library/tracing.spec.ts › should not emit after w/o before [pass]
library/tracing.spec.ts › should not flush console events [pass]
library/tracing.spec.ts › should not hang for clicks that open dialogs [fail]
library/tracing.spec.ts › should not include buffers in the trace [pass]
library/tracing.spec.ts › should not include trace resources from the previous chunks [fail]
library/tracing.spec.ts › should not stall on dialogs [fail]
library/tracing.spec.ts › should not throw when stopping without start but not exporting [pass]
library/tracing.spec.ts › should overwrite existing file [fail]
library/tracing.spec.ts › should produce screencast frames crop [fail]
library/tracing.spec.ts › should produce screencast frames fit [fail]
library/tracing.spec.ts › should produce screencast frames scale [fail]
library/tracing.spec.ts › should record global request trace [pass]
library/tracing.spec.ts › should record network failures [pass]
library/tracing.spec.ts › should respect tracesDir and name [fail]
library/tracing.spec.ts › should store global request traces separately [pass]
library/tracing.spec.ts › should store postData for global request [pass]
library/tracing.spec.ts › should survive browser.close with auto-created traces dir [pass]
library/tracing.spec.ts › should throw when starting with different options [pass]
library/tracing.spec.ts › should throw when stopping without start [pass]
library/tracing.spec.ts › should use the correct apiName for event driven callbacks [pass]
library/tracing.spec.ts › should work with multiple chunks [fail]
library/unroute-behavior.spec.ts › context.close should not wait for active route handlers on the owned pages [pass]
library/unroute-behavior.spec.ts › context.unroute should not wait for pending handlers to complete [timeout]
library/unroute-behavior.spec.ts › context.unrouteAll removes all handlers [pass]
library/unroute-behavior.spec.ts › context.unrouteAll should not wait for pending handlers to complete if behavior is ignoreErrors [timeout]
library/unroute-behavior.spec.ts › context.unrouteAll should wait for pending handlers to complete [timeout]
library/unroute-behavior.spec.ts › page.close does not wait for active route handlers [pass]
library/unroute-behavior.spec.ts › page.close should not wait for active route handlers on the owning context [pass]
library/unroute-behavior.spec.ts › page.unroute should not wait for pending handlers to complete [pass]
library/unroute-behavior.spec.ts › page.unrouteAll removes all routes [pass]
library/unroute-behavior.spec.ts › page.unrouteAll should not wait for pending handlers to complete if behavior is ignoreErrors [pass]
library/unroute-behavior.spec.ts › page.unrouteAll should wait for pending handlers to complete [pass]
library/unroute-behavior.spec.ts › route.continue should not throw if page has been closed [pass]
library/unroute-behavior.spec.ts › route.fallback should not throw if page has been closed [pass]
library/unroute-behavior.spec.ts › route.fulfill should not throw if page has been closed [pass]
library/video.spec.ts › screencast › saveAs should throw when no video frames [timeout]
library/video.spec.ts › screencast › should be 800x450 by default [timeout]
library/video.spec.ts › screencast › should be 800x600 with null viewport [timeout]
library/video.spec.ts › screencast › should capture css transformation [timeout]
library/video.spec.ts › screencast › should capture full viewport [fail]
library/video.spec.ts › screencast › should capture full viewport on hidpi [fail]
library/video.spec.ts › screencast › should capture navigation [timeout]
library/video.spec.ts › screencast › should capture static page [timeout]
library/video.spec.ts › screencast › should capture static page in persistent context @smoke [fail]
library/video.spec.ts › screencast › should continue recording main page after popup closes [fail]
library/video.spec.ts › screencast › should delete video [timeout]
library/video.spec.ts › screencast › should emulate an iphone [timeout]
library/video.spec.ts › screencast › should expose video path [fail]
library/video.spec.ts › screencast › should expose video path blank page [timeout]
library/video.spec.ts › screencast › should expose video path blank popup [fail]
library/video.spec.ts › screencast › should not create video for internal pages [unknown]
library/video.spec.ts › screencast › should scale frames down to the requested size  [timeout]
library/video.spec.ts › screencast › should throw if browser dies [fail]
library/video.spec.ts › screencast › should throw on browser close [fail]
library/video.spec.ts › screencast › should throw without recordVideo.dir [pass]
library/video.spec.ts › screencast › should use viewport scaled down to fit into 800x800 as default size [timeout]
library/video.spec.ts › screencast › should wait for video to finish if page was closed [fail]
library/video.spec.ts › screencast › should work for popups [fail]
library/video.spec.ts › screencast › should work with old options [timeout]
library/video.spec.ts › screencast › should work with relative path for recordVideo.dir [timeout]
library/video.spec.ts › screencast › should work with video+trace [timeout]
library/video.spec.ts › screencast › should work with weird screen resolution [timeout]
library/video.spec.ts › screencast › videoSize should require videosPath [pass]
library/video.spec.ts › should saveAs video [timeout]
library/web-socket.spec.ts › should emit binary frame events [timeout]
library/web-socket.spec.ts › should emit close events [timeout]
library/web-socket.spec.ts › should emit error [timeout]
library/web-socket.spec.ts › should emit frame events [timeout]
library/web-socket.spec.ts › should filter out the close events when the server closes with a message [timeout]
library/web-socket.spec.ts › should not have stray error events [timeout]
library/web-socket.spec.ts › should pass self as argument to close event [timeout]
library/web-socket.spec.ts › should reject waitForEvent on page close [timeout]
library/web-socket.spec.ts › should reject waitForEvent on socket close [timeout]
library/web-socket.spec.ts › should turn off when offline [unknown]
library/web-socket.spec.ts › should work @smoke [pass]