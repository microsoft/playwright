page/elementhandle-bounding-box.spec.ts › should force a layout [fail]
page/elementhandle-bounding-box.spec.ts › should get frame box [fail]
page/elementhandle-bounding-box.spec.ts › should handle nested frames [fail]
page/elementhandle-bounding-box.spec.ts › should handle scroll offset and click [fail]
page/elementhandle-bounding-box.spec.ts › should return null for invisible elements [fail]
page/elementhandle-bounding-box.spec.ts › should work [fail]
page/elementhandle-bounding-box.spec.ts › should work when inline box child is outside of viewport [fail]
page/elementhandle-bounding-box.spec.ts › should work with SVG nodes [fail]
page/elementhandle-click.spec.ts › should double click the button [fail]
page/elementhandle-click.spec.ts › should throw for <br> elements with force [fail]
page/elementhandle-click.spec.ts › should throw for detached nodes [pass]
page/elementhandle-click.spec.ts › should throw for hidden nodes with force [pass]
page/elementhandle-click.spec.ts › should throw for recursively hidden nodes with force [pass]
page/elementhandle-click.spec.ts › should work @smoke [pass]
page/elementhandle-click.spec.ts › should work for Shadow DOM v1 [pass]
page/elementhandle-click.spec.ts › should work for TextNodes [fail]
page/elementhandle-click.spec.ts › should work with Node removed [pass]
page/elementhandle-content-frame.spec.ts › should return null for document.documentElement [pass]
page/elementhandle-content-frame.spec.ts › should return null for non-iframes [pass]
page/elementhandle-content-frame.spec.ts › should work [pass]
page/elementhandle-content-frame.spec.ts › should work for cross-frame evaluations [fail]
page/elementhandle-content-frame.spec.ts › should work for cross-process iframes [pass]
page/elementhandle-convenience.spec.ts › getAttribute should work [pass]
page/elementhandle-convenience.spec.ts › innerHTML should work [pass]
page/elementhandle-convenience.spec.ts › innerText should throw [fail]
page/elementhandle-convenience.spec.ts › innerText should work [pass]
page/elementhandle-convenience.spec.ts › inputValue should work [pass]
page/elementhandle-convenience.spec.ts › isChecked should work [fail]
page/elementhandle-convenience.spec.ts › isEditable should work [fail]
page/elementhandle-convenience.spec.ts › isEnabled and isDisabled should work [fail]
page/elementhandle-convenience.spec.ts › isEnabled and isDisabled should work with <select/> option/optgroup correctly [fail]
page/elementhandle-convenience.spec.ts › isVisible and isHidden should work [fail]
page/elementhandle-convenience.spec.ts › isVisible should not throw when the DOM element is not connected [fail]
page/elementhandle-convenience.spec.ts › should have a nice preview [pass]
page/elementhandle-convenience.spec.ts › should have a nice preview for non-ascii attributes/children [fail]
page/elementhandle-convenience.spec.ts › textContent should work [pass]
page/elementhandle-convenience.spec.ts › textContent should work on ShadowRoot [fail]
page/elementhandle-eval-on-selector.spec.ts › should not throw in case of missing selector for all [fail]
page/elementhandle-eval-on-selector.spec.ts › should retrieve content from subtree [fail]
page/elementhandle-eval-on-selector.spec.ts › should retrieve content from subtree for all [fail]
page/elementhandle-eval-on-selector.spec.ts › should throw in case of missing selector [fail]
page/elementhandle-eval-on-selector.spec.ts › should work [fail]
page/elementhandle-eval-on-selector.spec.ts › should work for all [fail]
page/elementhandle-misc.spec.ts › should allow disposing twice [fail]
page/elementhandle-misc.spec.ts › should check the box [fail]
page/elementhandle-misc.spec.ts › should check the box using setChecked [fail]
page/elementhandle-misc.spec.ts › should fill input [pass]
page/elementhandle-misc.spec.ts › should fill input when Node is removed [pass]
page/elementhandle-misc.spec.ts › should focus a button [pass]
page/elementhandle-misc.spec.ts › should hover [pass]
page/elementhandle-misc.spec.ts › should hover when Node is removed [pass]
page/elementhandle-misc.spec.ts › should select single option [pass]
page/elementhandle-misc.spec.ts › should uncheck the box [fail]
page/elementhandle-owner-frame.spec.ts › should work [fail]
page/elementhandle-owner-frame.spec.ts › should work for adopted elements [fail]
page/elementhandle-owner-frame.spec.ts › should work for cross-frame evaluations [fail]
page/elementhandle-owner-frame.spec.ts › should work for cross-process iframes [fail]
page/elementhandle-owner-frame.spec.ts › should work for detached elements [fail]
page/elementhandle-owner-frame.spec.ts › should work for document [fail]
page/elementhandle-owner-frame.spec.ts › should work for iframe elements [fail]
page/elementhandle-press.spec.ts › should not modify selection when focused [fail]
page/elementhandle-press.spec.ts › should not select existing value [fail]
page/elementhandle-press.spec.ts › should reset selection when not focused [fail]
page/elementhandle-press.spec.ts › should work [fail]
page/elementhandle-press.spec.ts › should work with number input [fail]
page/elementhandle-query-selector.spec.ts › should query existing element [fail]
page/elementhandle-query-selector.spec.ts › should query existing elements [fail]
page/elementhandle-query-selector.spec.ts › should return empty array for non-existing elements [fail]
page/elementhandle-query-selector.spec.ts › should return null for non-existing element [fail]
page/elementhandle-query-selector.spec.ts › should work for adopted elements [timeout]
page/elementhandle-query-selector.spec.ts › xpath should query existing element [fail]
page/elementhandle-query-selector.spec.ts › xpath should return null for non-existing element [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › path option should create subdirectories [pass]
page/elementhandle-screenshot.spec.ts › element screenshot › should capture full element when larger than viewport [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should capture full element when larger than viewport in parallel [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should fail to screenshot a detached element [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should not issue resize event [pass]
page/elementhandle-screenshot.spec.ts › element screenshot › should prefer type over extension [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should scroll 15000px into view [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should scroll element into view [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should take into account padding and border [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should take screenshot of disabled button [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should timeout waiting for visible [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should wait for element to stop moving [pass]
page/elementhandle-screenshot.spec.ts › element screenshot › should wait for visible [pass]
page/elementhandle-screenshot.spec.ts › element screenshot › should work [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should work for an element with an offset [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should work for an element with fractional dimensions [fail]
page/elementhandle-screenshot.spec.ts › element screenshot › should work when main world busts JSON.stringify [pass]
page/elementhandle-screenshot.spec.ts › element screenshot › should work with a rotated element [fail]
page/elementhandle-scroll-into-view.spec.ts › should scroll display:contents into view [fail]
page/elementhandle-scroll-into-view.spec.ts › should throw for detached element [fail]
page/elementhandle-scroll-into-view.spec.ts › should timeout waiting for visible [fail]
page/elementhandle-scroll-into-view.spec.ts › should wait for display:none to become visible [fail]
page/elementhandle-scroll-into-view.spec.ts › should wait for element to stop moving [fail]
page/elementhandle-scroll-into-view.spec.ts › should wait for nested display:none to become visible [fail]
page/elementhandle-scroll-into-view.spec.ts › should work @smoke [pass]
page/elementhandle-scroll-into-view.spec.ts › should work for visibility:hidden element [fail]
page/elementhandle-scroll-into-view.spec.ts › should work for zero-sized element [fail]
page/elementhandle-select-text.spec.ts › should select input [fail]
page/elementhandle-select-text.spec.ts › should select plain div [pass]
page/elementhandle-select-text.spec.ts › should select textarea [fail]
page/elementhandle-select-text.spec.ts › should timeout waiting for invisible element [pass]
page/elementhandle-select-text.spec.ts › should wait for visible [pass]
page/elementhandle-type.spec.ts › should not modify selection when focused [fail]
page/elementhandle-type.spec.ts › should not select existing value [fail]
page/elementhandle-type.spec.ts › should reset selection when not focused [fail]
page/elementhandle-type.spec.ts › should work [fail]
page/elementhandle-type.spec.ts › should work with number input [fail]
page/elementhandle-wait-for-element-state.spec.ts › should throw waiting for enabled when detached [fail]
page/elementhandle-wait-for-element-state.spec.ts › should throw waiting for visible when detached [fail]
page/elementhandle-wait-for-element-state.spec.ts › should timeout waiting for visible [fail]
page/elementhandle-wait-for-element-state.spec.ts › should wait for already hidden [fail]
page/elementhandle-wait-for-element-state.spec.ts › should wait for already visible [fail]
page/elementhandle-wait-for-element-state.spec.ts › should wait for aria enabled button [fail]
page/elementhandle-wait-for-element-state.spec.ts › should wait for button with an aria-disabled parent [fail]
page/elementhandle-wait-for-element-state.spec.ts › should wait for editable input [fail]
page/elementhandle-wait-for-element-state.spec.ts › should wait for hidden [fail]
page/elementhandle-wait-for-element-state.spec.ts › should wait for hidden when detached [fail]
page/elementhandle-wait-for-element-state.spec.ts › should wait for stable position [pass]
page/elementhandle-wait-for-element-state.spec.ts › should wait for visible [fail]
page/eval-on-selector-all.spec.ts › should auto-detect css selector [fail]
page/eval-on-selector-all.spec.ts › should return complex values [fail]
page/eval-on-selector-all.spec.ts › should support * capture [fail]
page/eval-on-selector-all.spec.ts › should support * capture when multiple paths match [fail]
page/eval-on-selector-all.spec.ts › should support >> syntax [fail]
page/eval-on-selector-all.spec.ts › should work with bogus Array.from [fail]
page/eval-on-selector-all.spec.ts › should work with css selector [fail]
page/eval-on-selector-all.spec.ts › should work with text selector [fail]
page/eval-on-selector-all.spec.ts › should work with xpath selector [fail]
page/eval-on-selector.spec.ts › should accept ElementHandles as arguments [fail]
page/eval-on-selector.spec.ts › should accept arguments [fail]
page/eval-on-selector.spec.ts › should auto-detect css selector [fail]
page/eval-on-selector.spec.ts › should auto-detect css selector with attributes [fail]
page/eval-on-selector.spec.ts › should auto-detect nested selectors [fail]
page/eval-on-selector.spec.ts › should not stop at first failure with >> syntax [fail]
page/eval-on-selector.spec.ts › should return complex values [fail]
page/eval-on-selector.spec.ts › should support * capture [fail]
page/eval-on-selector.spec.ts › should support >> syntax [fail]
page/eval-on-selector.spec.ts › should support >> syntax with different engines [fail]
page/eval-on-selector.spec.ts › should support spaces with >> syntax [pass]
page/eval-on-selector.spec.ts › should throw error if no element is found [pass]
page/eval-on-selector.spec.ts › should throw on malformed * capture [pass]
page/eval-on-selector.spec.ts › should throw on multiple * captures [pass]
page/eval-on-selector.spec.ts › should work with css selector [fail]
page/eval-on-selector.spec.ts › should work with data-test selector [fail]
page/eval-on-selector.spec.ts › should work with data-test-id selector [fail]
page/eval-on-selector.spec.ts › should work with data-testid selector [fail]
page/eval-on-selector.spec.ts › should work with id selector [fail]
page/eval-on-selector.spec.ts › should work with quotes in css attributes [fail]
page/eval-on-selector.spec.ts › should work with quotes in css attributes when missing [fail]
page/eval-on-selector.spec.ts › should work with spaces in css attributes [fail]
page/eval-on-selector.spec.ts › should work with spaces in css attributes when missing [fail]
page/eval-on-selector.spec.ts › should work with text selector [fail]
page/eval-on-selector.spec.ts › should work with text selector in quotes [fail]
page/eval-on-selector.spec.ts › should work with xpath selector [fail]
page/expect-boolean.spec.ts › not.toBeDisabled div [fail]
page/expect-boolean.spec.ts › not.toBeEmpty [fail]
page/expect-boolean.spec.ts › not.toBeOK [pass]
page/expect-boolean.spec.ts › should print selector syntax error [pass]
page/expect-boolean.spec.ts › should print unknown engine error [pass]
page/expect-boolean.spec.ts › toBeAttached › default [fail]
page/expect-boolean.spec.ts › toBeAttached › eventually [fail]
page/expect-boolean.spec.ts › toBeAttached › eventually with not [fail]
page/expect-boolean.spec.ts › toBeAttached › fail [fail]
page/expect-boolean.spec.ts › toBeAttached › fail with not [fail]
page/expect-boolean.spec.ts › toBeAttached › over navigation [pass]
page/expect-boolean.spec.ts › toBeAttached › with attached:false [fail]
page/expect-boolean.spec.ts › toBeAttached › with attached:true [fail]
page/expect-boolean.spec.ts › toBeAttached › with frameLocator [fail]
page/expect-boolean.spec.ts › toBeAttached › with hidden element [fail]
page/expect-boolean.spec.ts › toBeAttached › with impossible timeout [fail]
page/expect-boolean.spec.ts › toBeAttached › with impossible timeout .not [fail]
page/expect-boolean.spec.ts › toBeAttached › with not [fail]
page/expect-boolean.spec.ts › toBeAttached › with not and attached:false [fail]
page/expect-boolean.spec.ts › toBeChecked with value [fail]
page/expect-boolean.spec.ts › toBeChecked › default [fail]
page/expect-boolean.spec.ts › toBeChecked › fail [fail]
page/expect-boolean.spec.ts › toBeChecked › fail missing [fail]
page/expect-boolean.spec.ts › toBeChecked › fail with checked:false [fail]
page/expect-boolean.spec.ts › toBeChecked › fail with not [fail]
page/expect-boolean.spec.ts › toBeChecked › friendly log [fail]
page/expect-boolean.spec.ts › toBeChecked › with checked:false [fail]
page/expect-boolean.spec.ts › toBeChecked › with checked:true [fail]
page/expect-boolean.spec.ts › toBeChecked › with impossible timeout [fail]
page/expect-boolean.spec.ts › toBeChecked › with impossible timeout .not [fail]
page/expect-boolean.spec.ts › toBeChecked › with not [fail]
page/expect-boolean.spec.ts › toBeChecked › with not and checked:false [fail]
page/expect-boolean.spec.ts › toBeChecked › with role [fail]
page/expect-boolean.spec.ts › toBeDisabled with value [fail]
page/expect-boolean.spec.ts › toBeEditable › default [fail]
page/expect-boolean.spec.ts › toBeEditable › with editable:false [fail]
page/expect-boolean.spec.ts › toBeEditable › with editable:true [fail]
page/expect-boolean.spec.ts › toBeEditable › with not [fail]
page/expect-boolean.spec.ts › toBeEditable › with not and editable:false [fail]
page/expect-boolean.spec.ts › toBeEmpty div [fail]
page/expect-boolean.spec.ts › toBeEmpty input [fail]
page/expect-boolean.spec.ts › toBeEnabled › default [fail]
page/expect-boolean.spec.ts › toBeEnabled › eventually [fail]
page/expect-boolean.spec.ts › toBeEnabled › eventually with not [fail]
page/expect-boolean.spec.ts › toBeEnabled › failed [fail]
page/expect-boolean.spec.ts › toBeEnabled › toBeDisabled [fail]
page/expect-boolean.spec.ts › toBeEnabled › with enabled:false [fail]
page/expect-boolean.spec.ts › toBeEnabled › with enabled:true [fail]
page/expect-boolean.spec.ts › toBeEnabled › with not and enabled:false [fail]
page/expect-boolean.spec.ts › toBeFocused [fail]
page/expect-boolean.spec.ts › toBeFocused with shadow elements [fail]
page/expect-boolean.spec.ts › toBeHidden with value [fail]
page/expect-boolean.spec.ts › toBeHidden › default [fail]
page/expect-boolean.spec.ts › toBeHidden › eventually [fail]
page/expect-boolean.spec.ts › toBeHidden › eventually with not [fail]
page/expect-boolean.spec.ts › toBeHidden › fail [fail]
page/expect-boolean.spec.ts › toBeHidden › fail with not [fail]
page/expect-boolean.spec.ts › toBeHidden › fail with not when nothing matching [fail]
page/expect-boolean.spec.ts › toBeHidden › when nothing matches [fail]
page/expect-boolean.spec.ts › toBeHidden › with impossible timeout [fail]
page/expect-boolean.spec.ts › toBeHidden › with impossible timeout .not [fail]
page/expect-boolean.spec.ts › toBeHidden › with not [fail]
page/expect-boolean.spec.ts › toBeOK [pass]
page/expect-boolean.spec.ts › toBeOK fail with invalid argument [pass]
page/expect-boolean.spec.ts › toBeOK fail with promise [pass]
page/expect-boolean.spec.ts › toBeOK should print response with text content type when fails › image content type [pass]
page/expect-boolean.spec.ts › toBeOK should print response with text content type when fails › no content type [pass]
page/expect-boolean.spec.ts › toBeOK should print response with text content type when fails › text content type [pass]
page/expect-boolean.spec.ts › toBeVisible › default [fail]
page/expect-boolean.spec.ts › toBeVisible › eventually [fail]
page/expect-boolean.spec.ts › toBeVisible › eventually with not [fail]
page/expect-boolean.spec.ts › toBeVisible › fail [fail]
page/expect-boolean.spec.ts › toBeVisible › fail with not [fail]
page/expect-boolean.spec.ts › toBeVisible › over navigation [pass]
page/expect-boolean.spec.ts › toBeVisible › with frameLocator [fail]
page/expect-boolean.spec.ts › toBeVisible › with frameLocator 2 [fail]
page/expect-boolean.spec.ts › toBeVisible › with impossible timeout [fail]
page/expect-boolean.spec.ts › toBeVisible › with impossible timeout .not [fail]
page/expect-boolean.spec.ts › toBeVisible › with not [fail]
page/expect-boolean.spec.ts › toBeVisible › with not and visible:false [fail]
page/expect-boolean.spec.ts › toBeVisible › with visible:false [fail]
page/expect-boolean.spec.ts › toBeVisible › with visible:true [fail]
page/expect-matcher-result.spec.ts › toBeChecked({ checked: false }) should have expected: false [fail]
page/expect-matcher-result.spec.ts › toBeTruthy-based assertions should have matcher result [fail]
page/expect-matcher-result.spec.ts › toEqual-based assertions should have matcher result [fail]
page/expect-matcher-result.spec.ts › toHaveScreenshot should populate matcherResult [fail]
page/expect-matcher-result.spec.ts › toMatchText-based assertions should have matcher result [fail]
page/expect-misc.spec.ts › toBeInViewport › should have good stack [pass]
page/expect-misc.spec.ts › toBeInViewport › should report intersection even if fully covered by other element [fail]
page/expect-misc.spec.ts › toBeInViewport › should respect ratio option [fail]
page/expect-misc.spec.ts › toBeInViewport › should work [fail]
page/expect-misc.spec.ts › toHaveAccessibleDescription [fail]
page/expect-misc.spec.ts › toHaveAccessibleName [fail]
page/expect-misc.spec.ts › toHaveAttribute › pass [fail]
page/expect-misc.spec.ts › toHaveAttribute › should match attribute without value [fail]
page/expect-misc.spec.ts › toHaveAttribute › should match boolean attribute [fail]
page/expect-misc.spec.ts › toHaveAttribute › should not match missing attribute [fail]
page/expect-misc.spec.ts › toHaveAttribute › should support boolean attribute with options [fail]
page/expect-misc.spec.ts › toHaveAttribute › support ignoreCase [fail]
page/expect-misc.spec.ts › toHaveCSS › custom css properties [fail]
page/expect-misc.spec.ts › toHaveCSS › pass [fail]
page/expect-misc.spec.ts › toHaveClass › fail [fail]
page/expect-misc.spec.ts › toHaveClass › fail with array [fail]
page/expect-misc.spec.ts › toHaveClass › pass [fail]
page/expect-misc.spec.ts › toHaveClass › pass with SVGs [fail]
page/expect-misc.spec.ts › toHaveClass › pass with array [fail]
page/expect-misc.spec.ts › toHaveCount should not produce logs twice [fail]
page/expect-misc.spec.ts › toHaveCount › eventually pass non-zero [fail]
page/expect-misc.spec.ts › toHaveCount › eventually pass not non-zero [fail]
page/expect-misc.spec.ts › toHaveCount › eventually pass zero [fail]
page/expect-misc.spec.ts › toHaveCount › fail zero [fail]
page/expect-misc.spec.ts › toHaveCount › fail zero 2 [fail]
page/expect-misc.spec.ts › toHaveCount › pass zero [fail]
page/expect-misc.spec.ts › toHaveCount › toHaveCount pass [fail]
page/expect-misc.spec.ts › toHaveId › pass [fail]
page/expect-misc.spec.ts › toHaveJSProperty › fail [fail]
page/expect-misc.spec.ts › toHaveJSProperty › fail boolean [fail]
page/expect-misc.spec.ts › toHaveJSProperty › fail boolean 2 [fail]
page/expect-misc.spec.ts › toHaveJSProperty › fail nested [fail]
page/expect-misc.spec.ts › toHaveJSProperty › fail number [fail]
page/expect-misc.spec.ts › toHaveJSProperty › fail string [fail]
page/expect-misc.spec.ts › toHaveJSProperty › pass [fail]
page/expect-misc.spec.ts › toHaveJSProperty › pass boolean [fail]
page/expect-misc.spec.ts › toHaveJSProperty › pass boolean 2 [fail]
page/expect-misc.spec.ts › toHaveJSProperty › pass nested [fail]
page/expect-misc.spec.ts › toHaveJSProperty › pass null [fail]
page/expect-misc.spec.ts › toHaveJSProperty › pass number [fail]
page/expect-misc.spec.ts › toHaveJSProperty › pass string [fail]
page/expect-misc.spec.ts › toHaveJSProperty › pass undefined [fail]
page/expect-misc.spec.ts › toHaveRole [fail]
page/expect-misc.spec.ts › toHaveText should not produce logs twice [fail]
page/expect-misc.spec.ts › toHaveText that does not match should not produce logs twice [fail]
page/expect-misc.spec.ts › toHaveTitle › fail [fail]
page/expect-misc.spec.ts › toHaveTitle › pass [fail]
page/expect-misc.spec.ts › toHaveURL › fail [pass]
page/expect-misc.spec.ts › toHaveURL › pass [pass]
page/expect-misc.spec.ts › toHaveURL › support ignoreCase [pass]
page/expect-timeout.spec.ts › should have timeout error name [pass]
page/expect-timeout.spec.ts › should not print timed out error message when page closes [fail]
page/expect-timeout.spec.ts › should not throw when navigating during first locator handler check [fail]
page/expect-timeout.spec.ts › should not throw when navigating during one-shot check [fail]
page/expect-timeout.spec.ts › should print timed out error message [fail]
page/expect-timeout.spec.ts › should print timed out error message when value does not match [fail]
page/expect-timeout.spec.ts › should print timed out error message when value does not match with impossible timeout [fail]
page/expect-timeout.spec.ts › should print timed out error message with impossible timeout [fail]
page/expect-timeout.spec.ts › should timeout during first locator handler check [fail]
page/expect-to-have-text.spec.ts › not.toHaveText › fail [fail]
page/expect-to-have-text.spec.ts › not.toHaveText › pass [fail]
page/expect-to-have-text.spec.ts › not.toHaveText › should work when selector does not match [fail]
page/expect-to-have-text.spec.ts › toContainText with array › fail [fail]
page/expect-to-have-text.spec.ts › toContainText with array › pass [fail]
page/expect-to-have-text.spec.ts › toContainText with regex › fail [fail]
page/expect-to-have-text.spec.ts › toContainText with regex › pass [fail]
page/expect-to-have-text.spec.ts › toHaveText with array › fail [fail]
page/expect-to-have-text.spec.ts › toHaveText with array › fail on not+empty [fail]
page/expect-to-have-text.spec.ts › toHaveText with array › fail on repeating array matchers [fail]
page/expect-to-have-text.spec.ts › toHaveText with array › pass [fail]
page/expect-to-have-text.spec.ts › toHaveText with array › pass empty [fail]
page/expect-to-have-text.spec.ts › toHaveText with array › pass eventually empty [fail]
page/expect-to-have-text.spec.ts › toHaveText with array › pass lazy [fail]
page/expect-to-have-text.spec.ts › toHaveText with array › pass not empty [fail]
page/expect-to-have-text.spec.ts › toHaveText with array › pass on empty [fail]
page/expect-to-have-text.spec.ts › toHaveText with regex › fail [fail]
page/expect-to-have-text.spec.ts › toHaveText with regex › pass [fail]
page/expect-to-have-text.spec.ts › toHaveText with text › fail [fail]
page/expect-to-have-text.spec.ts › toHaveText with text › fail with impossible timeout [fail]
page/expect-to-have-text.spec.ts › toHaveText with text › in shadow dom [fail]
page/expect-to-have-text.spec.ts › toHaveText with text › pass [fail]
page/expect-to-have-text.spec.ts › toHaveText with text › pass contain [fail]
page/expect-to-have-text.spec.ts › toHaveText with text › pass eventually [fail]
page/expect-to-have-text.spec.ts › toHaveText with text › with userInnerText [fail]
page/expect-to-have-value.spec.ts › should support failure [fail]
page/expect-to-have-value.spec.ts › should work [fail]
page/expect-to-have-value.spec.ts › should work with label [fail]
page/expect-to-have-value.spec.ts › should work with regex [fail]
page/expect-to-have-value.spec.ts › toHaveValues with multi-select › exact match with text failure [fail]
page/expect-to-have-value.spec.ts › toHaveValues with multi-select › fails when items not selected [fail]
page/expect-to-have-value.spec.ts › toHaveValues with multi-select › fails when multiple not specified [fail]
page/expect-to-have-value.spec.ts › toHaveValues with multi-select › fails when not a select element [fail]
page/expect-to-have-value.spec.ts › toHaveValues with multi-select › follows labels [fail]
page/expect-to-have-value.spec.ts › toHaveValues with multi-select › works with regex [fail]
page/expect-to-have-value.spec.ts › toHaveValues with multi-select › works with text [fail]
page/frame-evaluate.spec.ts › evaluateHandle should work [pass]
page/frame-evaluate.spec.ts › should allow cross-frame element handles [fail]
page/frame-evaluate.spec.ts › should be isolated between frames [pass]
page/frame-evaluate.spec.ts › should dispose context on cross-origin navigation [fail]
page/frame-evaluate.spec.ts › should dispose context on navigation [fail]
page/frame-evaluate.spec.ts › should execute after cross-site navigation [pass]
page/frame-evaluate.spec.ts › should have correct execution contexts @smoke [pass]
page/frame-evaluate.spec.ts › should have different execution contexts [pass]
page/frame-evaluate.spec.ts › should not allow cross-frame element handles when frames do not script each other [fail]
page/frame-evaluate.spec.ts › should not allow cross-frame js handles [pass]
page/frame-evaluate.spec.ts › should throw for detached frames [pass]
page/frame-evaluate.spec.ts › should work in iframes that failed initial navigation [fail]
page/frame-evaluate.spec.ts › should work in iframes that interrupted initial javascript url navigation [pass]
page/frame-frame-element.spec.ts › should throw when detached [pass]
page/frame-frame-element.spec.ts › should work @smoke [pass]
page/frame-frame-element.spec.ts › should work inside closed shadow root [fail]
page/frame-frame-element.spec.ts › should work inside declarative shadow root [fail]
page/frame-frame-element.spec.ts › should work with contentFrame [pass]
page/frame-frame-element.spec.ts › should work with frameset [pass]
page/frame-goto.spec.ts › should continue after client redirect [pass]
page/frame-goto.spec.ts › should navigate subframes @smoke [pass]
page/frame-goto.spec.ts › should reject when frame detaches [pass]
page/frame-goto.spec.ts › should return matching responses [fail]
page/frame-hierarchy.spec.ts › should detach child frames on navigation [pass]
page/frame-hierarchy.spec.ts › should handle nested frames @smoke [fail]
page/frame-hierarchy.spec.ts › should not send attach/detach events for main frame [pass]
page/frame-hierarchy.spec.ts › should persist mainFrame on cross-process navigation [pass]
page/frame-hierarchy.spec.ts › should refuse to display x-frame-options:deny iframe [fail]
page/frame-hierarchy.spec.ts › should report different frame instance when frame re-attaches [pass]
page/frame-hierarchy.spec.ts › should report frame from-inside shadow DOM [pass]
page/frame-hierarchy.spec.ts › should report frame.name() [fail]
page/frame-hierarchy.spec.ts › should report frame.parent() [pass]
page/frame-hierarchy.spec.ts › should return frame.page() [pass]
page/frame-hierarchy.spec.ts › should send "framenavigated" when navigating on anchor URLs [timeout]
page/frame-hierarchy.spec.ts › should send events when frames are manipulated dynamically [pass]
page/frame-hierarchy.spec.ts › should support framesets [pass]
page/interception.spec.ts › should disable memory cache when intercepting [timeout]
page/interception.spec.ts › should intercept after a service worker [pass]
page/interception.spec.ts › should intercept blob url requests [fail]
page/interception.spec.ts › should intercept network activity from worker [pass]
page/interception.spec.ts › should intercept network activity from worker 2 [pass]
page/interception.spec.ts › should intercept worker requests when enabled after worker creation [timeout]
page/interception.spec.ts › should not break remote worker importScripts [pass]
page/interception.spec.ts › should work with glob [pass]
page/interception.spec.ts › should work with navigation @smoke [pass]
page/interception.spec.ts › should work with regular expression passed from a different context [fail]
page/jshandle-as-element.spec.ts › should return ElementHandle for TextNodes [fail]
page/jshandle-as-element.spec.ts › should return null for non-elements [pass]
page/jshandle-as-element.spec.ts › should work @smoke [pass]
page/jshandle-as-element.spec.ts › should work with nullified Node [fail]
page/jshandle-evaluate.spec.ts › should work with expression [fail]
page/jshandle-evaluate.spec.ts › should work with function @smoke [pass]
page/jshandle-json-value.spec.ts › should handle circular objects [pass]
page/jshandle-json-value.spec.ts › should work @smoke [pass]
page/jshandle-json-value.spec.ts › should work with dates [fail]
page/jshandle-properties.spec.ts › getProperties should return empty map for non-objects [pass]
page/jshandle-properties.spec.ts › getProperties should return even non-own properties [fail]
page/jshandle-properties.spec.ts › getProperties should work [fail]
page/jshandle-properties.spec.ts › getProperties should work with elements [fail]
page/jshandle-properties.spec.ts › should work @smoke [fail]
page/jshandle-properties.spec.ts › should work with undefined, null, and empty [fail]
page/jshandle-properties.spec.ts › should work with unserializable values [fail]
page/jshandle-to-string.spec.ts › should beautifully render sparse arrays [fail]
page/jshandle-to-string.spec.ts › should work for complicated objects [fail]
page/jshandle-to-string.spec.ts › should work for primitives [pass]
page/jshandle-to-string.spec.ts › should work for promises [fail]
page/jshandle-to-string.spec.ts › should work with different subtypes @smoke [fail]
page/jshandle-to-string.spec.ts › should work with previewable subtypes [fail]
page/locator-click.spec.ts › should click if the target element is removed in pointerdown event [fail]
page/locator-click.spec.ts › should click if the target element is removed in pointerup event [fail]
page/locator-click.spec.ts › should double click the button [fail]
page/locator-click.spec.ts › should work @smoke [pass]
page/locator-click.spec.ts › should work for TextNodes [fail]
page/locator-click.spec.ts › should work with Node removed [pass]
page/locator-convenience.spec.ts › allInnerTexts should work [fail]
page/locator-convenience.spec.ts › allTextContents should work [fail]
page/locator-convenience.spec.ts › getAttribute should work [pass]
page/locator-convenience.spec.ts › innerHTML should work [pass]
page/locator-convenience.spec.ts › innerText should produce log [fail]
page/locator-convenience.spec.ts › innerText should throw [fail]
page/locator-convenience.spec.ts › innerText should work [pass]
page/locator-convenience.spec.ts › inputValue should work [pass]
page/locator-convenience.spec.ts › isChecked should work [fail]
page/locator-convenience.spec.ts › isChecked should work for indeterminate input [fail]
page/locator-convenience.spec.ts › isEditable should work [fail]
page/locator-convenience.spec.ts › isEnabled and isDisabled should work [fail]
page/locator-convenience.spec.ts › should have a nice preview [pass]
page/locator-convenience.spec.ts › should return page [fail]
page/locator-convenience.spec.ts › textContent should work [pass]
page/locator-element-handle.spec.ts › should query existing element @smoke [fail]
page/locator-element-handle.spec.ts › should query existing elements [fail]
page/locator-element-handle.spec.ts › should return empty array for non-existing elements [fail]
page/locator-element-handle.spec.ts › xpath should query existing element [fail]
page/locator-element-handle.spec.ts › xpath should return null for non-existing element [fail]
page/locator-evaluate.spec.ts › should not throw in case of missing selector for all [fail]
page/locator-evaluate.spec.ts › should retrieve content from subtree [fail]
page/locator-evaluate.spec.ts › should retrieve content from subtree for all [fail]
page/locator-evaluate.spec.ts › should work @smoke [fail]
page/locator-evaluate.spec.ts › should work for all [fail]
page/locator-frame.spec.ts › click should survive frame reattach [pass]
page/locator-frame.spec.ts › click should survive iframe navigation [pass]
page/locator-frame.spec.ts › frameLocator.owner should work [pass]
page/locator-frame.spec.ts › getBy coverage [pass]
page/locator-frame.spec.ts › locator.contentFrame should work [pass]
page/locator-frame.spec.ts › locator.frameLocator should not throw on first/last/nth [fail]
page/locator-frame.spec.ts › locator.frameLocator should throw on ambiguity [pass]
page/locator-frame.spec.ts › locator.frameLocator should work for iframe [pass]
page/locator-frame.spec.ts › should click in lazy iframe [pass]
page/locator-frame.spec.ts › should non work for non-frame [fail]
page/locator-frame.spec.ts › should not wait for frame [pass]
page/locator-frame.spec.ts › should not wait for frame 2 [pass]
page/locator-frame.spec.ts › should not wait for frame 3 [pass]
page/locator-frame.spec.ts › should wait for frame [pass]
page/locator-frame.spec.ts › should wait for frame 2 [pass]
page/locator-frame.spec.ts › should wait for frame to go [pass]
page/locator-frame.spec.ts › should work for $ and $$ [pass]
page/locator-frame.spec.ts › should work for iframe @smoke [pass]
page/locator-frame.spec.ts › should work for nested iframe [pass]
page/locator-frame.spec.ts › should work with COEP/COOP/CORP isolated iframe [fail]
page/locator-frame.spec.ts › wait for hidden should succeed when frame is not in dom [pass]
page/locator-frame.spec.ts › waitFor should survive frame reattach [pass]
page/locator-highlight.spec.ts › should highlight locator [fail]
page/locator-is-visible.spec.ts › isVisible and isHidden should work [fail]
page/locator-is-visible.spec.ts › isVisible and isHidden should work with details [fail]
page/locator-is-visible.spec.ts › isVisible during navigation should not throw [fail]
page/locator-is-visible.spec.ts › isVisible inside a button [fail]
page/locator-is-visible.spec.ts › isVisible inside a role=button [fail]
page/locator-is-visible.spec.ts › isVisible should be true for element outside view [fail]
page/locator-is-visible.spec.ts › isVisible should be true for opacity:0 [fail]
page/locator-is-visible.spec.ts › isVisible with invalid selector should throw [pass]
page/locator-list.spec.ts › locator.all should work [fail]
page/locator-misc-1.spec.ts › focus should respect strictness [fail]
page/locator-misc-1.spec.ts › should check the box [fail]
page/locator-misc-1.spec.ts › should check the box using setChecked [fail]
page/locator-misc-1.spec.ts › should clear input [pass]
page/locator-misc-1.spec.ts › should dispatch click event via ElementHandles [pass]
page/locator-misc-1.spec.ts › should fill input [pass]
page/locator-misc-1.spec.ts › should fill input when Node is removed [fail]
page/locator-misc-1.spec.ts › should focus and blur a button [pass]
page/locator-misc-1.spec.ts › should hover @smoke [pass]
page/locator-misc-1.spec.ts › should hover when Node is removed [pass]
page/locator-misc-1.spec.ts › should select single option [pass]
page/locator-misc-1.spec.ts › should uncheck the box [fail]
page/locator-misc-1.spec.ts › should upload the file [fail]
page/locator-misc-2.spec.ts › Locator.locator() and FrameLocator.locator() should accept locator [fail]
page/locator-misc-2.spec.ts › locator.count should work with deleted Map in main world [pass]
page/locator-misc-2.spec.ts › should combine visible with other selectors [fail]
page/locator-misc-2.spec.ts › should press @smoke [fail]
page/locator-misc-2.spec.ts › should pressSequentially [fail]
page/locator-misc-2.spec.ts › should return bounding box [fail]
page/locator-misc-2.spec.ts › should scroll into view [pass]
page/locator-misc-2.spec.ts › should scroll zero-sized element into view [fail]
page/locator-misc-2.spec.ts › should select textarea [fail]
page/locator-misc-2.spec.ts › should take screenshot [fail]
page/locator-misc-2.spec.ts › should type [fail]
page/locator-misc-2.spec.ts › should waitFor [fail]
page/locator-misc-2.spec.ts › should waitFor hidden [fail]
page/locator-query.spec.ts › alias methods coverage [fail]
page/locator-query.spec.ts › should allow some, but not all nested frameLocators [fail]
page/locator-query.spec.ts › should enforce same frame for has/leftOf/rightOf/above/below/near [pass]
page/locator-query.spec.ts › should filter by case-insensitive regex in a child [fail]
page/locator-query.spec.ts › should filter by case-insensitive regex in multiple children [fail]
page/locator-query.spec.ts › should filter by regex [fail]
page/locator-query.spec.ts › should filter by regex and regexp flags [fail]
page/locator-query.spec.ts › should filter by regex with a single quote [fail]
page/locator-query.spec.ts › should filter by regex with quotes [fail]
page/locator-query.spec.ts › should filter by regex with special symbols [fail]
page/locator-query.spec.ts › should filter by text [fail]
page/locator-query.spec.ts › should filter by text 2 [fail]
page/locator-query.spec.ts › should filter by text with quotes [fail]
page/locator-query.spec.ts › should respect first() and last() @smoke [fail]
page/locator-query.spec.ts › should respect nth() [fail]
page/locator-query.spec.ts › should support has:locator [fail]
page/locator-query.spec.ts › should support locator.and [fail]
page/locator-query.spec.ts › should support locator.filter [fail]
page/locator-query.spec.ts › should support locator.locator with and/or [fail]
page/locator-query.spec.ts › should support locator.or [fail]
page/locator-query.spec.ts › should throw on capture w/ nth() [fail]
page/locator-query.spec.ts › should throw on due to strictness [fail]
page/locator-query.spec.ts › should throw on due to strictness 2 [fail]
page/matchers.misc.spec.ts › should outlive frame navigation [pass]
page/matchers.misc.spec.ts › should print no-locator-resolved error when locator matcher did not resolve to any element [pass]
page/network-post-data.spec.ts › should get post data for file/blob [fail]
page/network-post-data.spec.ts › should get post data for navigator.sendBeacon api calls [fail]
page/network-post-data.spec.ts › should return correct postData buffer for utf-8 body [fail]
page/network-post-data.spec.ts › should return post data for PUT requests [fail]
page/network-post-data.spec.ts › should return post data w/o content-type @smoke [fail]
page/network-post-data.spec.ts › should throw on invalid JSON in post data [fail]
page/page-accessibility.spec.ts › autocomplete [fail]
page/page-accessibility.spec.ts › checkbox with and tabIndex and label should not have children [fail]
page/page-accessibility.spec.ts › checkbox without label should not have children [fail]
page/page-accessibility.spec.ts › keyshortcuts [fail]
page/page-accessibility.spec.ts › multiselectable [fail]
page/page-accessibility.spec.ts › non editable textbox with role and tabIndex and label should not have children [fail]
page/page-accessibility.spec.ts › orientation [fail]
page/page-accessibility.spec.ts › rich text editable fields should have children [fail]
page/page-accessibility.spec.ts › rich text editable fields with role should have children [fail]
page/page-accessibility.spec.ts › roledescription [fail]
page/page-accessibility.spec.ts › should not report text nodes inside controls [fail]
page/page-accessibility.spec.ts › should return null when the element is no longer in DOM [fail]
page/page-accessibility.spec.ts › should show uninteresting nodes [fail]
page/page-accessibility.spec.ts › should work @smoke [fail]
page/page-accessibility.spec.ts › should work a button [fail]
page/page-accessibility.spec.ts › should work an input [fail]
page/page-accessibility.spec.ts › should work on a menu [fail]
page/page-accessibility.spec.ts › should work when there is a title  [fail]
page/page-accessibility.spec.ts › should work with aria-invalid accessibility tree [fail]
page/page-accessibility.spec.ts › should work with regular text [fail]
page/page-add-init-script.spec.ts › init script should run only once in iframe [pass]
page/page-add-init-script.spec.ts › init script should run only once in popup [timeout]
page/page-add-init-script.spec.ts › should evaluate before anything else on the page [pass]
page/page-add-init-script.spec.ts › should support multiple scripts [pass]
page/page-add-init-script.spec.ts › should throw without path and content [pass]
page/page-add-init-script.spec.ts › should work after a cross origin navigation [pass]
page/page-add-init-script.spec.ts › should work with CSP [fail]
page/page-add-init-script.spec.ts › should work with a path [pass]
page/page-add-init-script.spec.ts › should work with content @smoke [pass]
page/page-add-init-script.spec.ts › should work with trailing comments [pass]
page/page-add-locator-handler.spec.ts › should not work with force:true [pass]
page/page-add-locator-handler.spec.ts › should removeLocatorHandler [pass]
page/page-add-locator-handler.spec.ts › should throw when handler times out [pass]
page/page-add-locator-handler.spec.ts › should throw when page closes [pass]
page/page-add-locator-handler.spec.ts › should wait for hidden by default [pass]
page/page-add-locator-handler.spec.ts › should wait for hidden by default 2 [pass]
page/page-add-locator-handler.spec.ts › should work [pass]
page/page-add-locator-handler.spec.ts › should work when owner frame detaches [pass]
page/page-add-locator-handler.spec.ts › should work with a custom check [pass]
page/page-add-locator-handler.spec.ts › should work with locator.hover() [pass]
page/page-add-locator-handler.spec.ts › should work with locator.waitFor [pass]
page/page-add-locator-handler.spec.ts › should work with noWaitAfter [pass]
page/page-add-locator-handler.spec.ts › should work with times: option [pass]
page/page-add-locator-handler.spec.ts › should work with toBeVisible [pass]
page/page-add-locator-handler.spec.ts › should work with toHaveScreenshot [fail]
page/page-add-script-tag.spec.ts › should include sourceURL when path is provided [pass]
page/page-add-script-tag.spec.ts › should throw a nice error when the request fails [pass]
page/page-add-script-tag.spec.ts › should throw an error if loading from url fail [pass]
page/page-add-script-tag.spec.ts › should throw an error if no options are provided [pass]
page/page-add-script-tag.spec.ts › should throw when added with URL to the CSP page [pass]
page/page-add-script-tag.spec.ts › should throw when added with content to the CSP page [pass]
page/page-add-script-tag.spec.ts › should work with a content and type=module [pass]
page/page-add-script-tag.spec.ts › should work with a path [pass]
page/page-add-script-tag.spec.ts › should work with a path and type=module [pass]
page/page-add-script-tag.spec.ts › should work with a url [pass]
page/page-add-script-tag.spec.ts › should work with a url and type=module [pass]
page/page-add-script-tag.spec.ts › should work with content [pass]
page/page-add-style-tag.spec.ts › should include sourceURL when path is provided [pass]
page/page-add-style-tag.spec.ts › should throw an error if loading from url fail [pass]
page/page-add-style-tag.spec.ts › should throw an error if no options are provided [pass]
page/page-add-style-tag.spec.ts › should throw when added with URL to the CSP page [pass]
page/page-add-style-tag.spec.ts › should throw when added with content to the CSP page [pass]
page/page-add-style-tag.spec.ts › should work with a path [fail]
page/page-add-style-tag.spec.ts › should work with a url @smoke [pass]
page/page-add-style-tag.spec.ts › should work with content [pass]
page/page-autowaiting-basic.spec.ts › should await cross-process navigation when clicking anchor [fail]
page/page-autowaiting-basic.spec.ts › should await form-get on click [fail]
page/page-autowaiting-basic.spec.ts › should await form-post on click [fail]
page/page-autowaiting-basic.spec.ts › should await navigation when clicking anchor [fail]
page/page-autowaiting-basic.spec.ts › should not stall on JS navigation link [fail]
page/page-autowaiting-basic.spec.ts › should report navigation in the log when clicking anchor [fail]
page/page-autowaiting-basic.spec.ts › should work with dblclick without noWaitAfter when navigation is stalled [fail]
page/page-autowaiting-basic.spec.ts › should work with goto following click [fail]
page/page-autowaiting-basic.spec.ts › should work with noWaitAfter: true [fail]
page/page-autowaiting-basic.spec.ts › should work with waitForLoadState(load) [fail]
page/page-autowaiting-no-hang.spec.ts › assigning location to about:blank [pass]
page/page-autowaiting-no-hang.spec.ts › assigning location to about:blank after non-about:blank [pass]
page/page-autowaiting-no-hang.spec.ts › calling window.open and window.close [fail]
page/page-autowaiting-no-hang.spec.ts › calling window.stop async [pass]
page/page-autowaiting-no-hang.spec.ts › calling window.stop sync [pass]
page/page-autowaiting-no-hang.spec.ts › clicking on links which do not commit navigation [fail]
page/page-autowaiting-no-hang.spec.ts › opening a popup [pass]
page/page-basic.spec.ts › async stacks should work [pass]
page/page-basic.spec.ts › frame.press should work [fail]
page/page-basic.spec.ts › has navigator.webdriver set to true [fail]
page/page-basic.spec.ts › page.close should work with page.close [pass]
page/page-basic.spec.ts › page.close should work with window.close [timeout]
page/page-basic.spec.ts › page.frame should respect name [fail]
page/page-basic.spec.ts › page.frame should respect url [fail]
page/page-basic.spec.ts › page.press should work [pass]
page/page-basic.spec.ts › page.press should work for Enter [fail]
page/page-basic.spec.ts › page.title should return the page title [pass]
page/page-basic.spec.ts › page.url should include hashes [pass]
page/page-basic.spec.ts › page.url should work [pass]
page/page-basic.spec.ts › should be callable twice [pass]
page/page-basic.spec.ts › should fail with error upon disconnect [pass]
page/page-basic.spec.ts › should fire domcontentloaded when expected [pass]
page/page-basic.spec.ts › should fire load when expected [fail]
page/page-basic.spec.ts › should have sane user agent [fail]
page/page-basic.spec.ts › should iterate over page properties [pass]
page/page-basic.spec.ts › should pass page to close event [pass]
page/page-basic.spec.ts › should pass self as argument to domcontentloaded event [pass]
page/page-basic.spec.ts › should pass self as argument to load event [pass]
page/page-basic.spec.ts › should provide access to the opener page [timeout]
page/page-basic.spec.ts › should reject all promises when page is closed [pass]
page/page-basic.spec.ts › should return null if parent page has been closed [timeout]
page/page-basic.spec.ts › should set the page close state [pass]
page/page-basic.spec.ts › should terminate network waiters [pass]
page/page-check.spec.ts › should check radio [fail]
page/page-check.spec.ts › should check radio by aria role [fail]
page/page-check.spec.ts › should check the box @smoke [fail]
page/page-check.spec.ts › should check the box by aria role [fail]
page/page-check.spec.ts › should check the box inside a button [fail]
page/page-check.spec.ts › should check the box using setChecked [fail]
page/page-check.spec.ts › should check the label with position [fail]
page/page-check.spec.ts › should not check the checked box [fail]
page/page-check.spec.ts › should not uncheck the unchecked box [fail]
page/page-check.spec.ts › should throw when not a checkbox [fail]
page/page-check.spec.ts › should throw when not a checkbox 2 [fail]
page/page-check.spec.ts › should uncheck radio by aria role [fail]
page/page-check.spec.ts › should uncheck the box [fail]
page/page-check.spec.ts › should uncheck the box by aria role [fail]
page/page-check.spec.ts › trial run should not check [fail]
page/page-check.spec.ts › trial run should not uncheck [fail]
page/page-click-during-navigation.spec.ts › should not fail with internal error upon navigation [pass]
page/page-click-react.spec.ts › should not retarget the handle when element is recycled [unknown]
page/page-click-react.spec.ts › should not retarget when element changes on hover [pass]
page/page-click-react.spec.ts › should not retarget when element is recycled on hover [pass]
page/page-click-react.spec.ts › should report that selector does not match anymore [unknown]
page/page-click-react.spec.ts › should retarget when element is recycled before enabled check [unknown]
page/page-click-react.spec.ts › should retarget when element is recycled during hit testing [unknown]
page/page-click-react.spec.ts › should timeout when click opens alert [fail]
page/page-click-scroll.spec.ts › should not crash when force-clicking hidden input [fail]
page/page-click-scroll.spec.ts › should not hit scroll bar [fail]
page/page-click-scroll.spec.ts › should scroll into view display:contents [fail]
page/page-click-scroll.spec.ts › should scroll into view display:contents with a child [fail]
page/page-click-scroll.spec.ts › should scroll into view display:contents with position [fail]
page/page-click-scroll.spec.ts › should scroll into view element in iframe [fail]
page/page-click-scroll.spec.ts › should scroll into view span element [fail]
page/page-click-timeout-1.spec.ts › should avoid side effects after timeout [pass]
page/page-click-timeout-1.spec.ts › should timeout waiting for button to be enabled [fail]
page/page-click-timeout-2.spec.ts › should timeout waiting for display:none to be gone [pass]
page/page-click-timeout-2.spec.ts › should timeout waiting for visibility:hidden to be gone [pass]
page/page-click-timeout-3.spec.ts › should fail when element jumps during hit testing [fail]
page/page-click-timeout-3.spec.ts › should report wrong hit target subtree [pass]
page/page-click-timeout-3.spec.ts › should still click when force but hit target is obscured [pass]
page/page-click-timeout-3.spec.ts › should timeout waiting for hit target [pass]
page/page-click-timeout-4.spec.ts › should click for the second time after first timeout [pass]
page/page-click-timeout-4.spec.ts › should timeout waiting for stable position [pass]
page/page-click.spec.ts › ensure events are dispatched in the individual tasks [fail]
page/page-click.spec.ts › should click a button in scrolling container with offset [pass]
page/page-click.spec.ts › should click a button that is overlaid by a permission popup [fail]
page/page-click.spec.ts › should click a partially obscured button [pass]
page/page-click.spec.ts › should click a rotated button [pass]
page/page-click.spec.ts › should click a very large button with offset [fail]
page/page-click.spec.ts › should click an offscreen element when scroll-behavior is smooth [fail]
page/page-click.spec.ts › should click button inside frameset [pass]
page/page-click.spec.ts › should click disabled div [fail]
page/page-click.spec.ts › should click if opened select covers the button [fail]
page/page-click.spec.ts › should click in a nested transformed iframe [fail]
page/page-click.spec.ts › should click in a transformed iframe [fail]
page/page-click.spec.ts › should click in a transformed iframe with force [fail]
page/page-click.spec.ts › should click in an iframe with border [fail]
page/page-click.spec.ts › should click in an iframe with border 2 [fail]
page/page-click.spec.ts › should click links which cause navigation [fail]
page/page-click.spec.ts › should click offscreen buttons [pass]
page/page-click.spec.ts › should click on a span with an inline element inside [fail]
page/page-click.spec.ts › should click on checkbox input and toggle [pass]
page/page-click.spec.ts › should click on checkbox label and toggle [pass]
page/page-click.spec.ts › should click svg [fail]
page/page-click.spec.ts › should click the 1x1 div [fail]
page/page-click.spec.ts › should click the button @smoke [pass]
page/page-click.spec.ts › should click the button after a cross origin navigation  [pass]
page/page-click.spec.ts › should click the button after navigation  [pass]
page/page-click.spec.ts › should click the button behind sticky header [fail]
page/page-click.spec.ts › should click the button if window.Node is removed [pass]
page/page-click.spec.ts › should click the button inside an iframe [fail]
page/page-click.spec.ts › should click the button when window.innerWidth is corrupted [pass]
page/page-click.spec.ts › should click the button with em border with offset [pass]
page/page-click.spec.ts › should click the button with fixed position inside an iframe [fail]
page/page-click.spec.ts › should click the button with px border with offset [pass]
page/page-click.spec.ts › should click when one of inline box children is outside of viewport [fail]
page/page-click.spec.ts › should click wrapped links [pass]
page/page-click.spec.ts › should click zero-sized input by label [fail]
page/page-click.spec.ts › should climb dom for inner label with pointer-events:none [fail]
page/page-click.spec.ts › should climb up to [role=button] [fail]
page/page-click.spec.ts › should climb up to a [role=link] [fail]
page/page-click.spec.ts › should climb up to a anchor [fail]
page/page-click.spec.ts › should dispatch microtasks in order [fail]
page/page-click.spec.ts › should double click the button [fail]
page/page-click.spec.ts › should fail when element detaches after animation [pass]
page/page-click.spec.ts › should fail when element is animating from outside the viewport with force [fail]
page/page-click.spec.ts › should fail when obscured and not waiting for hit target [pass]
page/page-click.spec.ts › should fire contextmenu event on right click [pass]
page/page-click.spec.ts › should fire contextmenu event on right click in correct order [fail]
page/page-click.spec.ts › should issue clicks in parallel in page and popup [pass]
page/page-click.spec.ts › should not hang when frame is detached [pass]
page/page-click.spec.ts › should not throw UnhandledPromiseRejection when page closes [pass]
page/page-click.spec.ts › should not throw protocol error when navigating during the click [pass]
page/page-click.spec.ts › should not wait with force [pass]
page/page-click.spec.ts › should report nice error when element is detached and force-clicked [pass]
page/page-click.spec.ts › should retry when element detaches after animation [pass]
page/page-click.spec.ts › should retry when element is animating from outside the viewport [fail]
page/page-click.spec.ts › should retry when navigating during the click [pass]
page/page-click.spec.ts › should scroll and click the button [pass]
page/page-click.spec.ts › should scroll and click the button with smooth scroll behavior [pass]
page/page-click.spec.ts › should select the text by triple clicking [fail]
page/page-click.spec.ts › should update modifiers correctly [pass]
page/page-click.spec.ts › should wait for BUTTON to be clickable when it has pointer-events:none [fail]
page/page-click.spec.ts › should wait for LABEL to be clickable when it has pointer-events:none [fail]
page/page-click.spec.ts › should wait for becoming hit target [pass]
page/page-click.spec.ts › should wait for becoming hit target with trial run [pass]
page/page-click.spec.ts › should wait for button to be enabled [fail]
page/page-click.spec.ts › should wait for input to be enabled [fail]
page/page-click.spec.ts › should wait for select to be enabled [fail]
page/page-click.spec.ts › should wait for stable position [pass]
page/page-click.spec.ts › should waitFor display:none to be gone [pass]
page/page-click.spec.ts › should waitFor visibility:hidden to be gone [pass]
page/page-click.spec.ts › should waitFor visible when already visible [pass]
page/page-click.spec.ts › should waitFor visible when parent is hidden [pass]
page/page-click.spec.ts › trial run should not click [pass]
page/page-click.spec.ts › trial run should not double click [pass]
page/page-click.spec.ts › trial run should work with short timeout [pass]
page/page-close.spec.ts › should close page with active dialog [fail]
page/page-close.spec.ts › should not accept dialog after close [fail]
page/page-dialog.spec.ts › should accept the confirm prompt [pass]
page/page-dialog.spec.ts › should allow accepting prompts @smoke [pass]
page/page-dialog.spec.ts › should auto-dismiss the alert without listeners [fail]
page/page-dialog.spec.ts › should auto-dismiss the prompt without listeners [pass]
page/page-dialog.spec.ts › should be able to close context with open alert [pass]
page/page-dialog.spec.ts › should dismiss the confirm prompt [pass]
page/page-dialog.spec.ts › should dismiss the prompt [pass]
page/page-dialog.spec.ts › should fire [pass]
page/page-dialog.spec.ts › should handle multiple alerts [fail]
page/page-dialog.spec.ts › should handle multiple confirms [fail]
page/page-dispatchevent.spec.ts › should be atomic [fail]
page/page-dispatchevent.spec.ts › should dispatch absolute device orientation event [pass]
page/page-dispatchevent.spec.ts › should dispatch click after a cross origin navigation  [pass]
page/page-dispatchevent.spec.ts › should dispatch click after navigation  [pass]
page/page-dispatchevent.spec.ts › should dispatch click event @smoke [pass]
page/page-dispatchevent.spec.ts › should dispatch click event properties [pass]
page/page-dispatchevent.spec.ts › should dispatch click event via ElementHandles [pass]
page/page-dispatchevent.spec.ts › should dispatch click on a span with an inline element inside [fail]
page/page-dispatchevent.spec.ts › should dispatch click svg [fail]
page/page-dispatchevent.spec.ts › should dispatch click when node is added in shadow dom [pass]
page/page-dispatchevent.spec.ts › should dispatch device motion event [pass]
page/page-dispatchevent.spec.ts › should dispatch device orientation event [pass]
page/page-dispatchevent.spec.ts › should dispatch drag drop events [pass]
page/page-dispatchevent.spec.ts › should dispatch drag drop events via ElementHandles [pass]
page/page-dispatchevent.spec.ts › should dispatch wheel event [pass]
page/page-dispatchevent.spec.ts › should not fail when element is blocked on hover [fail]
page/page-dispatchevent.spec.ts › should throw if argument is from different frame [pass]
page/page-drag.spec.ts › Drag and drop › iframe › should drag into an iframe [unknown]
page/page-drag.spec.ts › Drag and drop › iframe › should drag out of an iframe [unknown]
page/page-drag.spec.ts › Drag and drop › should allow specifying the position [fail]
page/page-drag.spec.ts › Drag and drop › should be able to drag the mouse in a frame [pass]
page/page-drag.spec.ts › Drag and drop › should cancel on escape [fail]
page/page-drag.spec.ts › Drag and drop › should not send dragover on the first mousemove [unknown]
page/page-drag.spec.ts › Drag and drop › should respect the drop effect [fail]
page/page-drag.spec.ts › Drag and drop › should send the right events [fail]
page/page-drag.spec.ts › Drag and drop › should work @smoke [fail]
page/page-drag.spec.ts › Drag and drop › should work if a frame is stalled [fail]
page/page-drag.spec.ts › Drag and drop › should work if the drag event is captured but not canceled [fail]
page/page-drag.spec.ts › Drag and drop › should work if the drag is canceled [pass]
page/page-drag.spec.ts › Drag and drop › should work inside iframe [fail]
page/page-drag.spec.ts › Drag and drop › should work with locators [fail]
page/page-drag.spec.ts › Drag and drop › should work with the helper method [fail]
page/page-drag.spec.ts › should handle custom dataTransfer [fail]
page/page-drag.spec.ts › should report event.buttons [pass]
page/page-drag.spec.ts › should work if not doing a drag [pass]
page/page-drag.spec.ts › what happens when dragging element is destroyed [fail]
page/page-emulate-media.spec.ts › should change the actual colors in css [fail]
page/page-emulate-media.spec.ts › should default to light [fail]
page/page-emulate-media.spec.ts › should emulate colorScheme should work @smoke [fail]
page/page-emulate-media.spec.ts › should emulate forcedColors  [fail]
page/page-emulate-media.spec.ts › should emulate reduced motion [fail]
page/page-emulate-media.spec.ts › should emulate type @smoke [fail]
page/page-emulate-media.spec.ts › should keep reduced motion and color emulation after reload [fail]
page/page-emulate-media.spec.ts › should throw in case of bad colorScheme argument [pass]
page/page-emulate-media.spec.ts › should throw in case of bad media argument [pass]
page/page-emulate-media.spec.ts › should work during navigation [fail]
page/page-evaluate-handle.spec.ts › should accept multiple nested handles [pass]
page/page-evaluate-handle.spec.ts › should accept nested handle [pass]
page/page-evaluate-handle.spec.ts › should accept nested window handle [pass]
page/page-evaluate-handle.spec.ts › should accept object handle as an argument [pass]
page/page-evaluate-handle.spec.ts › should accept object handle to primitive types [pass]
page/page-evaluate-handle.spec.ts › should accept object handle to unserializable value [pass]
page/page-evaluate-handle.spec.ts › should accept same handle multiple times [pass]
page/page-evaluate-handle.spec.ts › should accept same nested object multiple times [pass]
page/page-evaluate-handle.spec.ts › should pass configurable args [pass]
page/page-evaluate-handle.spec.ts › should work [pass]
page/page-evaluate-handle.spec.ts › should work with primitives [pass]
page/page-evaluate-no-stall.spec.ts › should throw when no main execution context [fail]
page/page-evaluate-no-stall.spec.ts › should throw while pending navigation [pass]
page/page-evaluate-no-stall.spec.ts › should work [pass]
page/page-evaluate.spec.ts › should accept "undefined" as one of multiple parameters [pass]
page/page-evaluate.spec.ts › should accept a string [pass]
page/page-evaluate.spec.ts › should accept a string with comments [pass]
page/page-evaluate.spec.ts › should accept a string with semi colons [pass]
page/page-evaluate.spec.ts › should accept element handle as an argument [fail]
page/page-evaluate.spec.ts › should alias Window, Document and Node [pass]
page/page-evaluate.spec.ts › should await promise [pass]
page/page-evaluate.spec.ts › should await promise from popup [pass]
page/page-evaluate.spec.ts › should be able to throw a tricky error [pass]
page/page-evaluate.spec.ts › should evaluate date [pass]
page/page-evaluate.spec.ts › should evaluate exception [pass]
page/page-evaluate.spec.ts › should evaluate exception with a function on the stack [pass]
page/page-evaluate.spec.ts › should evaluate in the page context [pass]
page/page-evaluate.spec.ts › should evaluate url [pass]
page/page-evaluate.spec.ts › should ignore buggy toJSON [pass]
page/page-evaluate.spec.ts › should jsonValue() date [pass]
page/page-evaluate.spec.ts › should jsonValue() url [pass]
page/page-evaluate.spec.ts › should modify global environment [pass]
page/page-evaluate.spec.ts › should not add a toJSON property to newly created Arrays after evaluation [pass]
page/page-evaluate.spec.ts › should not expose the injected script export [pass]
page/page-evaluate.spec.ts › should not leak handles [pass]
page/page-evaluate.spec.ts › should not leak utility script [pass]
page/page-evaluate.spec.ts › should not throw an error when evaluation does a navigation [pass]
page/page-evaluate.spec.ts › should not throw an error when evaluation does a synchronous navigation and returns an object [pass]
page/page-evaluate.spec.ts › should not throw an error when evaluation does a synchronous navigation and returns undefined [pass]
page/page-evaluate.spec.ts › should not use Array.prototype.toJSON when evaluating [pass]
page/page-evaluate.spec.ts › should not use toJSON in jsonValue [pass]
page/page-evaluate.spec.ts › should not use toJSON when evaluating [pass]
page/page-evaluate.spec.ts › should pass exception argument [pass]
page/page-evaluate.spec.ts › should properly serialize PerformanceMeasure object [pass]
page/page-evaluate.spec.ts › should properly serialize null arguments [pass]
page/page-evaluate.spec.ts › should properly serialize null fields [pass]
page/page-evaluate.spec.ts › should properly serialize undefined arguments [pass]
page/page-evaluate.spec.ts › should properly serialize undefined fields [pass]
page/page-evaluate.spec.ts › should properly serialize window.performance object [pass]
page/page-evaluate.spec.ts › should reject promise with exception [pass]
page/page-evaluate.spec.ts › should respect use strict expression [pass]
page/page-evaluate.spec.ts › should return -0 [pass]
page/page-evaluate.spec.ts › should return -Infinity [pass]
page/page-evaluate.spec.ts › should return Infinity [pass]
page/page-evaluate.spec.ts › should return NaN [pass]
page/page-evaluate.spec.ts › should return complex objects [pass]
page/page-evaluate.spec.ts › should return undefined for non-serializable objects [pass]
page/page-evaluate.spec.ts › should return undefined for objects with symbols [pass]
page/page-evaluate.spec.ts › should return undefined properties [pass]
page/page-evaluate.spec.ts › should roundtrip date [pass]
page/page-evaluate.spec.ts › should roundtrip promise to unserializable values [pass]
page/page-evaluate.spec.ts › should roundtrip promise to value [pass]
page/page-evaluate.spec.ts › should roundtrip regex [pass]
page/page-evaluate.spec.ts › should roundtrip unserializable values [pass]
page/page-evaluate.spec.ts › should roundtrip url [pass]
page/page-evaluate.spec.ts › should simulate a user gesture [pass]
page/page-evaluate.spec.ts › should support thrown numbers as error messages [pass]
page/page-evaluate.spec.ts › should support thrown strings as error messages [pass]
page/page-evaluate.spec.ts › should throw a nice error after a navigation [pass]
page/page-evaluate.spec.ts › should throw error with detailed information on exception inside promise  [pass]
page/page-evaluate.spec.ts › should throw if underlying element was disposed [fail]
page/page-evaluate.spec.ts › should throw when evaluation triggers reload [pass]
page/page-evaluate.spec.ts › should throw when frame is detached [pass]
page/page-evaluate.spec.ts › should throw when passed more than one parameter [pass]
page/page-evaluate.spec.ts › should transfer -0 [pass]
page/page-evaluate.spec.ts › should transfer -Infinity [pass]
page/page-evaluate.spec.ts › should transfer 100Mb of data from page to node.js [fail]
page/page-evaluate.spec.ts › should transfer Infinity [fail]
page/page-evaluate.spec.ts › should transfer NaN [pass]
page/page-evaluate.spec.ts › should transfer arrays [pass]
page/page-evaluate.spec.ts › should transfer arrays as arrays, not objects [pass]
page/page-evaluate.spec.ts › should transfer bigint [pass]
page/page-evaluate.spec.ts › should transfer maps as empty objects [pass]
page/page-evaluate.spec.ts › should work @smoke [pass]
page/page-evaluate.spec.ts › should work even when JSON is set to null [pass]
page/page-evaluate.spec.ts › should work for circular object [pass]
page/page-evaluate.spec.ts › should work from-inside an exposed function [pass]
page/page-evaluate.spec.ts › should work right after a cross-origin navigation [fail]
page/page-evaluate.spec.ts › should work right after framenavigated [fail]
page/page-evaluate.spec.ts › should work with Array.from/map [pass]
page/page-evaluate.spec.ts › should work with CSP [fail]
page/page-evaluate.spec.ts › should work with busted Array.prototype.map/push [pass]
page/page-evaluate.spec.ts › should work with function shorthands [pass]
page/page-evaluate.spec.ts › should work with large strings [pass]
page/page-evaluate.spec.ts › should work with large unicode strings [pass]
page/page-evaluate.spec.ts › should work with new Function() and CSP [fail]
page/page-evaluate.spec.ts › should work with non-strict expressions [pass]
page/page-evaluate.spec.ts › should work with overridden Object.defineProperty [pass]
page/page-evaluate.spec.ts › should work with overridden URL/Date/RegExp [pass]
page/page-evaluate.spec.ts › should work with overridden globalThis.Window/Document/Node [pass]
page/page-evaluate.spec.ts › should work with overwritten Promise [pass]
page/page-evaluate.spec.ts › should work with unicode chars [pass]
page/page-event-console.spec.ts › do not update console count on unhandled rejections [pass]
page/page-event-console.spec.ts › should emit same log twice [pass]
page/page-event-console.spec.ts › should format the message correctly with time/timeLog/timeEnd [fail]
page/page-event-console.spec.ts › should have location for console API calls [fail]
page/page-event-console.spec.ts › should not fail for window object [fail]
page/page-event-console.spec.ts › should not throw when there are console messages in detached iframes [pass]
page/page-event-console.spec.ts › should trigger correct Log [timeout]
page/page-event-console.spec.ts › should use object previews for arrays and objects [fail]
page/page-event-console.spec.ts › should use object previews for errors [pass]
page/page-event-console.spec.ts › should use text() for inspection [pass]
page/page-event-console.spec.ts › should work @smoke [fail]
page/page-event-console.spec.ts › should work for different console API calls [fail]
page/page-event-load.spec.ts › should fire once [pass]
page/page-event-load.spec.ts › should fire once with iframe navigation [pass]
page/page-event-network.spec.ts › Page.Events.Request @smoke [fail]
page/page-event-network.spec.ts › Page.Events.RequestFailed @smoke [fail]
page/page-event-network.spec.ts › Page.Events.RequestFinished @smoke [pass]
page/page-event-network.spec.ts › Page.Events.Response @smoke [pass]
page/page-event-network.spec.ts › interrupt request.response() and request.allHeaders() on page.close [fail]
page/page-event-network.spec.ts › should fire events in proper order [pass]
page/page-event-network.spec.ts › should resolve responses after a navigation [pass]
page/page-event-network.spec.ts › should support redirects [pass]
page/page-event-pageerror.spec.ts › should contain sourceURL [timeout]
page/page-event-pageerror.spec.ts › should contain the Error.name property [timeout]
page/page-event-pageerror.spec.ts › should emit error from unhandled rejects [fail]
page/page-event-pageerror.spec.ts › should fire [timeout]
page/page-event-pageerror.spec.ts › should handle object [timeout]
page/page-event-pageerror.spec.ts › should handle odd values [timeout]
page/page-event-pageerror.spec.ts › should handle window [timeout]
page/page-event-pageerror.spec.ts › should not receive console message for pageError [timeout]
page/page-event-pageerror.spec.ts › should remove a listener of a non-existing event handler [pass]
page/page-event-pageerror.spec.ts › should support an empty Error.name property [timeout]
page/page-event-popup.spec.ts › should be able to capture alert [timeout]
page/page-event-popup.spec.ts › should emit for immediately closed popups [fail]
page/page-event-popup.spec.ts › should emit for immediately closed popups 2 [fail]
page/page-event-popup.spec.ts › should not treat navigations as new popups [fail]
page/page-event-popup.spec.ts › should report popup opened from iframes [fail]
page/page-event-popup.spec.ts › should work @smoke [timeout]
page/page-event-popup.spec.ts › should work with clicking target=_blank [fail]
page/page-event-popup.spec.ts › should work with clicking target=_blank and rel=noopener [fail]
page/page-event-popup.spec.ts › should work with empty url [pass]
page/page-event-popup.spec.ts › should work with fake-clicking target=_blank and rel=noopener [fail]
page/page-event-popup.spec.ts › should work with noopener and about:blank [pass]
page/page-event-popup.spec.ts › should work with noopener and no url [fail]
page/page-event-popup.spec.ts › should work with noopener and url [pass]
page/page-event-popup.spec.ts › should work with window features [pass]
page/page-event-request.spec.ts › main resource xhr should have type xhr [fail]
page/page-event-request.spec.ts › should fire for fetches [pass]
page/page-event-request.spec.ts › should fire for iframes [pass]
page/page-event-request.spec.ts › should fire for navigation requests [pass]
page/page-event-request.spec.ts › should fire requestfailed when intercepting race [unknown]
page/page-event-request.spec.ts › should report navigation requests and responses handled by service worker [timeout]
page/page-event-request.spec.ts › should report navigation requests and responses handled by service worker with routing [timeout]
page/page-event-request.spec.ts › should report requests and responses handled by service worker [fail]
page/page-event-request.spec.ts › should report requests and responses handled by service worker with routing [fail]
page/page-event-request.spec.ts › should return response body when Cross-Origin-Opener-Policy is set [fail]
page/page-expose-function.spec.ts › exposeBinding should work @smoke [pass]
page/page-expose-function.spec.ts › exposeBinding(handle) should work with element handles [fail]
page/page-expose-function.spec.ts › exposeBindingHandle should not throw during navigation [pass]
page/page-expose-function.spec.ts › exposeBindingHandle should throw for multiple arguments [pass]
page/page-expose-function.spec.ts › exposeBindingHandle should work [pass]
page/page-expose-function.spec.ts › should alias Window, Document and Node [pass]
page/page-expose-function.spec.ts › should await returned promise [pass]
page/page-expose-function.spec.ts › should be callable from-inside addInitScript [pass]
page/page-expose-function.spec.ts › should fail with busted Array.prototype.toJSON [pass]
page/page-expose-function.spec.ts › should not result in unhandled rejection [pass]
page/page-expose-function.spec.ts › should serialize cycles [pass]
page/page-expose-function.spec.ts › should support throwing "null" [pass]
page/page-expose-function.spec.ts › should survive navigation [pass]
page/page-expose-function.spec.ts › should throw exception in page context [pass]
page/page-expose-function.spec.ts › should throw for duplicate registrations [pass]
page/page-expose-function.spec.ts › should work [pass]
page/page-expose-function.spec.ts › should work after cross origin navigation [pass]
page/page-expose-function.spec.ts › should work on frames [pass]
page/page-expose-function.spec.ts › should work on frames before navigation [pass]
page/page-expose-function.spec.ts › should work with busted Array.prototype.map/push [pass]
page/page-expose-function.spec.ts › should work with complex objects [pass]
page/page-expose-function.spec.ts › should work with handles and complex objects [pass]
page/page-expose-function.spec.ts › should work with overridden console object [pass]
page/page-expose-function.spec.ts › should work with setContent [fail]
page/page-fill.spec.ts › fill back to back [fail]
page/page-fill.spec.ts › input event.composed should be true and cross shadow dom boundary - color [fail]
page/page-fill.spec.ts › input event.composed should be true and cross shadow dom boundary - date [fail]
page/page-fill.spec.ts › input event.composed should be true and cross shadow dom boundary - datetime-local [fail]
page/page-fill.spec.ts › input event.composed should be true and cross shadow dom boundary - month [unknown]
page/page-fill.spec.ts › input event.composed should be true and cross shadow dom boundary - range [fail]
page/page-fill.spec.ts › input event.composed should be true and cross shadow dom boundary - time [fail]
page/page-fill.spec.ts › input event.composed should be true and cross shadow dom boundary - week [unknown]
page/page-fill.spec.ts › should be able to clear using fill() [pass]
page/page-fill.spec.ts › should be able to fill exponent into the input[type=number] [fail]
page/page-fill.spec.ts › should be able to fill input[type=number] with empty string [fail]
page/page-fill.spec.ts › should be able to fill the body [fail]
page/page-fill.spec.ts › should be able to fill the input[type=number] [fail]
page/page-fill.spec.ts › should be able to fill when focus is in the wrong frame [fail]
page/page-fill.spec.ts › should fill color input [fail]
page/page-fill.spec.ts › should fill contenteditable [pass]
page/page-fill.spec.ts › should fill contenteditable with new lines [fail]
page/page-fill.spec.ts › should fill date input after clicking [fail]
page/page-fill.spec.ts › should fill datetime-local input [fail]
page/page-fill.spec.ts › should fill different input types [pass]
page/page-fill.spec.ts › should fill elements with existing value and selection [pass]
page/page-fill.spec.ts › should fill fixed position input [fail]
page/page-fill.spec.ts › should fill input [pass]
page/page-fill.spec.ts › should fill month input [fail]
page/page-fill.spec.ts › should fill range input [fail]
page/page-fill.spec.ts › should fill textarea @smoke [pass]
page/page-fill.spec.ts › should fill time input [fail]
page/page-fill.spec.ts › should fill week input [fail]
page/page-fill.spec.ts › should not be able to fill text into the input[type=number] [fail]
page/page-fill.spec.ts › should not throw when fill causes navigation [fail]
page/page-fill.spec.ts › should retry on disabled element [pass]
page/page-fill.spec.ts › should retry on invisible element [pass]
page/page-fill.spec.ts › should retry on readonly element [pass]
page/page-fill.spec.ts › should throw if passed a non-string value [pass]
page/page-fill.spec.ts › should throw nice error without injected script stack when element is not an <input> [fail]
page/page-fill.spec.ts › should throw on incorrect color value [fail]
page/page-fill.spec.ts › should throw on incorrect date [fail]
page/page-fill.spec.ts › should throw on incorrect datetime-local [unknown]
page/page-fill.spec.ts › should throw on incorrect month [unknown]
page/page-fill.spec.ts › should throw on incorrect range value [fail]
page/page-fill.spec.ts › should throw on incorrect time [fail]
page/page-fill.spec.ts › should throw on incorrect week [unknown]
page/page-fill.spec.ts › should throw on unsupported inputs [pass]
page/page-focus.spec.ts › clicking checkbox should activate it [unknown]
page/page-focus.spec.ts › keeps focus on element when attempting to focus a non-focusable element [fail]
page/page-focus.spec.ts › should emit blur event [fail]
page/page-focus.spec.ts › should emit focus event [fail]
page/page-focus.spec.ts › should traverse focus [fail]
page/page-focus.spec.ts › should traverse focus in all directions [fail]
page/page-focus.spec.ts › should traverse only form elements [unknown]
page/page-focus.spec.ts › should work @smoke [fail]
page/page-force-gc.spec.ts › should work [fail]
page/page-goto.spec.ts › js redirect overrides url bar navigation  [pass]
page/page-goto.spec.ts › should be able to navigate to a page controlled by service worker [pass]
page/page-goto.spec.ts › should capture cross-process iframe navigation request [pass]
page/page-goto.spec.ts › should capture iframe navigation request [pass]
page/page-goto.spec.ts › should disable timeout when its set to 0 [pass]
page/page-goto.spec.ts › should fail when canceled by another navigation [pass]
page/page-goto.spec.ts › should fail when exceeding browser context navigation timeout [pass]
page/page-goto.spec.ts › should fail when exceeding browser context timeout [pass]
page/page-goto.spec.ts › should fail when exceeding default maximum navigation timeout [pass]
page/page-goto.spec.ts › should fail when exceeding default maximum timeout [pass]
page/page-goto.spec.ts › should fail when exceeding maximum navigation timeout [pass]
page/page-goto.spec.ts › should fail when main resources failed to load [pass]
page/page-goto.spec.ts › should fail when navigating and show the url at the error message [pass]
page/page-goto.spec.ts › should fail when navigating to bad SSL [fail]
page/page-goto.spec.ts › should fail when navigating to bad SSL after redirects [fail]
page/page-goto.spec.ts › should fail when navigating to bad url [fail]
page/page-goto.spec.ts › should fail when replaced by another navigation [pass]
page/page-goto.spec.ts › should fail when server returns 204 [timeout]
page/page-goto.spec.ts › should navigate to URL with hash and fire requests without hash [pass]
page/page-goto.spec.ts › should navigate to about:blank [pass]
page/page-goto.spec.ts › should navigate to dataURL and not fire dataURL requests [pass]
page/page-goto.spec.ts › should navigate to empty page with domcontentloaded [pass]
page/page-goto.spec.ts › should not crash when RTCPeerConnection is used [pass]
page/page-goto.spec.ts › should not crash when navigating to bad SSL after a cross origin navigation [pass]
page/page-goto.spec.ts › should not leak listeners during 20 waitForNavigation [pass]
page/page-goto.spec.ts › should not leak listeners during bad navigation [pass]
page/page-goto.spec.ts › should not leak listeners during navigation [pass]
page/page-goto.spec.ts › should not resolve goto upon window.stop() [pass]
page/page-goto.spec.ts › should not throw if networkidle0 is passed as an option [pass]
page/page-goto.spec.ts › should not throw unhandled rejections on invalid url [pass]
page/page-goto.spec.ts › should override referrer-policy [fail]
page/page-goto.spec.ts › should prioritize default navigation timeout over default timeout [pass]
page/page-goto.spec.ts › should properly wait for load [fail]
page/page-goto.spec.ts › should reject referer option when setExtraHTTPHeaders provides referer [pass]
page/page-goto.spec.ts › should report raw buffer for main resource [fail]
page/page-goto.spec.ts › should return from goto if new navigation is started [pass]
page/page-goto.spec.ts › should return last response in redirect chain [pass]
page/page-goto.spec.ts › should return response when page changes its URL after load [pass]
page/page-goto.spec.ts › should return url with basic auth info [pass]
page/page-goto.spec.ts › should return when navigation is committed if commit is specified [pass]
page/page-goto.spec.ts › should send referer [fail]
page/page-goto.spec.ts › should send referer of cross-origin URL [fail]
page/page-goto.spec.ts › should succeed on url bar navigation when there is pending navigation [pass]
page/page-goto.spec.ts › should throw if networkidle2 is passed as an option [fail]
page/page-goto.spec.ts › should use http for no protocol [pass]
page/page-goto.spec.ts › should wait for load when iframe attaches and detaches [pass]
page/page-goto.spec.ts › should work @smoke [pass]
page/page-goto.spec.ts › should work cross-process [pass]
page/page-goto.spec.ts › should work when navigating to 404 [pass]
page/page-goto.spec.ts › should work when navigating to data url [pass]
page/page-goto.spec.ts › should work when navigating to valid url [pass]
page/page-goto.spec.ts › should work when page calls history API in beforeunload [fail]
page/page-goto.spec.ts › should work with Cross-Origin-Opener-Policy [pass]
page/page-goto.spec.ts › should work with Cross-Origin-Opener-Policy after redirect [pass]
page/page-goto.spec.ts › should work with Cross-Origin-Opener-Policy and interception [pass]
page/page-goto.spec.ts › should work with anchor navigation [timeout]
page/page-goto.spec.ts › should work with cross-process that fails before committing [pass]
page/page-goto.spec.ts › should work with file URL [pass]
page/page-goto.spec.ts › should work with file URL with subframes [pass]
page/page-goto.spec.ts › should work with lazy loading iframes [fail]
page/page-goto.spec.ts › should work with redirects [pass]
page/page-goto.spec.ts › should work with self requesting page [pass]
page/page-goto.spec.ts › should work with subframes return 204 [pass]
page/page-goto.spec.ts › should work with subframes return 204 with domcontentloaded [pass]
page/page-history.spec.ts › goBack/goForward should work with bfcache-able pages [fail]
page/page-history.spec.ts › page.goBack during renderer-initiated navigation [fail]
page/page-history.spec.ts › page.goBack should work @smoke [pass]
page/page-history.spec.ts › page.goBack should work for file urls [fail]
page/page-history.spec.ts › page.goBack should work with HistoryAPI [fail]
page/page-history.spec.ts › page.goForward during renderer-initiated navigation [fail]
page/page-history.spec.ts › page.reload during renderer-initiated navigation [fail]
page/page-history.spec.ts › page.reload should not resolve with same-document navigation [fail]
page/page-history.spec.ts › page.reload should work [pass]
page/page-history.spec.ts › page.reload should work on a page with a hash [pass]
page/page-history.spec.ts › page.reload should work on a page with a hash at the end [pass]
page/page-history.spec.ts › page.reload should work with cross-origin redirect [pass]
page/page-history.spec.ts › page.reload should work with data url [pass]
page/page-history.spec.ts › page.reload should work with same origin redirect [pass]
page/page-history.spec.ts › regression test for issue 20791 [pass]
page/page-history.spec.ts › should reload proper page [timeout]
page/page-keyboard.spec.ts › insertText should only emit input event [fail]
page/page-keyboard.spec.ts › pressing Meta should not result in any text insertion on any platform [fail]
page/page-keyboard.spec.ts › should be able to prevent selectAll [pass]
page/page-keyboard.spec.ts › should dispatch a click event on a button when Enter gets pressed [fail]
page/page-keyboard.spec.ts › should dispatch a click event on a button when Space gets pressed [fail]
page/page-keyboard.spec.ts › should dispatch insertText after context menu was opened [pass]
page/page-keyboard.spec.ts › should expose keyIdentifier in webkit [unknown]
page/page-keyboard.spec.ts › should handle selectAll [pass]
page/page-keyboard.spec.ts › should have correct Keydown/Keyup order when pressing Escape key [pass]
page/page-keyboard.spec.ts › should move around the selection in a contenteditable [fail]
page/page-keyboard.spec.ts › should move to the start of the document [unknown]
page/page-keyboard.spec.ts › should move with the arrow keys [pass]
page/page-keyboard.spec.ts › should not type canceled events [pass]
page/page-keyboard.spec.ts › should press Enter [fail]
page/page-keyboard.spec.ts › should press plus [fail]
page/page-keyboard.spec.ts › should press shift plus [fail]
page/page-keyboard.spec.ts › should press the meta key [pass]
page/page-keyboard.spec.ts › should report multiple modifiers [fail]
page/page-keyboard.spec.ts › should report shiftKey [pass]
page/page-keyboard.spec.ts › should scroll with PageDown [pass]
page/page-keyboard.spec.ts › should send a character with ElementHandle.press [pass]
page/page-keyboard.spec.ts › should send a character with insertText [fail]
page/page-keyboard.spec.ts › should send proper codes while typing [pass]
page/page-keyboard.spec.ts › should send proper codes while typing with shift [pass]
page/page-keyboard.spec.ts › should shift raw codes [pass]
page/page-keyboard.spec.ts › should specify location [fail]
page/page-keyboard.spec.ts › should specify repeat property [pass]
page/page-keyboard.spec.ts › should support MacOS shortcuts [unknown]
page/page-keyboard.spec.ts › should support multiple plus-separated modifiers [pass]
page/page-keyboard.spec.ts › should support plus-separated modifiers [pass]
page/page-keyboard.spec.ts › should support simple copy-pasting [fail]
page/page-keyboard.spec.ts › should support simple cut-pasting [fail]
page/page-keyboard.spec.ts › should support undo-redo [fail]
page/page-keyboard.spec.ts › should throw on unknown keys [pass]
page/page-keyboard.spec.ts › should type after context menu was opened [pass]
page/page-keyboard.spec.ts › should type all kinds of characters [pass]
page/page-keyboard.spec.ts › should type emoji [pass]
page/page-keyboard.spec.ts › should type emoji into an iframe [pass]
page/page-keyboard.spec.ts › should type into a textarea @smoke [pass]
page/page-keyboard.spec.ts › should type repeatedly in contenteditable in shadow dom [fail]
page/page-keyboard.spec.ts › should type repeatedly in contenteditable in shadow dom with nested elements [fail]
page/page-keyboard.spec.ts › should type repeatedly in input in shadow dom [fail]
page/page-keyboard.spec.ts › should work after a cross origin navigation [pass]
page/page-keyboard.spec.ts › should work with keyboard events with empty.html [pass]
page/page-keyboard.spec.ts › type to non-focusable element should maintain old focus [fail]
page/page-leaks.spec.ts › click should not leak [fail]
page/page-leaks.spec.ts › expect should not leak [fail]
page/page-leaks.spec.ts › fill should not leak [fail]
page/page-leaks.spec.ts › waitFor should not leak [fail]
page/page-listeners.spec.ts › should not throw with ignoreErrors [pass]
page/page-listeners.spec.ts › should wait [pass]
page/page-listeners.spec.ts › wait should throw [pass]
page/page-mouse.spec.ts › down and up should generate click [pass]
page/page-mouse.spec.ts › should always round down [fail]
page/page-mouse.spec.ts › should click the document @smoke [pass]
page/page-mouse.spec.ts › should dblclick the div [fail]
page/page-mouse.spec.ts › should dispatch mouse move after context menu was opened [pass]
page/page-mouse.spec.ts › should not crash on mouse drag with any button [pass]
page/page-mouse.spec.ts › should pointerdown the div with a custom button [fail]
page/page-mouse.spec.ts › should report correct buttons property [pass]
page/page-mouse.spec.ts › should select the text with mouse [pass]
page/page-mouse.spec.ts › should set modifier keys on click [pass]
page/page-mouse.spec.ts › should trigger hover state [pass]
page/page-mouse.spec.ts › should trigger hover state on disabled button [pass]
page/page-mouse.spec.ts › should trigger hover state with removed window.Node [pass]
page/page-mouse.spec.ts › should tween mouse movement [pass]
page/page-navigation.spec.ts › should work with _blank target [pass]
page/page-navigation.spec.ts › should work with _blank target in form [fail]
page/page-navigation.spec.ts › should work with cross-process _blank target [pass]
page/page-network-idle.spec.ts › should navigate to empty page with networkidle [pass]
page/page-network-idle.spec.ts › should wait for networkidle from the child frame [pass]
page/page-network-idle.spec.ts › should wait for networkidle from the popup [fail]
page/page-network-idle.spec.ts › should wait for networkidle in setContent [fail]
page/page-network-idle.spec.ts › should wait for networkidle in setContent from the child frame [fail]
page/page-network-idle.spec.ts › should wait for networkidle in setContent with request from previous navigation [fail]
page/page-network-idle.spec.ts › should wait for networkidle in waitForNavigation [pass]
page/page-network-idle.spec.ts › should wait for networkidle to succeed navigation [pass]
page/page-network-idle.spec.ts › should wait for networkidle to succeed navigation with request from previous navigation [fail]
page/page-network-idle.spec.ts › should wait for networkidle when iframe attaches and detaches [fail]
page/page-network-idle.spec.ts › should wait for networkidle when navigating iframe [pass]
page/page-network-idle.spec.ts › should work after repeated navigations in the same page [pass]
page/page-network-request.spec.ts › page.reload return 304 status code [pass]
page/page-network-request.spec.ts › should get the same headers as the server [fail]
page/page-network-request.spec.ts › should get the same headers as the server CORS [fail]
page/page-network-request.spec.ts › should get |undefined| with postData() when there is no post data [pass]
page/page-network-request.spec.ts › should get |undefined| with postDataJSON() when there is no post data [pass]
page/page-network-request.spec.ts › should handle mixed-content blocked requests [unknown]
page/page-network-request.spec.ts › should not allow to access frame on popup main request [fail]
page/page-network-request.spec.ts › should not get preflight CORS requests when intercepting [fail]
page/page-network-request.spec.ts › should not return allHeaders() until they are available [fail]
page/page-network-request.spec.ts › should not work for a redirect and interception [pass]
page/page-network-request.spec.ts › should override post data content type [pass]
page/page-network-request.spec.ts › should parse the data if content-type is application/x-www-form-urlencoded [fail]
page/page-network-request.spec.ts › should parse the data if content-type is application/x-www-form-urlencoded; charset=UTF-8 [fail]
page/page-network-request.spec.ts › should parse the json post data [fail]
page/page-network-request.spec.ts › should report all cookies in one header [pass]
page/page-network-request.spec.ts › should report raw headers [fail]
page/page-network-request.spec.ts › should report raw response headers in redirects [pass]
page/page-network-request.spec.ts › should return event source [fail]
page/page-network-request.spec.ts › should return headers [pass]
page/page-network-request.spec.ts › should return multipart/form-data [fail]
page/page-network-request.spec.ts › should return navigation bit [pass]
page/page-network-request.spec.ts › should return navigation bit when navigating to image [pass]
page/page-network-request.spec.ts › should return postData [fail]
page/page-network-request.spec.ts › should work for a redirect [pass]
page/page-network-request.spec.ts › should work for fetch requests @smoke [pass]
page/page-network-request.spec.ts › should work for main frame navigation request [pass]
page/page-network-request.spec.ts › should work for subframe navigation request [pass]
page/page-network-request.spec.ts › should work with binary post data [fail]
page/page-network-request.spec.ts › should work with binary post data and interception [fail]
page/page-network-response.spec.ts › should behave the same way for headers and allHeaders [pass]
page/page-network-response.spec.ts › should bypass disk cache when context interception is enabled [fail]
page/page-network-response.spec.ts › should bypass disk cache when page interception is enabled [pass]
page/page-network-response.spec.ts › should provide a Response with a file URL [fail]
page/page-network-response.spec.ts › should reject response.finished if context closes [timeout]
page/page-network-response.spec.ts › should reject response.finished if page closes [pass]
page/page-network-response.spec.ts › should report all headers [fail]
page/page-network-response.spec.ts › should report if request was fromServiceWorker [fail]
page/page-network-response.spec.ts › should report multiple set-cookie headers [fail]
page/page-network-response.spec.ts › should return body [fail]
page/page-network-response.spec.ts › should return body for prefetch script [fail]
page/page-network-response.spec.ts › should return body with compression [fail]
page/page-network-response.spec.ts › should return headers after route.fulfill [pass]
page/page-network-response.spec.ts › should return json [fail]
page/page-network-response.spec.ts › should return multiple header value [fail]
page/page-network-response.spec.ts › should return set-cookie header after route.fulfill [pass]
page/page-network-response.spec.ts › should return status text [fail]
page/page-network-response.spec.ts › should return text [fail]
page/page-network-response.spec.ts › should return uncompressed text [fail]
page/page-network-response.spec.ts › should throw when requesting body of redirected response [pass]
page/page-network-response.spec.ts › should wait until response completes [fail]
page/page-network-response.spec.ts › should work @smoke [pass]
page/page-network-sizes.spec.ts › should handle redirects [pass]
page/page-network-sizes.spec.ts › should have correct responseBodySize for 404 with content [pass]
page/page-network-sizes.spec.ts › should have the correct responseBodySize [pass]
page/page-network-sizes.spec.ts › should have the correct responseBodySize for chunked request [fail]
page/page-network-sizes.spec.ts › should have the correct responseBodySize with gzip compression [pass]
page/page-network-sizes.spec.ts › should return sizes without hanging [fail]
page/page-network-sizes.spec.ts › should set bodySize and headersSize [pass]
page/page-network-sizes.spec.ts › should set bodySize to 0 if there was no body [pass]
page/page-network-sizes.spec.ts › should set bodySize to 0 when there was no response body [pass]
page/page-network-sizes.spec.ts › should set bodySize, headersSize, and transferSize [pass]
page/page-network-sizes.spec.ts › should throw for failed requests [pass]
page/page-network-sizes.spec.ts › should work with 200 status code [pass]
page/page-network-sizes.spec.ts › should work with 401 status code [pass]
page/page-network-sizes.spec.ts › should work with 404 status code [pass]
page/page-network-sizes.spec.ts › should work with 500 status code [pass]
page/page-object-count.spec.ts › should count objects [unknown]
page/page-request-continue.spec.ts › continue should delete headers on redirects [fail]
page/page-request-continue.spec.ts › continue should not change multipart/form-data body [pass]
page/page-request-continue.spec.ts › continue should propagate headers to redirects [fail]
page/page-request-continue.spec.ts › post data › should amend binary post data [fail]
page/page-request-continue.spec.ts › post data › should amend longer post data [pass]
page/page-request-continue.spec.ts › post data › should amend method and post data [pass]
page/page-request-continue.spec.ts › post data › should amend post data [pass]
page/page-request-continue.spec.ts › post data › should amend utf8 post data [fail]
page/page-request-continue.spec.ts › post data › should compute content-length from post data [pass]
page/page-request-continue.spec.ts › post data › should use content-type from original request [pass]
page/page-request-continue.spec.ts › redirected requests should report overridden headers [fail]
page/page-request-continue.spec.ts › should amend HTTP headers [pass]
page/page-request-continue.spec.ts › should amend method [pass]
page/page-request-continue.spec.ts › should amend method on main request [fail]
page/page-request-continue.spec.ts › should continue preload link requests [pass]
page/page-request-continue.spec.ts › should delete header with undefined value [pass]
page/page-request-continue.spec.ts › should delete the origin header [pass]
page/page-request-continue.spec.ts › should intercept css variable with background url [fail]
page/page-request-continue.spec.ts › should not allow changing protocol when overriding url [pass]
page/page-request-continue.spec.ts › should not throw if request was cancelled by the page [timeout]
page/page-request-continue.spec.ts › should not throw when continuing after page is closed [fail]
page/page-request-continue.spec.ts › should not throw when continuing while page is closing [fail]
page/page-request-continue.spec.ts › should override method along with url [timeout]
page/page-request-continue.spec.ts › should override request url [timeout]
page/page-request-continue.spec.ts › should work [fail]
page/page-request-continue.spec.ts › should work with Cross-Origin-Opener-Policy [pass]
page/page-request-fallback.spec.ts › post data › should amend binary post data [pass]
page/page-request-fallback.spec.ts › post data › should amend json post data [pass]
page/page-request-fallback.spec.ts › post data › should amend post data [pass]
page/page-request-fallback.spec.ts › should amend HTTP headers [pass]
page/page-request-fallback.spec.ts › should amend method [fail]
page/page-request-fallback.spec.ts › should chain once [fail]
page/page-request-fallback.spec.ts › should delete header with undefined value [pass]
page/page-request-fallback.spec.ts › should fall back [fail]
page/page-request-fallback.spec.ts › should fall back after exception [pass]
page/page-request-fallback.spec.ts › should fall back async [pass]
page/page-request-fallback.spec.ts › should not chain abort [pass]
page/page-request-fallback.spec.ts › should not chain fulfill [fail]
page/page-request-fallback.spec.ts › should override request url [fail]
page/page-request-fallback.spec.ts › should work [pass]
page/page-request-fulfill.spec.ts › headerValue should return set-cookie from intercepted response [pass]
page/page-request-fulfill.spec.ts › should allow mocking binary responses [fail]
page/page-request-fulfill.spec.ts › should allow mocking svg with charset [fail]
page/page-request-fulfill.spec.ts › should fetch original request and fulfill [fail]
page/page-request-fulfill.spec.ts › should fulfill json [pass]
page/page-request-fulfill.spec.ts › should fulfill preload link requests [fail]
page/page-request-fulfill.spec.ts › should fulfill with fetch response that has multiple set-cookie [fail]
page/page-request-fulfill.spec.ts › should fulfill with fetch result [fail]
page/page-request-fulfill.spec.ts › should fulfill with fetch result and overrides [fail]
page/page-request-fulfill.spec.ts › should fulfill with global fetch result [fail]
page/page-request-fulfill.spec.ts › should fulfill with gzip and readback [fail]
page/page-request-fulfill.spec.ts › should fulfill with har response [pass]
page/page-request-fulfill.spec.ts › should fulfill with multiple set-cookie [pass]
page/page-request-fulfill.spec.ts › should fulfill with unuassigned status codes [pass]
page/page-request-fulfill.spec.ts › should include the origin header [pass]
page/page-request-fulfill.spec.ts › should not go to the network for fulfilled requests body [fail]
page/page-request-fulfill.spec.ts › should not modify the headers sent to the server [fail]
page/page-request-fulfill.spec.ts › should not throw if request was cancelled by the page [fail]
page/page-request-fulfill.spec.ts › should stringify intercepted request response headers [pass]
page/page-request-fulfill.spec.ts › should work [pass]
page/page-request-fulfill.spec.ts › should work with buffer as body [fail]
page/page-request-fulfill.spec.ts › should work with file path [pass]
page/page-request-fulfill.spec.ts › should work with status code 422 [pass]
page/page-request-intercept.spec.ts › request.postData is not null when fetching FormData with a Blob [fail]
page/page-request-intercept.spec.ts › should fulfill intercepted response [pass]
page/page-request-intercept.spec.ts › should fulfill intercepted response using alias [pass]
page/page-request-intercept.spec.ts › should fulfill popup main request using alias [fail]
page/page-request-intercept.spec.ts › should fulfill response with empty body [fail]
page/page-request-intercept.spec.ts › should fulfill with any response [fail]
page/page-request-intercept.spec.ts › should give access to the intercepted response [pass]
page/page-request-intercept.spec.ts › should give access to the intercepted response body [fail]
page/page-request-intercept.spec.ts › should intercept multipart/form-data request body [unknown]
page/page-request-intercept.spec.ts › should intercept with post data override [pass]
page/page-request-intercept.spec.ts › should intercept with url override [fail]
page/page-request-intercept.spec.ts › should not follow redirects when maxRedirects is set to 0 in route.fetch [fail]
page/page-request-intercept.spec.ts › should override with defaults when intercepted response not provided [fail]
page/page-request-intercept.spec.ts › should support fulfill after intercept [fail]
page/page-request-intercept.spec.ts › should support timeout option in route.fetch [pass]
page/page-route.spec.ts › route.abort should throw if called twice [pass]
page/page-route.spec.ts › route.continue should throw if called twice [pass]
page/page-route.spec.ts › route.fallback should throw if called twice [pass]
page/page-route.spec.ts › route.fulfill should throw if called twice [fail]
page/page-route.spec.ts › should add Access-Control-Allow-Origin by default when fulfill [fail]
page/page-route.spec.ts › should allow null origin for about:blank [fail]
page/page-route.spec.ts › should be able to fetch dataURL and not fire dataURL requests [fail]
page/page-route.spec.ts › should be able to remove headers [pass]
page/page-route.spec.ts › should be abortable [pass]
page/page-route.spec.ts › should be abortable with custom error codes [fail]
page/page-route.spec.ts › should chain fallback w/ dynamic URL [fail]
page/page-route.spec.ts › should contain raw request header [pass]
page/page-route.spec.ts › should contain raw response header [pass]
page/page-route.spec.ts › should contain raw response header after fulfill [pass]
page/page-route.spec.ts › should contain referer header [fail]
page/page-route.spec.ts › should fail navigation when aborting main resource [fail]
page/page-route.spec.ts › should fulfill with redirect status [fail]
page/page-route.spec.ts › should intercept @smoke [fail]
page/page-route.spec.ts › should intercept main resource during cross-process navigation [pass]
page/page-route.spec.ts › should intercept when postData is more than 1MB [fail]
page/page-route.spec.ts › should navigate to URL with hash and and fire requests without hash [pass]
page/page-route.spec.ts › should navigate to dataURL and not fire dataURL requests [pass]
page/page-route.spec.ts › should not auto-intercept non-preflight OPTIONS [fail]
page/page-route.spec.ts › should not fulfill with redirect status [unknown]
page/page-route.spec.ts › should not throw "Invalid Interception Id" if the request was cancelled [fail]
page/page-route.spec.ts › should not throw if request was cancelled by the page [timeout]
page/page-route.spec.ts › should not work with redirects [fail]
page/page-route.spec.ts › should override cookie header [fail]
page/page-route.spec.ts › should pause intercepted XHR until continue [fail]
page/page-route.spec.ts › should pause intercepted fetch request until continue [pass]
page/page-route.spec.ts › should properly return navigation response when URL has cookies [pass]
page/page-route.spec.ts › should reject cors with disallowed credentials [fail]
page/page-route.spec.ts › should respect cors overrides [fail]
page/page-route.spec.ts › should send referer [fail]
page/page-route.spec.ts › should show custom HTTP headers [fail]
page/page-route.spec.ts › should support ? in glob pattern [fail]
page/page-route.spec.ts › should support async handler w/ times [pass]
page/page-route.spec.ts › should support cors for different methods [fail]
page/page-route.spec.ts › should support cors with GET [pass]
page/page-route.spec.ts › should support cors with POST [fail]
page/page-route.spec.ts › should support cors with credentials [fail]
page/page-route.spec.ts › should support the times parameter with route matching [fail]
page/page-route.spec.ts › should unroute [pass]
page/page-route.spec.ts › should work if handler with times parameter was removed from another handler [pass]
page/page-route.spec.ts › should work when POST is redirected with 302 [fail]
page/page-route.spec.ts › should work when header manipulation headers with redirect [fail]
page/page-route.spec.ts › should work with badly encoded server [pass]
page/page-route.spec.ts › should work with custom referer headers [fail]
page/page-route.spec.ts › should work with encoded server [fail]
page/page-route.spec.ts › should work with encoded server - 2 [fail]
page/page-route.spec.ts › should work with equal requests [fail]
page/page-route.spec.ts › should work with redirect inside sync XHR [pass]
page/page-route.spec.ts › should work with redirects for subresources [fail]
page/page-screenshot.spec.ts › page screenshot animations › should capture screenshots after layoutchanges in transitionend event [pass]
page/page-screenshot.spec.ts › page screenshot animations › should fire transitionend for finite transitions [pass]
page/page-screenshot.spec.ts › page screenshot animations › should not capture css animations in shadow DOM [fail]
page/page-screenshot.spec.ts › page screenshot animations › should not capture infinite css animation [fail]
page/page-screenshot.spec.ts › page screenshot animations › should not capture infinite web animations [fail]
page/page-screenshot.spec.ts › page screenshot animations › should not capture pseudo element css animation [fail]
page/page-screenshot.spec.ts › page screenshot animations › should not change animation with playbackRate equal to 0 [pass]
page/page-screenshot.spec.ts › page screenshot animations › should resume infinite animations [pass]
page/page-screenshot.spec.ts › page screenshot animations › should stop animations that happen right before screenshot [pass]
page/page-screenshot.spec.ts › page screenshot animations › should trigger particular events for INfinite css animation [pass]
page/page-screenshot.spec.ts › page screenshot animations › should trigger particular events for css transitions [pass]
page/page-screenshot.spec.ts › page screenshot animations › should trigger particular events for finite css animation [pass]
page/page-screenshot.spec.ts › page screenshot animations › should wait for fonts to load [fail]
page/page-screenshot.spec.ts › page screenshot should capture css transform [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should hide elements based on attr [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should mask in parallel [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should mask inside iframe [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should mask multiple elements [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should remove elements based on attr [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should remove mask after screenshot [pass]
page/page-screenshot.spec.ts › page screenshot › mask option › should work [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should work when mask color is not pink #F0F [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should work when subframe has stalled navigation [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should work when subframe used document.open after a weird url [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should work with elementhandle [fail]
page/page-screenshot.spec.ts › page screenshot › mask option › should work with locator [fail]
page/page-screenshot.spec.ts › page screenshot › path option should create subdirectories [pass]
page/page-screenshot.spec.ts › page screenshot › path option should detect jpeg [fail]
page/page-screenshot.spec.ts › page screenshot › path option should throw for unsupported mime type [pass]
page/page-screenshot.spec.ts › page screenshot › path option should work [fail]
page/page-screenshot.spec.ts › page screenshot › quality option should throw for png [pass]
page/page-screenshot.spec.ts › page screenshot › should allow transparency [fail]
page/page-screenshot.spec.ts › page screenshot › should capture blinking caret if explicitly asked for [fail]
page/page-screenshot.spec.ts › page screenshot › should capture blinking caret in shadow dom [pass]
page/page-screenshot.spec.ts › page screenshot › should capture canvas changes [fail]
page/page-screenshot.spec.ts › page screenshot › should clip elements to the viewport [fail]
page/page-screenshot.spec.ts › page screenshot › should clip rect [fail]
page/page-screenshot.spec.ts › page screenshot › should clip rect with fullPage [fail]
page/page-screenshot.spec.ts › page screenshot › should not capture blinking caret by default [fail]
page/page-screenshot.spec.ts › page screenshot › should not issue resize event [pass]
page/page-screenshot.spec.ts › page screenshot › should prefer type over extension [fail]
page/page-screenshot.spec.ts › page screenshot › should render white background on jpeg file [fail]
page/page-screenshot.spec.ts › page screenshot › should restore viewport after fullPage screenshot [fail]
page/page-screenshot.spec.ts › page screenshot › should run in parallel [fail]
page/page-screenshot.spec.ts › page screenshot › should take fullPage screenshots [fail]
page/page-screenshot.spec.ts › page screenshot › should take fullPage screenshots and mask elements outside of it [fail]
page/page-screenshot.spec.ts › page screenshot › should take fullPage screenshots during navigation [pass]
page/page-screenshot.spec.ts › page screenshot › should throw on clip outside the viewport [pass]
page/page-screenshot.spec.ts › page screenshot › should work @smoke [fail]
page/page-screenshot.spec.ts › page screenshot › should work for canvas [fail]
page/page-screenshot.spec.ts › page screenshot › should work for translateZ [fail]
page/page-screenshot.spec.ts › page screenshot › should work for webgl [fail]
page/page-screenshot.spec.ts › page screenshot › should work while navigating [fail]
page/page-screenshot.spec.ts › page screenshot › should work with Array deleted [fail]
page/page-screenshot.spec.ts › page screenshot › should work with iframe in shadow [fail]
page/page-screenshot.spec.ts › page screenshot › should work with odd clip size on Retina displays [fail]
page/page-screenshot.spec.ts › page screenshot › zero quality option should throw for png [fail]
page/page-screenshot.spec.ts › should capture css box-shadow [fail]
page/page-screenshot.spec.ts › should throw if screenshot size is too large [fail]
page/page-select-option.spec.ts › input event.composed should be true and cross shadow dom boundary [fail]
page/page-select-option.spec.ts › should deselect all options when passed no values for a multiple select [pass]
page/page-select-option.spec.ts › should deselect all options when passed no values for a select without multiple [pass]
page/page-select-option.spec.ts › should fall back to selecting by label [pass]
page/page-select-option.spec.ts › should not allow null items [pass]
page/page-select-option.spec.ts › should not select single option when some attributes do not match [pass]
page/page-select-option.spec.ts › should not throw when select causes navigation [pass]
page/page-select-option.spec.ts › should respect event bubbling [pass]
page/page-select-option.spec.ts › should return [] on no matched values [pass]
page/page-select-option.spec.ts › should return [] on no values [pass]
page/page-select-option.spec.ts › should return an array of matched values [fail]
page/page-select-option.spec.ts › should return an array of one element when multiple is not set [pass]
page/page-select-option.spec.ts › should select multiple options [pass]
page/page-select-option.spec.ts › should select multiple options with attributes [pass]
page/page-select-option.spec.ts › should select only first option [pass]
page/page-select-option.spec.ts › should select single option @smoke [pass]
page/page-select-option.spec.ts › should select single option by handle [pass]
page/page-select-option.spec.ts › should select single option by index [pass]
page/page-select-option.spec.ts › should select single option by label [pass]
page/page-select-option.spec.ts › should select single option by multiple attributes [pass]
page/page-select-option.spec.ts › should select single option by value [pass]
page/page-select-option.spec.ts › should throw if passed wrong types [fail]
page/page-select-option.spec.ts › should throw when element is not a <select> [pass]
page/page-select-option.spec.ts › should unselect with null [pass]
page/page-select-option.spec.ts › should wait for multiple options to be present [pass]
page/page-select-option.spec.ts › should wait for option index to be present [pass]
page/page-select-option.spec.ts › should wait for option to be present [pass]
page/page-select-option.spec.ts › should work when re-defining top-level Event class [pass]
page/page-set-content.spec.ts › content() should throw nice error during navigation [fail]
page/page-set-content.spec.ts › should await resources to load [fail]
page/page-set-content.spec.ts › should respect default navigation timeout [pass]
page/page-set-content.spec.ts › should respect timeout [pass]
page/page-set-content.spec.ts › should return empty content there is no iframe src [unknown]
page/page-set-content.spec.ts › should work @smoke [fail]
page/page-set-content.spec.ts › should work fast enough [fail]
page/page-set-content.spec.ts › should work with HTML 4 doctype [fail]
page/page-set-content.spec.ts › should work with accents [fail]
page/page-set-content.spec.ts › should work with commit [fail]
page/page-set-content.spec.ts › should work with doctype [fail]
page/page-set-content.spec.ts › should work with domcontentloaded [fail]
page/page-set-content.spec.ts › should work with emojis [fail]
page/page-set-content.spec.ts › should work with newline [fail]
page/page-set-content.spec.ts › should work with tricky content [fail]
page/page-set-extra-http-headers.spec.ts › should not duplicate referer header [fail]
page/page-set-extra-http-headers.spec.ts › should throw for non-string header values [pass]
page/page-set-extra-http-headers.spec.ts › should work @smoke [fail]
page/page-set-extra-http-headers.spec.ts › should work with extra headers from browser context [fail]
page/page-set-extra-http-headers.spec.ts › should work with redirects [fail]
page/page-set-input-files.spec.ts › input event.composed should be true and cross shadow dom boundary [fail]
page/page-set-input-files.spec.ts › input should trigger events when files changed second time [fail]
page/page-set-input-files.spec.ts › should accept single file [fail]
page/page-set-input-files.spec.ts › should be able to read selected file [fail]
page/page-set-input-files.spec.ts › should be able to reset selected files with empty file list [fail]
page/page-set-input-files.spec.ts › should detect mime type [fail]
page/page-set-input-files.spec.ts › should emit event addListener/removeListener [fail]
page/page-set-input-files.spec.ts › should emit event after navigation [fail]
page/page-set-input-files.spec.ts › should emit event for iframe [fail]
page/page-set-input-files.spec.ts › should emit event on/off [fail]
page/page-set-input-files.spec.ts › should emit event once [fail]
page/page-set-input-files.spec.ts › should emit event via prepend [fail]
page/page-set-input-files.spec.ts › should emit input and change events [fail]
page/page-set-input-files.spec.ts › should not accept multiple files for single-file input [fail]
page/page-set-input-files.spec.ts › should not throw when filechooser belongs to iframe [fail]
page/page-set-input-files.spec.ts › should not throw when frame is detached immediately [fail]
page/page-set-input-files.spec.ts › should not trim big uploaded files [pass]
page/page-set-input-files.spec.ts › should preserve lastModified timestamp [fail]
page/page-set-input-files.spec.ts › should prioritize exact timeout over default timeout [pass]
page/page-set-input-files.spec.ts › should respect default timeout when there is no custom timeout [pass]
page/page-set-input-files.spec.ts › should respect timeout [pass]
page/page-set-input-files.spec.ts › should return the same file chooser when there are many watchdogs simultaneously [fail]
page/page-set-input-files.spec.ts › should set from memory [fail]
page/page-set-input-files.spec.ts › should throw an error if the file does not exist [fail]
page/page-set-input-files.spec.ts › should throw if a directory and files are passed [fail]
page/page-set-input-files.spec.ts › should throw when uploading a file in a directory upload input [fail]
page/page-set-input-files.spec.ts › should throw when uploading a folder in a normal file upload input [fail]
page/page-set-input-files.spec.ts › should trigger listener added before navigation [fail]
page/page-set-input-files.spec.ts › should upload a file after popup [timeout]
page/page-set-input-files.spec.ts › should upload a folder [fail]
page/page-set-input-files.spec.ts › should upload a folder and throw for multiple directories [fail]
page/page-set-input-files.spec.ts › should upload large file [fail]
page/page-set-input-files.spec.ts › should upload large file with relative path [fail]
page/page-set-input-files.spec.ts › should upload multiple large files [fail]
page/page-set-input-files.spec.ts › should upload the file [fail]
page/page-set-input-files.spec.ts › should upload the file with spaces in name [fail]
page/page-set-input-files.spec.ts › should work @smoke [fail]
page/page-set-input-files.spec.ts › should work for "multiple" [fail]
page/page-set-input-files.spec.ts › should work for "webkitdirectory" [fail]
page/page-set-input-files.spec.ts › should work for single file pick [fail]
page/page-set-input-files.spec.ts › should work when file input is attached to DOM [fail]
page/page-set-input-files.spec.ts › should work when file input is not attached to DOM [fail]
page/page-set-input-files.spec.ts › should work with CSP [fail]
page/page-set-input-files.spec.ts › should work with no timeout [fail]
page/page-strict.spec.ts › should escape class names [fail]
page/page-strict.spec.ts › should escape tag names [fail]
page/page-strict.spec.ts › should fail page.$ in strict mode [fail]
page/page-strict.spec.ts › should fail page.dispatchEvent in strict mode [fail]
page/page-strict.spec.ts › should fail page.fill in strict mode [fail]
page/page-strict.spec.ts › should fail page.getAttribute in strict mode [fail]
page/page-strict.spec.ts › should fail page.textContent in strict mode [fail]
page/page-strict.spec.ts › should fail page.waitForSelector in strict mode [fail]
page/page-strict.spec.ts › should properly format :nth-child() in strict mode message [fail]
page/page-wait-for-function.spec.ts › should accept ElementHandle arguments [fail]
page/page-wait-for-function.spec.ts › should accept a string [pass]
page/page-wait-for-function.spec.ts › should avoid side effects after timeout [pass]
page/page-wait-for-function.spec.ts › should disable timeout when its set to 0 [pass]
page/page-wait-for-function.spec.ts › should fail with ReferenceError on wrong page [timeout]
page/page-wait-for-function.spec.ts › should fail with predicate throwing on first call [timeout]
page/page-wait-for-function.spec.ts › should fail with predicate throwing sometimes [fail]
page/page-wait-for-function.spec.ts › should not be called after finishing successfully [pass]
page/page-wait-for-function.spec.ts › should not be called after finishing unsuccessfully [timeout]
page/page-wait-for-function.spec.ts › should poll on interval [pass]
page/page-wait-for-function.spec.ts › should poll on raf [pass]
page/page-wait-for-function.spec.ts › should respect default timeout [fail]
page/page-wait-for-function.spec.ts › should respect timeout [pass]
page/page-wait-for-function.spec.ts › should return the success value as a JSHandle [pass]
page/page-wait-for-function.spec.ts › should return the window as a success value [pass]
page/page-wait-for-function.spec.ts › should survive cross-process navigation [pass]
page/page-wait-for-function.spec.ts › should survive navigations [pass]
page/page-wait-for-function.spec.ts › should throw negative polling interval [pass]
page/page-wait-for-function.spec.ts › should throw on bad polling value [pass]
page/page-wait-for-function.spec.ts › should throw on polling:mutation [pass]
page/page-wait-for-function.spec.ts › should throw when frame is detached [pass]
page/page-wait-for-function.spec.ts › should timeout [pass]
page/page-wait-for-function.spec.ts › should wait for predicate with arguments [pass]
page/page-wait-for-function.spec.ts › should work when resolved right before execution context disposal [pass]
page/page-wait-for-function.spec.ts › should work with multiline body [pass]
page/page-wait-for-function.spec.ts › should work with strict CSP policy [fail]
page/page-wait-for-load-state.spec.ts › should pick up ongoing navigation [pass]
page/page-wait-for-load-state.spec.ts › should resolve after popup load [pass]
page/page-wait-for-load-state.spec.ts › should resolve immediately if load state matches [pass]
page/page-wait-for-load-state.spec.ts › should resolve immediately if loaded [fail]
page/page-wait-for-load-state.spec.ts › should respect timeout [pass]
page/page-wait-for-load-state.spec.ts › should throw for bad state [pass]
page/page-wait-for-load-state.spec.ts › should wait for load state of about:blank popup  [timeout]
page/page-wait-for-load-state.spec.ts › should wait for load state of about:blank popup with noopener  [pass]
page/page-wait-for-load-state.spec.ts › should wait for load state of empty url popup [timeout]
page/page-wait-for-load-state.spec.ts › should wait for load state of newPage [pass]
page/page-wait-for-load-state.spec.ts › should wait for load state of popup with network url  [pass]
page/page-wait-for-load-state.spec.ts › should wait for load state of popup with network url and noopener  [pass]
page/page-wait-for-load-state.spec.ts › should work for frame [pass]
page/page-wait-for-load-state.spec.ts › should work with broken blob-url iframe [fail]
page/page-wait-for-load-state.spec.ts › should work with broken data-url iframe [fail]
page/page-wait-for-load-state.spec.ts › should work with clicking target=_blank [fail]
page/page-wait-for-load-state.spec.ts › should work with javascript: iframe [fail]
page/page-wait-for-load-state.spec.ts › should work with pages that have loaded before being connected to [timeout]
page/page-wait-for-navigation.spec.ts › should fail when frame detaches [pass]
page/page-wait-for-navigation.spec.ts › should respect timeout [pass]
page/page-wait-for-navigation.spec.ts › should work [fail]
page/page-wait-for-navigation.spec.ts › should work for cross-process navigations [fail]
page/page-wait-for-navigation.spec.ts › should work on frame [pass]
page/page-wait-for-navigation.spec.ts › should work when subframe issues window.stop() [pass]
page/page-wait-for-navigation.spec.ts › should work with DOM history.back()/history.forward() [fail]
page/page-wait-for-navigation.spec.ts › should work with both domcontentloaded and load [pass]
page/page-wait-for-navigation.spec.ts › should work with clicking on anchor links [fail]
page/page-wait-for-navigation.spec.ts › should work with clicking on links which do not commit navigation [fail]
page/page-wait-for-navigation.spec.ts › should work with commit [pass]
page/page-wait-for-navigation.spec.ts › should work with history.pushState() [fail]
page/page-wait-for-navigation.spec.ts › should work with history.replaceState() [fail]
page/page-wait-for-navigation.spec.ts › should work with url match [pass]
page/page-wait-for-navigation.spec.ts › should work with url match for same document navigations [timeout]
page/page-wait-for-request.spec.ts › should log the url [pass]
page/page-wait-for-request.spec.ts › should respect default timeout [pass]
page/page-wait-for-request.spec.ts › should respect timeout [pass]
page/page-wait-for-request.spec.ts › should work [pass]
page/page-wait-for-request.spec.ts › should work with no timeout [pass]
page/page-wait-for-request.spec.ts › should work with predicate [pass]
page/page-wait-for-request.spec.ts › should work with url match [pass]
page/page-wait-for-request.spec.ts › should work with url match regular expression from a different context [pass]
page/page-wait-for-response.spec.ts › should log the url [pass]
page/page-wait-for-response.spec.ts › should respect default timeout [pass]
page/page-wait-for-response.spec.ts › should respect timeout [pass]
page/page-wait-for-response.spec.ts › should work [pass]
page/page-wait-for-response.spec.ts › should work with async predicate [fail]
page/page-wait-for-response.spec.ts › should work with no timeout [pass]
page/page-wait-for-response.spec.ts › should work with predicate [pass]
page/page-wait-for-response.spec.ts › should work with re-rendered cached IMG elements [fail]
page/page-wait-for-response.spec.ts › sync predicate should be only called once [pass]
page/page-wait-for-selector-1.spec.ts › elementHandle.waitForSelector should immediately resolve if node exists [fail]
page/page-wait-for-selector-1.spec.ts › elementHandle.waitForSelector should throw on navigation [fail]
page/page-wait-for-selector-1.spec.ts › elementHandle.waitForSelector should timeout [fail]
page/page-wait-for-selector-1.spec.ts › elementHandle.waitForSelector should wait [fail]
page/page-wait-for-selector-1.spec.ts › page.waitForSelector is shortcut for main frame [fail]
page/page-wait-for-selector-1.spec.ts › should immediately resolve promise if node exists [pass]
page/page-wait-for-selector-1.spec.ts › should report logs when the selector resolves to multiple elements [fail]
page/page-wait-for-selector-1.spec.ts › should report logs while waiting for hidden [pass]
page/page-wait-for-selector-1.spec.ts › should report logs while waiting for visible [pass]
page/page-wait-for-selector-1.spec.ts › should resolve promise when node is added [fail]
page/page-wait-for-selector-1.spec.ts › should resolve promise when node is added in shadow dom [pass]
page/page-wait-for-selector-1.spec.ts › should run in specified frame [fail]
page/page-wait-for-selector-1.spec.ts › should throw on waitFor [pass]
page/page-wait-for-selector-1.spec.ts › should throw when frame is detached [pass]
page/page-wait-for-selector-1.spec.ts › should tolerate waitFor=visible [pass]
page/page-wait-for-selector-1.spec.ts › should work when node is added through innerHTML [pass]
page/page-wait-for-selector-1.spec.ts › should work with removed MutationObserver [fail]
page/page-wait-for-selector-2.spec.ts › hidden should wait for display: none [fail]
page/page-wait-for-selector-2.spec.ts › hidden should wait for hidden [fail]
page/page-wait-for-selector-2.spec.ts › hidden should wait for removal [fail]
page/page-wait-for-selector-2.spec.ts › should allow you to select an element with single slash xpath [fail]
page/page-wait-for-selector-2.spec.ts › should consider outside of viewport visible [fail]
page/page-wait-for-selector-2.spec.ts › should correctly handle hidden shadow host [fail]
page/page-wait-for-selector-2.spec.ts › should fail when navigating while on handle [fail]
page/page-wait-for-selector-2.spec.ts › should have an error message specifically for awaiting an element to be hidden [fail]
page/page-wait-for-selector-2.spec.ts › should have correct stack trace for timeout [pass]
page/page-wait-for-selector-2.spec.ts › should not consider visible when zero-sized [fail]
page/page-wait-for-selector-2.spec.ts › should respect timeout [pass]
page/page-wait-for-selector-2.spec.ts › should respect timeout xpath [pass]
page/page-wait-for-selector-2.spec.ts › should respond to node attribute mutation [fail]
page/page-wait-for-selector-2.spec.ts › should return null if waiting to hide non-existing element [pass]
page/page-wait-for-selector-2.spec.ts › should return the element handle [fail]
page/page-wait-for-selector-2.spec.ts › should return the element handle xpath [fail]
page/page-wait-for-selector-2.spec.ts › should run in specified frame xpath [fail]
page/page-wait-for-selector-2.spec.ts › should support >> selector syntax [fail]
page/page-wait-for-selector-2.spec.ts › should support some fancy xpath [fail]
page/page-wait-for-selector-2.spec.ts › should survive cross-process navigation [pass]
page/page-wait-for-selector-2.spec.ts › should throw for false state option [fail]
page/page-wait-for-selector-2.spec.ts › should throw for true state option [fail]
page/page-wait-for-selector-2.spec.ts › should throw for unknown state option [fail]
page/page-wait-for-selector-2.spec.ts › should throw for visibility option [fail]
page/page-wait-for-selector-2.spec.ts › should throw when frame is detached xpath [pass]
page/page-wait-for-selector-2.spec.ts › should wait for detached [fail]
page/page-wait-for-selector-2.spec.ts › should wait for detached if already detached [fail]
page/page-wait-for-selector-2.spec.ts › should wait for visible [fail]
page/page-wait-for-selector-2.spec.ts › should wait for visible recursively [fail]
page/page-wait-for-selector-2.spec.ts › should work when navigating before node adoption [fail]
page/page-wait-for-url.spec.ts › should respect timeout [pass]
page/page-wait-for-url.spec.ts › should work [pass]
page/page-wait-for-url.spec.ts › should work on frame [pass]
page/page-wait-for-url.spec.ts › should work with DOM history.back()/history.forward() [fail]
page/page-wait-for-url.spec.ts › should work with both domcontentloaded and load [pass]
page/page-wait-for-url.spec.ts › should work with clicking on anchor links [fail]
page/page-wait-for-url.spec.ts › should work with commit [pass]
page/page-wait-for-url.spec.ts › should work with commit and about:blank [pass]
page/page-wait-for-url.spec.ts › should work with history.pushState() [fail]
page/page-wait-for-url.spec.ts › should work with history.replaceState() [fail]
page/page-wait-for-url.spec.ts › should work with url match for same document navigations [timeout]
page/queryselector.spec.ts › $$ should work with bogus Array.from [fail]
page/queryselector.spec.ts › should auto-detect css selector [fail]
page/queryselector.spec.ts › should auto-detect text selector [fail]
page/queryselector.spec.ts › should auto-detect xpath selector [fail]
page/queryselector.spec.ts › should auto-detect xpath selector starting with .. [fail]
page/queryselector.spec.ts › should auto-detect xpath selector with starting parenthesis [fail]
page/queryselector.spec.ts › should query existing element with css selector @smoke [fail]
page/queryselector.spec.ts › should query existing element with text selector [fail]
page/queryselector.spec.ts › should query existing element with xpath selector [fail]
page/queryselector.spec.ts › should query existing elements [fail]
page/queryselector.spec.ts › should return empty array if nothing is found [fail]
page/queryselector.spec.ts › should return null for non-existing element [pass]
page/queryselector.spec.ts › should support >> syntax [fail]
page/queryselector.spec.ts › should throw for non-string selector [pass]
page/queryselector.spec.ts › xpath should query existing element [fail]
page/queryselector.spec.ts › xpath should return empty array for non-existing element [fail]
page/queryselector.spec.ts › xpath should return multiple elements [fail]
page/retarget.spec.ts › check retargeting [fail]
page/retarget.spec.ts › direct actions retargeting [fail]
page/retarget.spec.ts › editable retargeting [fail]
page/retarget.spec.ts › element state checks should work as expected for label with zero-sized input [fail]
page/retarget.spec.ts › enabled/disabled retargeting [fail]
page/retarget.spec.ts › input value retargeting [fail]
page/retarget.spec.ts › select options retargeting [fail]
page/retarget.spec.ts › selection retargeting [fail]
page/retarget.spec.ts › setInputFiles should work with label [fail]
page/retarget.spec.ts › should check the box outside shadow dom label [fail]
page/retarget.spec.ts › should not retarget anchor into parent label [fail]
page/retarget.spec.ts › should wait for enclosing button with a disabled fieldset [fail]
page/retarget.spec.ts › should wait for enclosing disabled button [fail]
page/retarget.spec.ts › should wait for enclosing enabled button [fail]
page/retarget.spec.ts › visible/hidden retargeting [fail]
page/selectors-css.spec.ts › css on the handle should be relative [fail]
page/selectors-css.spec.ts › should absolutize relative selectors [fail]
page/selectors-css.spec.ts › should keep dom order with comma separated list [fail]
page/selectors-css.spec.ts › should not match root after >> [fail]
page/selectors-css.spec.ts › should return multiple captures for the same node [fail]
page/selectors-css.spec.ts › should return multiple captures when going up the hierarchy [fail]
page/selectors-css.spec.ts › should work for open shadow roots [fail]
page/selectors-css.spec.ts › should work with * [fail]
page/selectors-css.spec.ts › should work with + [fail]
page/selectors-css.spec.ts › should work with :has [fail]
page/selectors-css.spec.ts › should work with :is [pass]
page/selectors-css.spec.ts › should work with :not [pass]
page/selectors-css.spec.ts › should work with :nth-child [pass]
page/selectors-css.spec.ts › should work with :nth-child(of) notation with nested functions [fail]
page/selectors-css.spec.ts › should work with :scope [fail]
page/selectors-css.spec.ts › should work with :scope and class [fail]
page/selectors-css.spec.ts › should work with > combinator and spaces [fail]
page/selectors-css.spec.ts › should work with attribute selectors [fail]
page/selectors-css.spec.ts › should work with comma inside text [fail]
page/selectors-css.spec.ts › should work with comma separated list [pass]
page/selectors-css.spec.ts › should work with comma separated list in various positions [fail]
page/selectors-css.spec.ts › should work with large DOM @smoke [pass]
page/selectors-css.spec.ts › should work with numerical id [fail]
page/selectors-css.spec.ts › should work with spaces in :nth-child and :not [pass]
page/selectors-css.spec.ts › should work with wrong-case id [fail]
page/selectors-css.spec.ts › should work with ~ [fail]
page/selectors-frame.spec.ts › $ should not wait for frame [pass]
page/selectors-frame.spec.ts › $$ should not wait for frame [pass]
page/selectors-frame.spec.ts › $$eval should throw for missing frame [pass]
page/selectors-frame.spec.ts › $eval should throw for missing frame [pass]
page/selectors-frame.spec.ts › click should survive frame reattach [pass]
page/selectors-frame.spec.ts › click should survive iframe navigation [pass]
page/selectors-frame.spec.ts › click should survive navigation [fail]
page/selectors-frame.spec.ts › should capture after the enter-frame [pass]
page/selectors-frame.spec.ts › should click in lazy iframe [pass]
page/selectors-frame.spec.ts › should fail if element removed while waiting on element handle [fail]
page/selectors-frame.spec.ts › should non work for non-frame [fail]
page/selectors-frame.spec.ts › should not allow capturing before enter-frame [pass]
page/selectors-frame.spec.ts › should not allow dangling enter-frame [pass]
page/selectors-frame.spec.ts › should not allow leading enter-frame [pass]
page/selectors-frame.spec.ts › should work for $ and $$ [fail]
page/selectors-frame.spec.ts › should work for $ and $$ (handle) [fail]
page/selectors-frame.spec.ts › should work for $$eval [pass]
page/selectors-frame.spec.ts › should work for $$eval (handle) [pass]
page/selectors-frame.spec.ts › should work for $eval [pass]
page/selectors-frame.spec.ts › should work for $eval (handle) [pass]
page/selectors-frame.spec.ts › should work for iframe (handle) [pass]
page/selectors-frame.spec.ts › should work for iframe @smoke [pass]
page/selectors-frame.spec.ts › should work for nested iframe [pass]
page/selectors-frame.spec.ts › should work for nested iframe (handle) [pass]
page/selectors-frame.spec.ts › waitFor should survive frame reattach [pass]
page/selectors-frame.spec.ts › waitForSelector should survive frame reattach (handle) [pass]
page/selectors-frame.spec.ts › waitForSelector should survive iframe navigation (handle) [pass]
page/selectors-get-by.spec.ts › getBy escaping [fail]
page/selectors-get-by.spec.ts › getByAltText should work [fail]
page/selectors-get-by.spec.ts › getByLabel should ignore empty aria-label [fail]
page/selectors-get-by.spec.ts › getByLabel should prioritize aria-labelledby over aria-label [fail]
page/selectors-get-by.spec.ts › getByLabel should prioritize aria-labelledby over native label [fail]
page/selectors-get-by.spec.ts › getByLabel should work [fail]
page/selectors-get-by.spec.ts › getByLabel should work with ancestor label and for [fail]
page/selectors-get-by.spec.ts › getByLabel should work with ancestor label and multiple controls [fail]
page/selectors-get-by.spec.ts › getByLabel should work with aria-label [fail]
page/selectors-get-by.spec.ts › getByLabel should work with aria-labelledby [fail]
page/selectors-get-by.spec.ts › getByLabel should work with multiply-labelled input [fail]
page/selectors-get-by.spec.ts › getByLabel should work with nested elements [fail]
page/selectors-get-by.spec.ts › getByPlaceholder should work [fail]
page/selectors-get-by.spec.ts › getByRole escaping [fail]
page/selectors-get-by.spec.ts › getByTestId should escape id [fail]
page/selectors-get-by.spec.ts › getByTestId should work [fail]
page/selectors-get-by.spec.ts › getByTestId should work for regex [fail]
page/selectors-get-by.spec.ts › getByTestId with custom testId should work [fail]
page/selectors-get-by.spec.ts › getByText should work [fail]
page/selectors-get-by.spec.ts › getByTitle should work [fail]
page/selectors-misc.spec.ts › chaining should work with large DOM @smoke [pass]
page/selectors-misc.spec.ts › data-testid on the handle should be relative [fail]
page/selectors-misc.spec.ts › should click on links in shadow dom [pass]
page/selectors-misc.spec.ts › should escape the scope with >> [fail]
page/selectors-misc.spec.ts › should print original xpath in error [fail]
page/selectors-misc.spec.ts › should properly determine visibility of display:contents elements [fail]
page/selectors-misc.spec.ts › should work for open shadow roots [fail]
page/selectors-misc.spec.ts › should work with :nth-match [fail]
page/selectors-misc.spec.ts › should work with :visible [fail]
page/selectors-misc.spec.ts › should work with >> visible= [fail]
page/selectors-misc.spec.ts › should work with internal:and= [fail]
page/selectors-misc.spec.ts › should work with internal:chain= [fail]
page/selectors-misc.spec.ts › should work with internal:has-not= [fail]
page/selectors-misc.spec.ts › should work with internal:has= [fail]
page/selectors-misc.spec.ts › should work with internal:or= [fail]
page/selectors-misc.spec.ts › should work with layout selectors [fail]
page/selectors-misc.spec.ts › should work with nth= [fail]
page/selectors-misc.spec.ts › should work with pipe in xpath [fail]
page/selectors-misc.spec.ts › should work with strict mode and chaining [fail]
page/selectors-misc.spec.ts › xpath should be relative [fail]
page/selectors-react.spec.ts › react15 › should compose [pass]
page/selectors-react.spec.ts › react15 › should exact match by props [fail]
page/selectors-react.spec.ts › react15 › should not crash when there is no match [pass]
page/selectors-react.spec.ts › react15 › should partially match by props [pass]
page/selectors-react.spec.ts › react15 › should query by props combinations [pass]
page/selectors-react.spec.ts › react15 › should support all string operators [pass]
page/selectors-react.spec.ts › react15 › should support nested react trees [pass]
page/selectors-react.spec.ts › react15 › should support regex [fail]
page/selectors-react.spec.ts › react15 › should support truthy querying [pass]
page/selectors-react.spec.ts › react15 › should work with multi-root elements (fragments) [unknown]
page/selectors-react.spec.ts › react15 › should work with multiroot react [pass]
page/selectors-react.spec.ts › react15 › should work with multiroot react after unmount [pass]
page/selectors-react.spec.ts › react15 › should work with multiroot react inside shadow DOM [fail]
page/selectors-react.spec.ts › react15 › should work with react memo [unknown]
page/selectors-react.spec.ts › react15 › should work with single-root elements @smoke [fail]
page/selectors-react.spec.ts › react16 › should compose [pass]
page/selectors-react.spec.ts › react16 › should exact match by props [pass]
page/selectors-react.spec.ts › react16 › should not crash when there is no match [pass]
page/selectors-react.spec.ts › react16 › should partially match by props [pass]
page/selectors-react.spec.ts › react16 › should query by props combinations [pass]
page/selectors-react.spec.ts › react16 › should support all string operators [pass]
page/selectors-react.spec.ts › react16 › should support nested react trees [pass]
page/selectors-react.spec.ts › react16 › should support regex [pass]
page/selectors-react.spec.ts › react16 › should support truthy querying [pass]
page/selectors-react.spec.ts › react16 › should work with multi-root elements (fragments) [pass]
page/selectors-react.spec.ts › react16 › should work with multiroot react [pass]
page/selectors-react.spec.ts › react16 › should work with multiroot react after unmount [pass]
page/selectors-react.spec.ts › react16 › should work with multiroot react inside shadow DOM [pass]
page/selectors-react.spec.ts › react16 › should work with react memo [unknown]
page/selectors-react.spec.ts › react16 › should work with single-root elements @smoke [pass]
page/selectors-react.spec.ts › react17 › should compose [pass]
page/selectors-react.spec.ts › react17 › should exact match by props [pass]
page/selectors-react.spec.ts › react17 › should not crash when there is no match [pass]
page/selectors-react.spec.ts › react17 › should partially match by props [pass]
page/selectors-react.spec.ts › react17 › should query by props combinations [pass]
page/selectors-react.spec.ts › react17 › should support all string operators [pass]
page/selectors-react.spec.ts › react17 › should support nested react trees [pass]
page/selectors-react.spec.ts › react17 › should support regex [pass]
page/selectors-react.spec.ts › react17 › should support truthy querying [pass]
page/selectors-react.spec.ts › react17 › should work with multi-root elements (fragments) [pass]
page/selectors-react.spec.ts › react17 › should work with multiroot react [pass]
page/selectors-react.spec.ts › react17 › should work with multiroot react after unmount [pass]
page/selectors-react.spec.ts › react17 › should work with multiroot react inside shadow DOM [pass]
page/selectors-react.spec.ts › react17 › should work with react memo [pass]
page/selectors-react.spec.ts › react17 › should work with single-root elements @smoke [pass]
page/selectors-react.spec.ts › react18 › should compose [pass]
page/selectors-react.spec.ts › react18 › should exact match by props [pass]
page/selectors-react.spec.ts › react18 › should not crash when there is no match [pass]
page/selectors-react.spec.ts › react18 › should partially match by props [pass]
page/selectors-react.spec.ts › react18 › should query by props combinations [pass]
page/selectors-react.spec.ts › react18 › should support all string operators [pass]
page/selectors-react.spec.ts › react18 › should support nested react trees [pass]
page/selectors-react.spec.ts › react18 › should support regex [pass]
page/selectors-react.spec.ts › react18 › should support truthy querying [pass]
page/selectors-react.spec.ts › react18 › should work with multi-root elements (fragments) [pass]
page/selectors-react.spec.ts › react18 › should work with multiroot react [pass]
page/selectors-react.spec.ts › react18 › should work with multiroot react after unmount [pass]
page/selectors-react.spec.ts › react18 › should work with multiroot react inside shadow DOM [pass]
page/selectors-react.spec.ts › react18 › should work with react memo [pass]
page/selectors-react.spec.ts › react18 › should work with single-root elements @smoke [pass]
page/selectors-register.spec.ts › getAttribute should be atomic [fail]
page/selectors-register.spec.ts › innerHTML should be atomic [fail]
page/selectors-register.spec.ts › innerText should be atomic [fail]
page/selectors-register.spec.ts › isVisible should be atomic [fail]
page/selectors-register.spec.ts › textContent should be atomic [fail]
page/selectors-role.spec.ts › errors [pass]
page/selectors-role.spec.ts › hidden with shadow dom slots [fail]
page/selectors-role.spec.ts › should detect roles [fail]
page/selectors-role.spec.ts › should filter hidden, unless explicitly asked for [fail]
page/selectors-role.spec.ts › should not match scope by default [fail]
page/selectors-role.spec.ts › should support checked [fail]
page/selectors-role.spec.ts › should support disabled [fail]
page/selectors-role.spec.ts › should support expanded [fail]
page/selectors-role.spec.ts › should support level [fail]
page/selectors-role.spec.ts › should support name [fail]
page/selectors-role.spec.ts › should support output accessible name [fail]
page/selectors-role.spec.ts › should support pressed [fail]
page/selectors-role.spec.ts › should support selected [fail]
page/selectors-text.spec.ts › hasText and internal:text should match full node text in strict mode [fail]
page/selectors-text.spec.ts › should be case sensitive if quotes are specified [fail]
page/selectors-text.spec.ts › should clear caches [fail]
page/selectors-text.spec.ts › should match input[type=button|submit] [fail]
page/selectors-text.spec.ts › should match root after >> [fail]
page/selectors-text.spec.ts › should match root after >> with * [fail]
page/selectors-text.spec.ts › should prioritize light dom over shadow dom in the same parent [pass]
page/selectors-text.spec.ts › should search for a substring without quotes [fail]
page/selectors-text.spec.ts › should skip head, script and style [fail]
page/selectors-text.spec.ts › should support empty string [fail]
page/selectors-text.spec.ts › should waitForSelector with distributed elements [pass]
page/selectors-text.spec.ts › should work @smoke [fail]
page/selectors-text.spec.ts › should work across nodes [fail]
page/selectors-text.spec.ts › should work for open shadow roots [pass]
page/selectors-text.spec.ts › should work with :has-text [fail]
page/selectors-text.spec.ts › should work with :text [fail]
page/selectors-text.spec.ts › should work with large DOM [pass]
page/selectors-text.spec.ts › should work with leading and trailing spaces [fail]
page/selectors-text.spec.ts › should work with paired quotes in the middle of selector [fail]
page/selectors-text.spec.ts › should work with text nodes in quoted mode [fail]
page/selectors-text.spec.ts › should work with unpaired quotes when not at the start [fail]
page/selectors-vue.spec.ts › vue2 › should compose [pass]
page/selectors-vue.spec.ts › vue2 › should exact match by props [pass]
page/selectors-vue.spec.ts › vue2 › should not crash when there is no match [pass]
page/selectors-vue.spec.ts › vue2 › should partially match by props [pass]
page/selectors-vue.spec.ts › vue2 › should query by props combinations [pass]
page/selectors-vue.spec.ts › vue2 › should support all string operators [pass]
page/selectors-vue.spec.ts › vue2 › should support nested vue trees [pass]
page/selectors-vue.spec.ts › vue2 › should support regex [pass]
page/selectors-vue.spec.ts › vue2 › should support truthy querying [pass]
page/selectors-vue.spec.ts › vue2 › should work with multi-root elements (fragments) [unknown]
page/selectors-vue.spec.ts › vue2 › should work with multiroot react [pass]
page/selectors-vue.spec.ts › vue2 › should work with multiroot vue inside shadow DOM [pass]
page/selectors-vue.spec.ts › vue2 › should work with single-root elements @smoke [pass]
page/selectors-vue.spec.ts › vue3 › should compose [pass]
page/selectors-vue.spec.ts › vue3 › should exact match by props [pass]
page/selectors-vue.spec.ts › vue3 › should not crash when there is no match [pass]
page/selectors-vue.spec.ts › vue3 › should partially match by props [pass]
page/selectors-vue.spec.ts › vue3 › should query by props combinations [pass]
page/selectors-vue.spec.ts › vue3 › should support all string operators [pass]
page/selectors-vue.spec.ts › vue3 › should support nested vue trees [pass]
page/selectors-vue.spec.ts › vue3 › should support regex [pass]
page/selectors-vue.spec.ts › vue3 › should support truthy querying [pass]
page/selectors-vue.spec.ts › vue3 › should work with multi-root elements (fragments) [pass]
page/selectors-vue.spec.ts › vue3 › should work with multiroot react [pass]
page/selectors-vue.spec.ts › vue3 › should work with multiroot vue inside shadow DOM [pass]
page/selectors-vue.spec.ts › vue3 › should work with single-root elements @smoke [pass]
page/wheel.spec.ts › should dispatch wheel event on svg element [fail]
page/wheel.spec.ts › should dispatch wheel events @smoke [fail]
page/wheel.spec.ts › should dispatch wheel events after context menu was opened [fail]
page/wheel.spec.ts › should dispatch wheel events after popup was opened @smoke [fail]
page/wheel.spec.ts › should scroll horizontally [fail]
page/wheel.spec.ts › should scroll when nobody is listening [pass]
page/wheel.spec.ts › should set the modifiers [fail]
page/wheel.spec.ts › should work when the event is canceled [fail]
page/workers.spec.ts › Page.workers @smoke [timeout]
page/workers.spec.ts › should attribute network activity for worker inside iframe to the iframe [timeout]
page/workers.spec.ts › should clear upon cross-process navigation [timeout]
page/workers.spec.ts › should clear upon navigation [timeout]
page/workers.spec.ts › should dispatch console messages when page has workers [timeout]
page/workers.spec.ts › should emit created and destroyed events [timeout]
page/workers.spec.ts › should evaluate [timeout]
page/workers.spec.ts › should have JSHandles for console logs [fail]
page/workers.spec.ts › should not report console logs from workers twice [pass]
page/workers.spec.ts › should report and intercept network from nested worker [fail]
page/workers.spec.ts › should report console logs [pass]
page/workers.spec.ts › should report errors [timeout]
page/workers.spec.ts › should report network activity [timeout]
page/workers.spec.ts › should report network activity on worker creation [pass]
page/workers.spec.ts › should support extra http headers [timeout]
page/workers.spec.ts › should support offline [timeout]